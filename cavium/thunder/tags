!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BCAST_ACCEPT	thunder_bgx.h	213;"	d
BCK_EN	thunder_bgx.h	146;"	d
BGX0_BLOCK	nic_main.c	444;"	d	file:
BGX1_BLOCK	nic_main.c	445;"	d	file:
BGX_CMRX_CFG	thunder_bgx.h	37;"	d
BGX_CMRX_RX_BP_DROP	thunder_bgx.h	55;"	d
BGX_CMRX_RX_DMAC_CTL	thunder_bgx.h	56;"	d
BGX_CMRX_RX_FIFO_LEN	thunder_bgx.h	57;"	d
BGX_CMRX_RX_ID_MAP	thunder_bgx.h	43;"	d
BGX_CMRX_RX_STAT0	thunder_bgx.h	44;"	d
BGX_CMRX_RX_STAT1	thunder_bgx.h	45;"	d
BGX_CMRX_RX_STAT10	thunder_bgx.h	54;"	d
BGX_CMRX_RX_STAT2	thunder_bgx.h	46;"	d
BGX_CMRX_RX_STAT3	thunder_bgx.h	47;"	d
BGX_CMRX_RX_STAT4	thunder_bgx.h	48;"	d
BGX_CMRX_RX_STAT5	thunder_bgx.h	49;"	d
BGX_CMRX_RX_STAT6	thunder_bgx.h	50;"	d
BGX_CMRX_RX_STAT7	thunder_bgx.h	51;"	d
BGX_CMRX_RX_STAT8	thunder_bgx.h	52;"	d
BGX_CMRX_RX_STAT9	thunder_bgx.h	53;"	d
BGX_CMRX_TX_FIFO_LEN	thunder_bgx.h	67;"	d
BGX_CMRX_TX_STAT0	thunder_bgx.h	68;"	d
BGX_CMRX_TX_STAT1	thunder_bgx.h	69;"	d
BGX_CMRX_TX_STAT10	thunder_bgx.h	78;"	d
BGX_CMRX_TX_STAT11	thunder_bgx.h	79;"	d
BGX_CMRX_TX_STAT12	thunder_bgx.h	80;"	d
BGX_CMRX_TX_STAT13	thunder_bgx.h	81;"	d
BGX_CMRX_TX_STAT14	thunder_bgx.h	82;"	d
BGX_CMRX_TX_STAT15	thunder_bgx.h	83;"	d
BGX_CMRX_TX_STAT16	thunder_bgx.h	84;"	d
BGX_CMRX_TX_STAT17	thunder_bgx.h	85;"	d
BGX_CMRX_TX_STAT2	thunder_bgx.h	70;"	d
BGX_CMRX_TX_STAT3	thunder_bgx.h	71;"	d
BGX_CMRX_TX_STAT4	thunder_bgx.h	72;"	d
BGX_CMRX_TX_STAT5	thunder_bgx.h	73;"	d
BGX_CMRX_TX_STAT6	thunder_bgx.h	74;"	d
BGX_CMRX_TX_STAT7	thunder_bgx.h	75;"	d
BGX_CMRX_TX_STAT8	thunder_bgx.h	76;"	d
BGX_CMRX_TX_STAT9	thunder_bgx.h	77;"	d
BGX_CMR_BIST_STATUS	thunder_bgx.h	65;"	d
BGX_CMR_CHAN_MSK_AND	thunder_bgx.h	64;"	d
BGX_CMR_GLOBAL_CFG	thunder_bgx.h	41;"	d
BGX_CMR_RX_DMACX_CAM	thunder_bgx.h	58;"	d
BGX_CMR_RX_LMACS	thunder_bgx.h	66;"	d
BGX_CMR_RX_STREERING	thunder_bgx.h	62;"	d
BGX_CMR_TX_LMACS	thunder_bgx.h	86;"	d
BGX_GMP_GMI_PRTX_CFG	thunder_bgx.h	168;"	d
BGX_GMP_GMI_RXX_JABBER	thunder_bgx.h	175;"	d
BGX_GMP_GMI_TXX_APPEND	thunder_bgx.h	177;"	d
BGX_GMP_GMI_TXX_BURST	thunder_bgx.h	179;"	d
BGX_GMP_GMI_TXX_MIN_PKT	thunder_bgx.h	180;"	d
BGX_GMP_GMI_TXX_SGMII_CTL	thunder_bgx.h	181;"	d
BGX_GMP_GMI_TXX_SLOT	thunder_bgx.h	178;"	d
BGX_GMP_GMI_TXX_THRESH	thunder_bgx.h	176;"	d
BGX_GMP_PCS_ANX_ADV	thunder_bgx.h	158;"	d
BGX_GMP_PCS_ANX_AN_RESULTS	thunder_bgx.h	159;"	d
BGX_GMP_PCS_LINKX_TIMER	thunder_bgx.h	160;"	d
BGX_GMP_PCS_MISCX_CTL	thunder_bgx.h	163;"	d
BGX_GMP_PCS_MRX_CTL	thunder_bgx.h	149;"	d
BGX_GMP_PCS_MRX_STATUS	thunder_bgx.h	155;"	d
BGX_GMP_PCS_SGM_AN_ADV	thunder_bgx.h	162;"	d
BGX_ID_MASK	thunder_bgx.h	32;"	d
BGX_LMAC_VEC_OFFSET	thunder_bgx.h	189;"	d
BGX_MODE_10G_KR	thunder_bgx.h	/^	BGX_MODE_10G_KR = 3,\/* 1 lane, 10.3125 Gbaud *\/$/;"	e	enum:LMAC_TYPE
BGX_MODE_40G_KR	thunder_bgx.h	/^	BGX_MODE_40G_KR = 4,\/* 4 lanes, 10.3125 Gbaud *\/$/;"	e	enum:LMAC_TYPE
BGX_MODE_DXAUI	thunder_bgx.h	/^	BGX_MODE_DXAUI = 1, \/* 4 lanes, 6.250 Gbaud *\/$/;"	e	enum:LMAC_TYPE
BGX_MODE_INVALID	thunder_bgx.h	/^	BGX_MODE_INVALID = 7,$/;"	e	enum:LMAC_TYPE
BGX_MODE_QSGMII	thunder_bgx.h	/^	BGX_MODE_QSGMII = 6,$/;"	e	enum:LMAC_TYPE
BGX_MODE_RGMII	thunder_bgx.h	/^	BGX_MODE_RGMII = 5,$/;"	e	enum:LMAC_TYPE
BGX_MODE_RXAUI	thunder_bgx.h	/^	BGX_MODE_RXAUI = 2, \/* 2 lanes, 6.250 Gbaud *\/$/;"	e	enum:LMAC_TYPE
BGX_MODE_SGMII	thunder_bgx.h	/^	BGX_MODE_SGMII = 0, \/* 1 lane, 1.250 Gbaud *\/$/;"	e	enum:LMAC_TYPE
BGX_MODE_XAUI	thunder_bgx.h	/^	BGX_MODE_XAUI = 1,  \/* 4 lanes, 3.125 Gbaud *\/$/;"	e	enum:LMAC_TYPE
BGX_MODE_XFI	thunder_bgx.h	/^	BGX_MODE_XFI = 3,   \/* 1 lane, 10.3125 Gbaud *\/$/;"	e	enum:LMAC_TYPE
BGX_MODE_XLAUI	thunder_bgx.h	/^	BGX_MODE_XLAUI = 4, \/* 4 lanes, 10.3125 Gbaud *\/$/;"	e	enum:LMAC_TYPE
BGX_MSIX_PBA_0	thunder_bgx.h	185;"	d
BGX_MSIX_VECTORS	thunder_bgx.h	188;"	d
BGX_MSIX_VEC_0_29_ADDR	thunder_bgx.h	183;"	d
BGX_MSIX_VEC_0_29_CTL	thunder_bgx.h	184;"	d
BGX_MSIX_VEC_SHIFT	thunder_bgx.h	190;"	d
BGX_RX_STATS_COUNT	thunder_bgx.h	234;"	d
BGX_SMUX_CBFC_CTL	thunder_bgx.h	143;"	d
BGX_SMUX_CTL	thunder_bgx.h	140;"	d
BGX_SMUX_RX_CTL	thunder_bgx.h	126;"	d
BGX_SMUX_RX_INT	thunder_bgx.h	124;"	d
BGX_SMUX_RX_JABBER	thunder_bgx.h	125;"	d
BGX_SMUX_TX_APPEND	thunder_bgx.h	128;"	d
BGX_SMUX_TX_CTL	thunder_bgx.h	135;"	d
BGX_SMUX_TX_INT	thunder_bgx.h	134;"	d
BGX_SMUX_TX_MIN_PKT	thunder_bgx.h	131;"	d
BGX_SMUX_TX_PAUSE_PKT_INTERVAL	thunder_bgx.h	132;"	d
BGX_SMUX_TX_PAUSE_PKT_TIME	thunder_bgx.h	130;"	d
BGX_SMUX_TX_PAUSE_ZERO	thunder_bgx.h	133;"	d
BGX_SMUX_TX_THRESH	thunder_bgx.h	139;"	d
BGX_SPUX_AN_ADV	thunder_bgx.h	112;"	d
BGX_SPUX_AN_CONTROL	thunder_bgx.h	109;"	d
BGX_SPUX_BR_PMD_CRTL	thunder_bgx.h	101;"	d
BGX_SPUX_BR_PMD_LD_CUP	thunder_bgx.h	104;"	d
BGX_SPUX_BR_PMD_LD_REP	thunder_bgx.h	105;"	d
BGX_SPUX_BR_PMD_LP_CUP	thunder_bgx.h	103;"	d
BGX_SPUX_BR_STATUS1	thunder_bgx.h	98;"	d
BGX_SPUX_BX_STATUS	thunder_bgx.h	96;"	d
BGX_SPUX_CONTROL1	thunder_bgx.h	88;"	d
BGX_SPUX_FEC_CONTROL	thunder_bgx.h	106;"	d
BGX_SPUX_INT	thunder_bgx.h	116;"	d
BGX_SPUX_INT_ENA_W1C	thunder_bgx.h	118;"	d
BGX_SPUX_INT_ENA_W1S	thunder_bgx.h	119;"	d
BGX_SPUX_INT_W1S	thunder_bgx.h	117;"	d
BGX_SPUX_MISC_CONTROL	thunder_bgx.h	113;"	d
BGX_SPUX_STATUS1	thunder_bgx.h	92;"	d
BGX_SPUX_STATUS2	thunder_bgx.h	94;"	d
BGX_SPU_DBG_CONTROL	thunder_bgx.h	120;"	d
BGX_TX_STATS_COUNT	thunder_bgx.h	235;"	d
CAM_ACCEPT	thunder_bgx.h	214;"	d
CLKRX_BYP	thunder_xcv.c	37;"	d	file:
CLKTX_BYP	thunder_xcv.c	38;"	d	file:
CLK_RESET	thunder_xcv.c	29;"	d	file:
CMP_QSIZE	nicvf_queues.h	75;"	d
CMP_QUEUE_CQE_THRESH	nicvf_queues.h	79;"	d
CMP_QUEUE_DESC_SIZE	nicvf_queues.h	120;"	d
CMP_QUEUE_LEN	nicvf_queues.h	76;"	d
CMP_QUEUE_PIPELINE_RSVD	nicvf_queues.h	85;"	d
CMP_QUEUE_SIZE0	nicvf_queues.h	52;"	d
CMP_QUEUE_SIZE1	nicvf_queues.h	53;"	d
CMP_QUEUE_SIZE2	nicvf_queues.h	54;"	d
CMP_QUEUE_SIZE3	nicvf_queues.h	55;"	d
CMP_QUEUE_SIZE4	nicvf_queues.h	56;"	d
CMP_QUEUE_SIZE5	nicvf_queues.h	57;"	d
CMP_QUEUE_SIZE6	nicvf_queues.h	58;"	d
CMP_QUEUE_TIMER_THRESH	nicvf_queues.h	80;"	d
CMRX_INT	thunder_bgx.h	192;"	d
CMR_EN	thunder_bgx.h	40;"	d
CMR_GLOBAL_CFG_FCS_STRIP	thunder_bgx.h	42;"	d
CMR_MEM_INT	thunder_bgx.h	199;"	d
CMR_PKT_RX_EN	thunder_bgx.h	39;"	d
CMR_PKT_TX_EN	thunder_bgx.h	38;"	d
COMP_EN	thunder_xcv.c	31;"	d	file:
CPI_ALG_DIFF	q_struct.h	/^	CPI_ALG_DIFF = 0x3,$/;"	e	enum:cpi_algorithm_type
CPI_ALG_NONE	q_struct.h	/^	CPI_ALG_NONE = 0x0,$/;"	e	enum:cpi_algorithm_type
CPI_ALG_VLAN	q_struct.h	/^	CPI_ALG_VLAN = 0x1,$/;"	e	enum:cpi_algorithm_type
CPI_ALG_VLAN16	q_struct.h	/^	CPI_ALG_VLAN16 = 0x2,$/;"	e	enum:cpi_algorithm_type
CQE_RX_ERRLVL_L2	q_struct.h	/^	CQE_RX_ERRLVL_L2 = 0x1,$/;"	e	enum:cqe_rx_err_level
CQE_RX_ERRLVL_L3	q_struct.h	/^	CQE_RX_ERRLVL_L3 = 0x2,$/;"	e	enum:cqe_rx_err_level
CQE_RX_ERRLVL_L4	q_struct.h	/^	CQE_RX_ERRLVL_L4 = 0x3,$/;"	e	enum:cqe_rx_err_level
CQE_RX_ERRLVL_RE	q_struct.h	/^	CQE_RX_ERRLVL_RE = 0x0,$/;"	e	enum:cqe_rx_err_level
CQE_RX_ERR_IP_CHK	q_struct.h	/^	CQE_RX_ERR_IP_CHK = 0x42,$/;"	e	enum:cqe_rx_err_opcode
CQE_RX_ERR_IP_HOP	q_struct.h	/^	CQE_RX_ERR_IP_HOP = 0x45,$/;"	e	enum:cqe_rx_err_opcode
CQE_RX_ERR_IP_MAL	q_struct.h	/^	CQE_RX_ERR_IP_MAL = 0x43,$/;"	e	enum:cqe_rx_err_opcode
CQE_RX_ERR_IP_MALD	q_struct.h	/^	CQE_RX_ERR_IP_MALD = 0x44,$/;"	e	enum:cqe_rx_err_opcode
CQE_RX_ERR_IP_NOT	q_struct.h	/^	CQE_RX_ERR_IP_NOT = 0x41,$/;"	e	enum:cqe_rx_err_opcode
CQE_RX_ERR_L2_FRAGMENT	q_struct.h	/^	CQE_RX_ERR_L2_FRAGMENT = 0x20,$/;"	e	enum:cqe_rx_err_opcode
CQE_RX_ERR_L2_LENMISM	q_struct.h	/^	CQE_RX_ERR_L2_LENMISM = 0x27,$/;"	e	enum:cqe_rx_err_opcode
CQE_RX_ERR_L2_MAL	q_struct.h	/^	CQE_RX_ERR_L2_MAL = 0x24,$/;"	e	enum:cqe_rx_err_opcode
CQE_RX_ERR_L2_OVERRUN	q_struct.h	/^	CQE_RX_ERR_L2_OVERRUN = 0x21,$/;"	e	enum:cqe_rx_err_opcode
CQE_RX_ERR_L2_OVERSIZE	q_struct.h	/^	CQE_RX_ERR_L2_OVERSIZE = 0x25,$/;"	e	enum:cqe_rx_err_opcode
CQE_RX_ERR_L2_PCLP	q_struct.h	/^	CQE_RX_ERR_L2_PCLP = 0x28,$/;"	e	enum:cqe_rx_err_opcode
CQE_RX_ERR_L2_PFCS	q_struct.h	/^	CQE_RX_ERR_L2_PFCS = 0x22,$/;"	e	enum:cqe_rx_err_opcode
CQE_RX_ERR_L2_PUNY	q_struct.h	/^	CQE_RX_ERR_L2_PUNY = 0x23,$/;"	e	enum:cqe_rx_err_opcode
CQE_RX_ERR_L2_UNDERSIZE	q_struct.h	/^	CQE_RX_ERR_L2_UNDERSIZE = 0x26,$/;"	e	enum:cqe_rx_err_opcode
CQE_RX_ERR_L3_ICRC	q_struct.h	/^	CQE_RX_ERR_L3_ICRC = 0x46,$/;"	e	enum:cqe_rx_err_opcode
CQE_RX_ERR_L3_PCLP	q_struct.h	/^	CQE_RX_ERR_L3_PCLP = 0x47,$/;"	e	enum:cqe_rx_err_opcode
CQE_RX_ERR_L4_CHK	q_struct.h	/^	CQE_RX_ERR_L4_CHK = 0x62,$/;"	e	enum:cqe_rx_err_opcode
CQE_RX_ERR_L4_MAL	q_struct.h	/^	CQE_RX_ERR_L4_MAL = 0x61,$/;"	e	enum:cqe_rx_err_opcode
CQE_RX_ERR_L4_PCLP	q_struct.h	/^	CQE_RX_ERR_L4_PCLP = 0x67,$/;"	e	enum:cqe_rx_err_opcode
CQE_RX_ERR_L4_PORT	q_struct.h	/^	CQE_RX_ERR_L4_PORT = 0x64,$/;"	e	enum:cqe_rx_err_opcode
CQE_RX_ERR_PREL2_ERR	q_struct.h	/^	CQE_RX_ERR_PREL2_ERR = 0x1f,$/;"	e	enum:cqe_rx_err_opcode
CQE_RX_ERR_RBDR_TRUNC	q_struct.h	/^	CQE_RX_ERR_RBDR_TRUNC = 0x70,$/;"	e	enum:cqe_rx_err_opcode
CQE_RX_ERR_RE_FCS	q_struct.h	/^	CQE_RX_ERR_RE_FCS = 0x7,$/;"	e	enum:cqe_rx_err_opcode
CQE_RX_ERR_RE_JABBER	q_struct.h	/^	CQE_RX_ERR_RE_JABBER = 0x2,$/;"	e	enum:cqe_rx_err_opcode
CQE_RX_ERR_RE_NONE	q_struct.h	/^	CQE_RX_ERR_RE_NONE = 0x0,$/;"	e	enum:cqe_rx_err_opcode
CQE_RX_ERR_RE_PARTIAL	q_struct.h	/^	CQE_RX_ERR_RE_PARTIAL = 0x1,$/;"	e	enum:cqe_rx_err_opcode
CQE_RX_ERR_RE_RX_CTL	q_struct.h	/^	CQE_RX_ERR_RE_RX_CTL = 0xb,$/;"	e	enum:cqe_rx_err_opcode
CQE_RX_ERR_RE_TERMINATE	q_struct.h	/^	CQE_RX_ERR_RE_TERMINATE = 0x9,$/;"	e	enum:cqe_rx_err_opcode
CQE_RX_ERR_TCP_FLAG	q_struct.h	/^	CQE_RX_ERR_TCP_FLAG = 0x65,$/;"	e	enum:cqe_rx_err_opcode
CQE_RX_ERR_TCP_OFFSET	q_struct.h	/^	CQE_RX_ERR_TCP_OFFSET = 0x66,$/;"	e	enum:cqe_rx_err_opcode
CQE_RX_ERR_UDP_LEN	q_struct.h	/^	CQE_RX_ERR_UDP_LEN = 0x63,$/;"	e	enum:cqe_rx_err_opcode
CQE_RX_STATUS_INVALID_TCP_CNXT	q_struct.h	/^	CQE_RX_STATUS_INVALID_TCP_CNXT = 0x0F,$/;"	e	enum:cqe_rx_tcp_status
CQE_RX_STATUS_VALID_TCP_CNXT	q_struct.h	/^	CQE_RX_STATUS_VALID_TCP_CNXT = 0x00,$/;"	e	enum:cqe_rx_tcp_status
CQE_RX_TCP_END_FIN_FLAG_DET	q_struct.h	/^	CQE_RX_TCP_END_FIN_FLAG_DET = 0,$/;"	e	enum:cqe_rx_tcp_end_reason
CQE_RX_TCP_END_INVALID_FLAG	q_struct.h	/^	CQE_RX_TCP_END_INVALID_FLAG = 1,$/;"	e	enum:cqe_rx_tcp_end_reason
CQE_RX_TCP_END_OUT_OF_SEQ	q_struct.h	/^	CQE_RX_TCP_END_OUT_OF_SEQ = 3,$/;"	e	enum:cqe_rx_tcp_end_reason
CQE_RX_TCP_END_PKT_ERR	q_struct.h	/^	CQE_RX_TCP_END_PKT_ERR = 4,$/;"	e	enum:cqe_rx_tcp_end_reason
CQE_RX_TCP_END_QS_DISABLED	q_struct.h	/^	CQE_RX_TCP_END_QS_DISABLED = 0x0F,$/;"	e	enum:cqe_rx_tcp_end_reason
CQE_RX_TCP_END_TIMEOUT	q_struct.h	/^	CQE_RX_TCP_END_TIMEOUT = 2,$/;"	e	enum:cqe_rx_tcp_end_reason
CQE_SEND_STATUS_CRC_SEQ_ERR	q_struct.h	/^	CQE_SEND_STATUS_CRC_SEQ_ERR = 0x81,$/;"	e	enum:cqe_send_status
CQE_SEND_STATUS_CSUM_OVERFLOW	q_struct.h	/^	CQE_SEND_STATUS_CSUM_OVERFLOW = 0x8B,$/;"	e	enum:cqe_send_status
CQE_SEND_STATUS_CSUM_OVERLAP	q_struct.h	/^	CQE_SEND_STATUS_CSUM_OVERLAP = 0x8A,$/;"	e	enum:cqe_send_status
CQE_SEND_STATUS_DATA_FAULT	q_struct.h	/^	CQE_SEND_STATUS_DATA_FAULT = 0x86,$/;"	e	enum:cqe_send_status
CQE_SEND_STATUS_DATA_SEQ_ERR	q_struct.h	/^	CQE_SEND_STATUS_DATA_SEQ_ERR = 0x82,$/;"	e	enum:cqe_send_status
CQE_SEND_STATUS_DESC_FAULT	q_struct.h	/^	CQE_SEND_STATUS_DESC_FAULT = 0x01,$/;"	e	enum:cqe_send_status
CQE_SEND_STATUS_GOOD	q_struct.h	/^	CQE_SEND_STATUS_GOOD = 0x00,$/;"	e	enum:cqe_send_status
CQE_SEND_STATUS_HDR_CONS_ERR	q_struct.h	/^	CQE_SEND_STATUS_HDR_CONS_ERR = 0x11,$/;"	e	enum:cqe_send_status
CQE_SEND_STATUS_IMM_SIZE_OFLOW	q_struct.h	/^	CQE_SEND_STATUS_IMM_SIZE_OFLOW = 0x80,$/;"	e	enum:cqe_send_status
CQE_SEND_STATUS_LOCK_UFLOW	q_struct.h	/^	CQE_SEND_STATUS_LOCK_UFLOW = 0x85,$/;"	e	enum:cqe_send_status
CQE_SEND_STATUS_LOCK_VIOL	q_struct.h	/^	CQE_SEND_STATUS_LOCK_VIOL = 0x84,$/;"	e	enum:cqe_send_status
CQE_SEND_STATUS_MEM_FAULT	q_struct.h	/^	CQE_SEND_STATUS_MEM_FAULT = 0x89,$/;"	e	enum:cqe_send_status
CQE_SEND_STATUS_MEM_SEQ_ERR	q_struct.h	/^	CQE_SEND_STATUS_MEM_SEQ_ERR = 0x83,$/;"	e	enum:cqe_send_status
CQE_SEND_STATUS_SUBDESC_ERR	q_struct.h	/^	CQE_SEND_STATUS_SUBDESC_ERR = 0x12,$/;"	e	enum:cqe_send_status
CQE_SEND_STATUS_TSTMP_CONFLICT	q_struct.h	/^	CQE_SEND_STATUS_TSTMP_CONFLICT = 0x87,$/;"	e	enum:cqe_send_status
CQE_SEND_STATUS_TSTMP_TIMEOUT	q_struct.h	/^	CQE_SEND_STATUS_TSTMP_TIMEOUT = 0x88,$/;"	e	enum:cqe_send_status
CQE_TYPE_INVALID	q_struct.h	/^	CQE_TYPE_INVALID = 0x0,$/;"	e	enum:cqe_type
CQE_TYPE_RX	q_struct.h	/^	CQE_TYPE_RX = 0x2,$/;"	e	enum:cqe_type
CQE_TYPE_RX_SPLIT	q_struct.h	/^	CQE_TYPE_RX_SPLIT = 0x3,$/;"	e	enum:cqe_type
CQE_TYPE_RX_TCP	q_struct.h	/^	CQE_TYPE_RX_TCP = 0x4,$/;"	e	enum:cqe_type
CQE_TYPE_SEND	q_struct.h	/^	CQE_TYPE_SEND = 0x8,$/;"	e	enum:cqe_type
CQE_TYPE_SEND_PTP	q_struct.h	/^	CQE_TYPE_SEND_PTP = 0x9,$/;"	e	enum:cqe_type
CQ_CQE_COUNT	nicvf_queues.h	318;"	d
CQ_ERRLVL_L2	nicvf_queues.h	/^	CQ_ERRLVL_L2,$/;"	e	enum:CQ_RX_ERRLVL_E
CQ_ERRLVL_L3	nicvf_queues.h	/^	CQ_ERRLVL_L3,$/;"	e	enum:CQ_RX_ERRLVL_E
CQ_ERRLVL_L4	nicvf_queues.h	/^	CQ_ERRLVL_L4,$/;"	e	enum:CQ_RX_ERRLVL_E
CQ_ERRLVL_MAC	nicvf_queues.h	/^	CQ_ERRLVL_MAC,$/;"	e	enum:CQ_RX_ERRLVL_E
CQ_ERR_MASK	nicvf_queues.h	320;"	d
CQ_RX_ERRLVL_E	nicvf_queues.h	/^enum CQ_RX_ERRLVL_E {$/;"	g
CQ_RX_ERROP_E	nicvf_queues.h	/^enum CQ_RX_ERROP_E {$/;"	g
CQ_RX_ERROP_IP_CSUM_ERR	nicvf_queues.h	/^	CQ_RX_ERROP_IP_CSUM_ERR = 0x42,$/;"	e	enum:CQ_RX_ERROP_E
CQ_RX_ERROP_IP_HOP	nicvf_queues.h	/^	CQ_RX_ERROP_IP_HOP = 0x45,$/;"	e	enum:CQ_RX_ERROP_E
CQ_RX_ERROP_IP_MAL	nicvf_queues.h	/^	CQ_RX_ERROP_IP_MAL = 0x43,$/;"	e	enum:CQ_RX_ERROP_E
CQ_RX_ERROP_IP_MALD	nicvf_queues.h	/^	CQ_RX_ERROP_IP_MALD = 0x44,$/;"	e	enum:CQ_RX_ERROP_E
CQ_RX_ERROP_IP_NOT	nicvf_queues.h	/^	CQ_RX_ERROP_IP_NOT = 0x41,$/;"	e	enum:CQ_RX_ERROP_E
CQ_RX_ERROP_L2_FRAGMENT	nicvf_queues.h	/^	CQ_RX_ERROP_L2_FRAGMENT = 0x20,$/;"	e	enum:CQ_RX_ERROP_E
CQ_RX_ERROP_L2_LENMISM	nicvf_queues.h	/^	CQ_RX_ERROP_L2_LENMISM = 0x27,$/;"	e	enum:CQ_RX_ERROP_E
CQ_RX_ERROP_L2_MAL	nicvf_queues.h	/^	CQ_RX_ERROP_L2_MAL = 0x24,$/;"	e	enum:CQ_RX_ERROP_E
CQ_RX_ERROP_L2_OVERRUN	nicvf_queues.h	/^	CQ_RX_ERROP_L2_OVERRUN = 0x21,$/;"	e	enum:CQ_RX_ERROP_E
CQ_RX_ERROP_L2_OVERSIZE	nicvf_queues.h	/^	CQ_RX_ERROP_L2_OVERSIZE = 0x25,$/;"	e	enum:CQ_RX_ERROP_E
CQ_RX_ERROP_L2_PCLP	nicvf_queues.h	/^	CQ_RX_ERROP_L2_PCLP = 0x28,$/;"	e	enum:CQ_RX_ERROP_E
CQ_RX_ERROP_L2_PFCS	nicvf_queues.h	/^	CQ_RX_ERROP_L2_PFCS = 0x22,$/;"	e	enum:CQ_RX_ERROP_E
CQ_RX_ERROP_L2_PUNY	nicvf_queues.h	/^	CQ_RX_ERROP_L2_PUNY = 0x23,$/;"	e	enum:CQ_RX_ERROP_E
CQ_RX_ERROP_L2_UNDERSIZE	nicvf_queues.h	/^	CQ_RX_ERROP_L2_UNDERSIZE = 0x26,$/;"	e	enum:CQ_RX_ERROP_E
CQ_RX_ERROP_L3_ICRC	nicvf_queues.h	/^	CQ_RX_ERROP_L3_ICRC = 0x46,$/;"	e	enum:CQ_RX_ERROP_E
CQ_RX_ERROP_L3_PCLP	nicvf_queues.h	/^	CQ_RX_ERROP_L3_PCLP = 0x47,$/;"	e	enum:CQ_RX_ERROP_E
CQ_RX_ERROP_L4_CHK	nicvf_queues.h	/^	CQ_RX_ERROP_L4_CHK = 0x62,$/;"	e	enum:CQ_RX_ERROP_E
CQ_RX_ERROP_L4_MAL	nicvf_queues.h	/^	CQ_RX_ERROP_L4_MAL = 0x61,$/;"	e	enum:CQ_RX_ERROP_E
CQ_RX_ERROP_L4_PCLP	nicvf_queues.h	/^	CQ_RX_ERROP_L4_PCLP = 0x67,$/;"	e	enum:CQ_RX_ERROP_E
CQ_RX_ERROP_L4_PORT	nicvf_queues.h	/^	CQ_RX_ERROP_L4_PORT = 0x64,$/;"	e	enum:CQ_RX_ERROP_E
CQ_RX_ERROP_PREL2_ERR	nicvf_queues.h	/^	CQ_RX_ERROP_PREL2_ERR = 0x1f,$/;"	e	enum:CQ_RX_ERROP_E
CQ_RX_ERROP_RBDR_TRUNC	nicvf_queues.h	/^	CQ_RX_ERROP_RBDR_TRUNC = 0x70,$/;"	e	enum:CQ_RX_ERROP_E
CQ_RX_ERROP_RE_FCS	nicvf_queues.h	/^	CQ_RX_ERROP_RE_FCS = 0x7,$/;"	e	enum:CQ_RX_ERROP_E
CQ_RX_ERROP_RE_JABBER	nicvf_queues.h	/^	CQ_RX_ERROP_RE_JABBER = 0x2,$/;"	e	enum:CQ_RX_ERROP_E
CQ_RX_ERROP_RE_NONE	nicvf_queues.h	/^	CQ_RX_ERROP_RE_NONE = 0x0,$/;"	e	enum:CQ_RX_ERROP_E
CQ_RX_ERROP_RE_PARTIAL	nicvf_queues.h	/^	CQ_RX_ERROP_RE_PARTIAL = 0x1,$/;"	e	enum:CQ_RX_ERROP_E
CQ_RX_ERROP_RE_RX_CTL	nicvf_queues.h	/^	CQ_RX_ERROP_RE_RX_CTL = 0xb,$/;"	e	enum:CQ_RX_ERROP_E
CQ_RX_ERROP_RE_TERMINATE	nicvf_queues.h	/^	CQ_RX_ERROP_RE_TERMINATE = 0x9,$/;"	e	enum:CQ_RX_ERROP_E
CQ_RX_ERROP_TCP_FLAG	nicvf_queues.h	/^	CQ_RX_ERROP_TCP_FLAG = 0x65,$/;"	e	enum:CQ_RX_ERROP_E
CQ_RX_ERROP_TCP_OFFSET	nicvf_queues.h	/^	CQ_RX_ERROP_TCP_OFFSET = 0x66,$/;"	e	enum:CQ_RX_ERROP_E
CQ_RX_ERROP_UDP_LEN	nicvf_queues.h	/^	CQ_RX_ERROP_UDP_LEN = 0x63,$/;"	e	enum:CQ_RX_ERROP_E
CQ_TX_ERROP_CK_OFLOW	nicvf_queues.h	/^	CQ_TX_ERROP_CK_OFLOW = 0x89,$/;"	e	enum:CQ_TX_ERROP_E
CQ_TX_ERROP_CK_OVERLAP	nicvf_queues.h	/^	CQ_TX_ERROP_CK_OVERLAP = 0x88,$/;"	e	enum:CQ_TX_ERROP_E
CQ_TX_ERROP_DATA_FAULT	nicvf_queues.h	/^	CQ_TX_ERROP_DATA_FAULT = 0x84,$/;"	e	enum:CQ_TX_ERROP_E
CQ_TX_ERROP_DATA_SEQUENCE_ERR	nicvf_queues.h	/^	CQ_TX_ERROP_DATA_SEQUENCE_ERR = 0x81,$/;"	e	enum:CQ_TX_ERROP_E
CQ_TX_ERROP_DESC_FAULT	nicvf_queues.h	/^	CQ_TX_ERROP_DESC_FAULT = 0x10,$/;"	e	enum:CQ_TX_ERROP_E
CQ_TX_ERROP_E	nicvf_queues.h	/^enum CQ_TX_ERROP_E {$/;"	g
CQ_TX_ERROP_ENUM_LAST	nicvf_queues.h	/^	CQ_TX_ERROP_ENUM_LAST = 0x8a,$/;"	e	enum:CQ_TX_ERROP_E
CQ_TX_ERROP_GOOD	nicvf_queues.h	/^	CQ_TX_ERROP_GOOD = 0x0,$/;"	e	enum:CQ_TX_ERROP_E
CQ_TX_ERROP_HDR_CONS_ERR	nicvf_queues.h	/^	CQ_TX_ERROP_HDR_CONS_ERR = 0x11,$/;"	e	enum:CQ_TX_ERROP_E
CQ_TX_ERROP_IMM_SIZE_OFLOW	nicvf_queues.h	/^	CQ_TX_ERROP_IMM_SIZE_OFLOW = 0x80,$/;"	e	enum:CQ_TX_ERROP_E
CQ_TX_ERROP_LOCK_VIOL	nicvf_queues.h	/^	CQ_TX_ERROP_LOCK_VIOL = 0x83,$/;"	e	enum:CQ_TX_ERROP_E
CQ_TX_ERROP_MAX_SIZE_VIOL	nicvf_queues.h	/^	CQ_TX_ERROP_MAX_SIZE_VIOL = 0x13,$/;"	e	enum:CQ_TX_ERROP_E
CQ_TX_ERROP_MEM_FAULT	nicvf_queues.h	/^	CQ_TX_ERROP_MEM_FAULT = 0x87,$/;"	e	enum:CQ_TX_ERROP_E
CQ_TX_ERROP_MEM_SEQUENCE_ERR	nicvf_queues.h	/^	CQ_TX_ERROP_MEM_SEQUENCE_ERR = 0x82,$/;"	e	enum:CQ_TX_ERROP_E
CQ_TX_ERROP_SUBDC_ERR	nicvf_queues.h	/^	CQ_TX_ERROP_SUBDC_ERR = 0x12,$/;"	e	enum:CQ_TX_ERROP_E
CQ_TX_ERROP_TSTMP_CONFLICT	nicvf_queues.h	/^	CQ_TX_ERROP_TSTMP_CONFLICT = 0x85,$/;"	e	enum:CQ_TX_ERROP_E
CQ_TX_ERROP_TSTMP_TIMEOUT	nicvf_queues.h	/^	CQ_TX_ERROP_TSTMP_TIMEOUT = 0x86,$/;"	e	enum:CQ_TX_ERROP_E
CQ_WR_DISABLE	nicvf_queues.h	316;"	d
CQ_WR_FAULT	nicvf_queues.h	317;"	d
CQ_WR_FULL	nicvf_queues.h	315;"	d
DEFAULT_NUM_VF_ENABLED	nic.h	40;"	d
DEFAULT_PAUSE_TIME	thunder_bgx.h	30;"	d
DEFAULT_RBDR_CNT	nicvf_queues.h	61;"	d
DLL_RESET	thunder_xcv.c	30;"	d	file:
DMA_BUFFER_LEN	nicvf_queues.h	91;"	d
DRP_EN	thunder_bgx.h	147;"	d
DRV_BYP	thunder_xcv.c	40;"	d	file:
DRV_NAME	nic_main.c	21;"	d	file:
DRV_NAME	nicvf_ethtool.c	19;"	d	file:
DRV_NAME	nicvf_main.c	29;"	d	file:
DRV_NAME	thunder_bgx.c	24;"	d	file:
DRV_NAME	thunder_xcv.c	23;"	d	file:
DRV_VERSION	nic_main.c	/^MODULE_VERSION(DRV_VERSION);$/;"	v
DRV_VERSION	nic_main.c	22;"	d	file:
DRV_VERSION	nicvf_ethtool.c	20;"	d	file:
DRV_VERSION	nicvf_main.c	/^MODULE_VERSION(DRV_VERSION);$/;"	v
DRV_VERSION	nicvf_main.c	30;"	d	file:
DRV_VERSION	thunder_bgx.c	/^MODULE_VERSION(DRV_VERSION);$/;"	v
DRV_VERSION	thunder_bgx.c	25;"	d	file:
DRV_VERSION	thunder_xcv.c	/^MODULE_VERSION(DRV_VERSION);$/;"	v
DRV_VERSION	thunder_xcv.c	24;"	d	file:
ETYPE_ALG_ENDPARSE	q_struct.h	/^	ETYPE_ALG_ENDPARSE = 0x2,$/;"	e	enum:ether_type_algorithm
ETYPE_ALG_NONE	q_struct.h	/^	ETYPE_ALG_NONE = 0x0,$/;"	e	enum:ether_type_algorithm
ETYPE_ALG_SKIP	q_struct.h	/^	ETYPE_ALG_SKIP = 0x1,$/;"	e	enum:ether_type_algorithm
ETYPE_ALG_VLAN	q_struct.h	/^	ETYPE_ALG_VLAN = 0x3,$/;"	e	enum:ether_type_algorithm
ETYPE_ALG_VLAN_STRIP	q_struct.h	/^	ETYPE_ALG_VLAN_STRIP = 0x4,$/;"	e	enum:ether_type_algorithm
ET_PROT	nic_reg.h	44;"	d
ET_PROT_DEF	nic_reg.h	51;"	d
GET_CQ_DESC	nicvf_queues.h	311;"	d
GET_RBDR_DESC	nicvf_queues.h	307;"	d
GET_RQ_STATS	nicvf_queues.c	1789;"	d	file:
GET_RX_STATS	nicvf_main.c	1518;"	d	file:
GET_SQ_DESC	nicvf_queues.h	309;"	d
GET_SQ_STATS	nicvf_queues.c	1802;"	d	file:
GET_TX_STATS	nicvf_main.c	1520;"	d	file:
GMI_PORT_CFG_DUPLEX	thunder_bgx.h	170;"	d
GMI_PORT_CFG_RX_IDLE	thunder_bgx.h	173;"	d
GMI_PORT_CFG_SLOT_TIME	thunder_bgx.h	171;"	d
GMI_PORT_CFG_SPEED	thunder_bgx.h	169;"	d
GMI_PORT_CFG_SPEED_MSB	thunder_bgx.h	172;"	d
GMI_PORT_CFG_TX_IDLE	thunder_bgx.h	174;"	d
GMPX_GMI_RX_INT	thunder_bgx.h	197;"	d
GMPX_GMI_TX_INT	thunder_bgx.h	198;"	d
GMPX_PCS_INT	thunder_bgx.h	196;"	d
INTR_MASK	nic_main.c	110;"	d	file:
IPV4_PROT	nic_reg.h	43;"	d
IPV4_PROT_DEF	nic_reg.h	50;"	d
IPV6_PROT	nic_reg.h	42;"	d
IPV6_PROT_DEF	nic_reg.h	49;"	d
L3TYPE_ET_STOP	q_struct.h	/^	L3TYPE_ET_STOP = 0x0D,$/;"	e	enum:layer3_type
L3TYPE_GRH	q_struct.h	/^	L3TYPE_GRH = 0x01,$/;"	e	enum:layer3_type
L3TYPE_IPV4	q_struct.h	/^	L3TYPE_IPV4 = 0x04,$/;"	e	enum:layer3_type
L3TYPE_IPV4_OPTIONS	q_struct.h	/^	L3TYPE_IPV4_OPTIONS = 0x05,$/;"	e	enum:layer3_type
L3TYPE_IPV6	q_struct.h	/^	L3TYPE_IPV6 = 0x06,$/;"	e	enum:layer3_type
L3TYPE_IPV6_OPTIONS	q_struct.h	/^	L3TYPE_IPV6_OPTIONS = 0x07,$/;"	e	enum:layer3_type
L3TYPE_NONE	q_struct.h	/^	L3TYPE_NONE = 0x00,$/;"	e	enum:layer3_type
L3TYPE_OTHER	q_struct.h	/^	L3TYPE_OTHER = 0x0E,$/;"	e	enum:layer3_type
L4TYPE_GRE	q_struct.h	/^	L4TYPE_GRE = 0x07,$/;"	e	enum:layer4_type
L4TYPE_IPCOMP	q_struct.h	/^	L4TYPE_IPCOMP = 0x03,$/;"	e	enum:layer4_type
L4TYPE_IPFRAG	q_struct.h	/^	L4TYPE_IPFRAG = 0x02,$/;"	e	enum:layer4_type
L4TYPE_IPSEC_ESP	q_struct.h	/^	L4TYPE_IPSEC_ESP = 0x01,$/;"	e	enum:layer4_type
L4TYPE_NONE	q_struct.h	/^	L4TYPE_NONE = 0x00,$/;"	e	enum:layer4_type
L4TYPE_OTHER	q_struct.h	/^	L4TYPE_OTHER = 0x0E,$/;"	e	enum:layer4_type
L4TYPE_ROCE_BTH	q_struct.h	/^	L4TYPE_ROCE_BTH = 0x08,$/;"	e	enum:layer4_type
L4TYPE_SCTP	q_struct.h	/^	L4TYPE_SCTP = 0x06,$/;"	e	enum:layer4_type
L4TYPE_TCP	q_struct.h	/^	L4TYPE_TCP = 0x04,$/;"	e	enum:layer4_type
L4TYPE_UDP	q_struct.h	/^	L4TYPE_UDP = 0x05,$/;"	e	enum:layer4_type
LMAC_INTR_LINK_DOWN	thunder_bgx.h	203;"	d
LMAC_INTR_LINK_UP	thunder_bgx.h	202;"	d
LMAC_TYPE	thunder_bgx.h	/^enum LMAC_TYPE {$/;"	g
MAX_BGX_CHANS_PER_LMAC	thunder_bgx.h	27;"	d
MAX_BGX_PER_CN81XX	thunder_bgx.h	24;"	d
MAX_BGX_PER_CN83XX	thunder_bgx.h	25;"	d
MAX_BGX_PER_CN88XX	thunder_bgx.h	23;"	d
MAX_BGX_THUNDER	thunder_bgx.h	22;"	d
MAX_CMP_QUEUES_PER_QS	nicvf_queues.h	20;"	d
MAX_CMP_QUEUE_LEN	nicvf_queues.h	78;"	d
MAX_CQES_FOR_TX	nicvf_queues.h	95;"	d
MAX_CQE_PER_PKT_XMIT	nicvf_queues.h	70;"	d
MAX_DMAC_PER_LMAC	thunder_bgx.h	28;"	d
MAX_DMAC_PER_LMAC_TNS_BYPASS_MODE	thunder_bgx.h	34;"	d
MAX_FRAME_SIZE	thunder_bgx.h	29;"	d
MAX_LMAC_PER_BGX	thunder_bgx.h	26;"	d
MAX_NUM_VFS_SUPPORTED	nic.h	39;"	d
MAX_QUEUES_PER_QSET	nic.h	272;"	d
MAX_QUEUE_SET	nicvf_queues.h	16;"	d
MAX_RCV_BUF_COUNT	nicvf_queues.h	89;"	d
MAX_RCV_BUF_DESC_RINGS_PER_QS	nicvf_queues.h	18;"	d
MAX_RCV_QUEUES_PER_QS	nicvf_queues.h	17;"	d
MAX_SND_QUEUES_PER_QS	nicvf_queues.h	19;"	d
MAX_SND_QUEUE_LEN	nicvf_queues.h	66;"	d
MAX_SQS_PER_VF	nic.h	293;"	d
MAX_SQS_PER_VF_SINGLE_NODE	nic.h	292;"	d
MCAST_MODE	thunder_bgx.h	/^enum MCAST_MODE {$/;"	g
MCAST_MODE_ACCEPT	thunder_bgx.h	/^		MCAST_MODE_ACCEPT,$/;"	e	enum:MCAST_MODE
MCAST_MODE_CAM_FILTER	thunder_bgx.h	/^		MCAST_MODE_CAM_FILTER,$/;"	e	enum:MCAST_MODE
MCAST_MODE_REJECT	thunder_bgx.h	/^		MCAST_MODE_REJECT,$/;"	e	enum:MCAST_MODE
MIN_CMP_QUEUE_LEN	nicvf_queues.h	77;"	d
MIN_SND_QUEUE_LEN	nicvf_queues.h	65;"	d
MIN_SQ_DESC_PER_PKT_XMIT	nicvf_queues.h	68;"	d
NICPF_CLK_PER_INT_TICK	nic.h	113;"	d
NICPF_CQM_MIN_DROP_LEVEL	nic.h	105;"	d
NICVF_ALIGNED_ADDR	nicvf_queues.h	128;"	d
NICVF_CQ_BASE_ALIGN_BYTES	nicvf_queues.h	125;"	d
NICVF_CQ_RESET	nicvf_queues.h	134;"	d
NICVF_DRV_STAT	nicvf_ethtool.c	32;"	d	file:
NICVF_HW_STAT	nicvf_ethtool.c	27;"	d	file:
NICVF_INTR_CQ	nic.h	59;"	d
NICVF_INTR_CQ_MASK	nic.h	75;"	d
NICVF_INTR_CQ_SHIFT	nic.h	67;"	d
NICVF_INTR_ID_CQ	nicvf_queues.h	23;"	d
NICVF_INTR_ID_MISC	nicvf_queues.h	26;"	d
NICVF_INTR_ID_QS_ERR	nicvf_queues.h	27;"	d
NICVF_INTR_ID_RBDR	nicvf_queues.h	25;"	d
NICVF_INTR_ID_SQ	nicvf_queues.h	24;"	d
NICVF_INTR_MBOX	nic.h	64;"	d
NICVF_INTR_MBOX_MASK	nic.h	80;"	d
NICVF_INTR_MBOX_SHIFT	nic.h	72;"	d
NICVF_INTR_PKT_DROP	nic.h	62;"	d
NICVF_INTR_PKT_DROP_MASK	nic.h	78;"	d
NICVF_INTR_PKT_DROP_SHIFT	nic.h	70;"	d
NICVF_INTR_QS_ERR	nic.h	65;"	d
NICVF_INTR_QS_ERR_MASK	nic.h	81;"	d
NICVF_INTR_QS_ERR_SHIFT	nic.h	73;"	d
NICVF_INTR_RBDR	nic.h	61;"	d
NICVF_INTR_RBDR_MASK	nic.h	77;"	d
NICVF_INTR_RBDR_SHIFT	nic.h	69;"	d
NICVF_INTR_SQ	nic.h	60;"	d
NICVF_INTR_SQ_MASK	nic.h	76;"	d
NICVF_INTR_SQ_SHIFT	nic.h	68;"	d
NICVF_INTR_TCP_TIMER	nic.h	63;"	d
NICVF_INTR_TCP_TIMER_MASK	nic.h	79;"	d
NICVF_INTR_TCP_TIMER_SHIFT	nic.h	71;"	d
NICVF_QUEUES_H	nicvf_queues.h	10;"	d
NICVF_RBDR_RESET	nicvf_queues.h	136;"	d
NICVF_RCV_BUF_ALIGN	nicvf_queues.h	123;"	d
NICVF_RCV_BUF_ALIGN_BYTES	nicvf_queues.h	124;"	d
NICVF_SQ_BASE_ALIGN_BYTES	nicvf_queues.h	126;"	d
NICVF_SQ_EN	nicvf_queues.h	131;"	d
NICVF_SQ_RESET	nicvf_queues.h	135;"	d
NICVF_TX_TIMEOUT	nic.h	122;"	d
NIC_GET_BGX_FROM_VF_LMAC_MAP	nic_main.c	55;"	d	file:
NIC_GET_LMAC_FROM_VF_LMAC_MAP	nic_main.c	56;"	d	file:
NIC_H	nic.h	10;"	d
NIC_HW_MAX_FRS	nic.h	50;"	d
NIC_HW_MIN_FRS	nic.h	49;"	d
NIC_MAX_CPI_PER_LMAC	nic.h	56;"	d
NIC_MAX_PKIND	nic.h	53;"	d
NIC_MAX_RSS_HASH_BITS	nic.h	130;"	d
NIC_MAX_RSS_IDR_TBL_SIZE	nic.h	131;"	d
NIC_MBOX_MSG_ACK	nic.h	351;"	d
NIC_MBOX_MSG_ALLOC_SQS	nic.h	367;"	d
NIC_MBOX_MSG_BGX_LINK_CHANGE	nic.h	366;"	d
NIC_MBOX_MSG_BGX_STATS	nic.h	365;"	d
NIC_MBOX_MSG_CFG_DONE	nic.h	374;"	d
NIC_MBOX_MSG_CPI_CFG	nic.h	359;"	d
NIC_MBOX_MSG_LOOPBACK	nic.h	371;"	d
NIC_MBOX_MSG_NACK	nic.h	352;"	d
NIC_MBOX_MSG_NICVF_PTR	nic.h	368;"	d
NIC_MBOX_MSG_PFC	nic.h	373;"	d
NIC_MBOX_MSG_PNICVF_PTR	nic.h	369;"	d
NIC_MBOX_MSG_QS_CFG	nic.h	353;"	d
NIC_MBOX_MSG_READY	nic.h	350;"	d
NIC_MBOX_MSG_RESET_STAT_COUNTER	nic.h	372;"	d
NIC_MBOX_MSG_RQ_BP_CFG	nic.h	363;"	d
NIC_MBOX_MSG_RQ_CFG	nic.h	354;"	d
NIC_MBOX_MSG_RQ_DROP_CFG	nic.h	356;"	d
NIC_MBOX_MSG_RQ_SW_SYNC	nic.h	364;"	d
NIC_MBOX_MSG_RSS_CFG	nic.h	361;"	d
NIC_MBOX_MSG_RSS_CFG_CONT	nic.h	362;"	d
NIC_MBOX_MSG_RSS_SIZE	nic.h	360;"	d
NIC_MBOX_MSG_SET_MAC	nic.h	357;"	d
NIC_MBOX_MSG_SET_MAX_FRS	nic.h	358;"	d
NIC_MBOX_MSG_SHUTDOWN	nic.h	375;"	d
NIC_MBOX_MSG_SNICVF_PTR	nic.h	370;"	d
NIC_MBOX_MSG_SQ_CFG	nic.h	355;"	d
NIC_MBOX_MSG_TIMEOUT	nic.h	347;"	d
NIC_MSIX_VEC_SHIFT	nic_reg.h	206;"	d
NIC_NODE_ID_MASK	nic.h	545;"	d
NIC_NODE_ID_SHIFT	nic.h	546;"	d
NIC_PF_BIST0_STATUS	nic_reg.h	66;"	d
NIC_PF_BIST1_STATUS	nic_reg.h	67;"	d
NIC_PF_BIST2_STATUS	nic_reg.h	68;"	d
NIC_PF_BIST3_STATUS	nic_reg.h	69;"	d
NIC_PF_BIST_STATUS	nic_reg.h	19;"	d
NIC_PF_BP_CFG	nic_reg.h	22;"	d
NIC_PF_CFG	nic_reg.h	16;"	d
NIC_PF_CHAN_0_255_CREDIT	nic_reg.h	115;"	d
NIC_PF_CHAN_0_255_RX_BP_CFG	nic_reg.h	116;"	d
NIC_PF_CHAN_0_255_RX_CFG	nic_reg.h	113;"	d
NIC_PF_CHAN_0_255_SW_XOFF	nic_reg.h	114;"	d
NIC_PF_CHAN_0_255_TX_CFG	nic_reg.h	112;"	d
NIC_PF_CNM_CF	nic_reg.h	25;"	d
NIC_PF_CNM_STATUS	nic_reg.h	26;"	d
NIC_PF_CPI_0_2047_CFG	nic_reg.h	105;"	d
NIC_PF_CQM_CFG	nic_reg.h	24;"	d
NIC_PF_CQ_AVG_CFG	nic_reg.h	27;"	d
NIC_PF_ECC0_CDIS	nic_reg.h	62;"	d
NIC_PF_ECC0_DBE_ENA_W1C	nic_reg.h	76;"	d
NIC_PF_ECC0_DBE_ENA_W1S	nic_reg.h	77;"	d
NIC_PF_ECC0_DBE_INT	nic_reg.h	74;"	d
NIC_PF_ECC0_DBE_INT_W1S	nic_reg.h	75;"	d
NIC_PF_ECC0_FLIP0	nic_reg.h	54;"	d
NIC_PF_ECC0_FLIP1	nic_reg.h	58;"	d
NIC_PF_ECC0_SBE_ENA_W1C	nic_reg.h	72;"	d
NIC_PF_ECC0_SBE_ENA_W1S	nic_reg.h	73;"	d
NIC_PF_ECC0_SBE_INT	nic_reg.h	70;"	d
NIC_PF_ECC0_SBE_INT_W1S	nic_reg.h	71;"	d
NIC_PF_ECC1_CDIS	nic_reg.h	63;"	d
NIC_PF_ECC1_DBE_ENA_W1C	nic_reg.h	84;"	d
NIC_PF_ECC1_DBE_ENA_W1S	nic_reg.h	85;"	d
NIC_PF_ECC1_DBE_INT	nic_reg.h	82;"	d
NIC_PF_ECC1_DBE_INT_W1S	nic_reg.h	83;"	d
NIC_PF_ECC1_FLIP0	nic_reg.h	55;"	d
NIC_PF_ECC1_FLIP1	nic_reg.h	59;"	d
NIC_PF_ECC1_SBE_ENA_W1C	nic_reg.h	80;"	d
NIC_PF_ECC1_SBE_ENA_W1S	nic_reg.h	81;"	d
NIC_PF_ECC1_SBE_INT	nic_reg.h	78;"	d
NIC_PF_ECC1_SBE_INT_W1S	nic_reg.h	79;"	d
NIC_PF_ECC2_CDIS	nic_reg.h	64;"	d
NIC_PF_ECC2_DBE_ENA_W1C	nic_reg.h	92;"	d
NIC_PF_ECC2_DBE_ENA_W1S	nic_reg.h	93;"	d
NIC_PF_ECC2_DBE_INT	nic_reg.h	90;"	d
NIC_PF_ECC2_DBE_INT_W1S	nic_reg.h	91;"	d
NIC_PF_ECC2_FLIP0	nic_reg.h	56;"	d
NIC_PF_ECC2_FLIP1	nic_reg.h	60;"	d
NIC_PF_ECC2_SBE_ENA_W1C	nic_reg.h	88;"	d
NIC_PF_ECC2_SBE_ENA_W1S	nic_reg.h	89;"	d
NIC_PF_ECC2_SBE_INT	nic_reg.h	86;"	d
NIC_PF_ECC2_SBE_INT_W1S	nic_reg.h	87;"	d
NIC_PF_ECC3_CDIS	nic_reg.h	65;"	d
NIC_PF_ECC3_DBE_ENA_W1C	nic_reg.h	100;"	d
NIC_PF_ECC3_DBE_ENA_W1S	nic_reg.h	101;"	d
NIC_PF_ECC3_DBE_INT	nic_reg.h	98;"	d
NIC_PF_ECC3_DBE_INT_W1S	nic_reg.h	99;"	d
NIC_PF_ECC3_FLIP0	nic_reg.h	57;"	d
NIC_PF_ECC3_FLIP1	nic_reg.h	61;"	d
NIC_PF_ECC3_SBE_ENA_W1C	nic_reg.h	96;"	d
NIC_PF_ECC3_SBE_ENA_W1S	nic_reg.h	97;"	d
NIC_PF_ECC3_SBE_INT	nic_reg.h	94;"	d
NIC_PF_ECC3_SBE_INT_W1S	nic_reg.h	95;"	d
NIC_PF_INTF_0_1_BP_CFG	nic_reg.h	30;"	d
NIC_PF_INTF_0_1_BP_DIS_0_1	nic_reg.h	31;"	d
NIC_PF_INTF_0_1_BP_SW_0_1	nic_reg.h	32;"	d
NIC_PF_INTF_0_1_SEND_CFG	nic_reg.h	29;"	d
NIC_PF_INTR_ID_ECC0_DBE	nic.h	88;"	d
NIC_PF_INTR_ID_ECC0_SBE	nic.h	87;"	d
NIC_PF_INTR_ID_ECC1_DBE	nic.h	90;"	d
NIC_PF_INTR_ID_ECC1_SBE	nic.h	89;"	d
NIC_PF_INTR_ID_ECC2_DBE	nic.h	92;"	d
NIC_PF_INTR_ID_ECC2_SBE	nic.h	91;"	d
NIC_PF_INTR_ID_ECC3_DBE	nic.h	94;"	d
NIC_PF_INTR_ID_ECC3_SBE	nic.h	93;"	d
NIC_PF_INTR_ID_MBOX0	nic.h	95;"	d
NIC_PF_INTR_ID_MBOX1	nic.h	96;"	d
NIC_PF_INTR_TIMER_CFG	nic_reg.h	18;"	d
NIC_PF_LMAC_0_7_CFG	nic_reg.h	108;"	d
NIC_PF_LMAC_0_7_CFG2	nic_reg.h	109;"	d
NIC_PF_LMAC_0_7_CREDIT	nic_reg.h	111;"	d
NIC_PF_LMAC_0_7_SW_XOFF	nic_reg.h	110;"	d
NIC_PF_MAILBOX_ENA_W1C	nic_reg.h	36;"	d
NIC_PF_MAILBOX_ENA_W1S	nic_reg.h	37;"	d
NIC_PF_MAILBOX_INT	nic_reg.h	34;"	d
NIC_PF_MAILBOX_INT_W1S	nic_reg.h	35;"	d
NIC_PF_MCAM_0_191_ENA	nic_reg.h	102;"	d
NIC_PF_MCAM_0_191_M_0_5_DATA	nic_reg.h	103;"	d
NIC_PF_MCAM_CTRL	nic_reg.h	104;"	d
NIC_PF_MPI_0_2047_CFG	nic_reg.h	106;"	d
NIC_PF_MSIX_PBA_0	nic_reg.h	151;"	d
NIC_PF_MSIX_VECTORS	nic.h	84;"	d
NIC_PF_MSIX_VEC_0_18_ADDR	nic_reg.h	149;"	d
NIC_PF_MSIX_VEC_0_CTL	nic_reg.h	150;"	d
NIC_PF_PKIND_0_15_CFG	nic_reg.h	53;"	d
NIC_PF_QSET_0_127_CFG	nic_reg.h	140;"	d
NIC_PF_QSET_0_127_LOCK_0_15	nic_reg.h	139;"	d
NIC_PF_QSET_0_127_RQ_0_7_BP_CFG	nic_reg.h	143;"	d
NIC_PF_QSET_0_127_RQ_0_7_CFG	nic_reg.h	141;"	d
NIC_PF_QSET_0_127_RQ_0_7_DROP_CFG	nic_reg.h	142;"	d
NIC_PF_QSET_0_127_RQ_0_7_STAT_0_1	nic_reg.h	144;"	d
NIC_PF_QSET_0_127_SQ_0_7_CFG	nic_reg.h	145;"	d
NIC_PF_QSET_0_127_SQ_0_7_CFG2	nic_reg.h	146;"	d
NIC_PF_QSET_0_127_SQ_0_7_STAT_0_1	nic_reg.h	147;"	d
NIC_PF_RBDR_BP_STATE_0_3	nic_reg.h	33;"	d
NIC_PF_REG_COUNT	nic_reg.h	12;"	d
NIC_PF_RRM_AVG_CFG	nic_reg.h	28;"	d
NIC_PF_RRM_CFG	nic_reg.h	23;"	d
NIC_PF_RSSI_0_4097_RQ	nic_reg.h	107;"	d
NIC_PF_RX_CFG	nic_reg.h	52;"	d
NIC_PF_RX_ETYPE_0_7	nic_reg.h	38;"	d
NIC_PF_RX_GENEVE_DEF	nic_reg.h	39;"	d
NIC_PF_RX_GENEVE_PROT_DEF	nic_reg.h	41;"	d
NIC_PF_RX_NVGRE_PROT_DEF	nic_reg.h	45;"	d
NIC_PF_RX_VXLAN_DEF_0_1	nic_reg.h	46;"	d
NIC_PF_RX_VXLAN_PROT_DEF	nic_reg.h	48;"	d
NIC_PF_SOFT_RESET	nic_reg.h	20;"	d
NIC_PF_STATUS	nic_reg.h	17;"	d
NIC_PF_SW_SYNC_RX	nic_reg.h	117;"	d
NIC_PF_SW_SYNC_RX_DONE	nic_reg.h	118;"	d
NIC_PF_TCP_TIMER	nic_reg.h	21;"	d
NIC_PF_TL2_0_63_CFG	nic_reg.h	119;"	d
NIC_PF_TL2_0_63_PRI	nic_reg.h	120;"	d
NIC_PF_TL2_0_63_SH_STATUS	nic_reg.h	122;"	d
NIC_PF_TL2_LMAC	nic_reg.h	121;"	d
NIC_PF_TL3A_0_63_CFG	nic_reg.h	123;"	d
NIC_PF_TL3_0_255_CFG	nic_reg.h	124;"	d
NIC_PF_TL3_0_255_CHAN	nic_reg.h	125;"	d
NIC_PF_TL3_0_255_CNM_RATE	nic_reg.h	128;"	d
NIC_PF_TL3_0_255_PIR	nic_reg.h	126;"	d
NIC_PF_TL3_0_255_SH_STATUS	nic_reg.h	129;"	d
NIC_PF_TL3_0_255_SW_XOFF	nic_reg.h	127;"	d
NIC_PF_TL4A_0_1023_CNM_RATE	nic_reg.h	134;"	d
NIC_PF_TL4A_0_1023_CNM_STATUS	nic_reg.h	135;"	d
NIC_PF_TL4A_0_255_CFG	nic_reg.h	130;"	d
NIC_PF_TL4_0_1023_CFG	nic_reg.h	131;"	d
NIC_PF_TL4_0_1023_SH_STATUS	nic_reg.h	133;"	d
NIC_PF_TL4_0_1023_SW_XOFF	nic_reg.h	132;"	d
NIC_PF_VF_0_127_MAILBOX_0_1	nic_reg.h	136;"	d
NIC_PF_VF_MAILBOX_SIZE	nic.h	346;"	d
NIC_PF_VNIC_0_127_RX_STAT_0_13	nic_reg.h	138;"	d
NIC_PF_VNIC_0_127_TX_STAT_0_4	nic_reg.h	137;"	d
NIC_QSET_CQ_0_7_BASE	nic_reg.h	170;"	d
NIC_QSET_CQ_0_7_CFG	nic_reg.h	167;"	d
NIC_QSET_CQ_0_7_CFG2	nic_reg.h	168;"	d
NIC_QSET_CQ_0_7_DEBUG	nic_reg.h	176;"	d
NIC_QSET_CQ_0_7_DOOR	nic_reg.h	173;"	d
NIC_QSET_CQ_0_7_HEAD	nic_reg.h	171;"	d
NIC_QSET_CQ_0_7_STATUS	nic_reg.h	174;"	d
NIC_QSET_CQ_0_7_STATUS2	nic_reg.h	175;"	d
NIC_QSET_CQ_0_7_TAIL	nic_reg.h	172;"	d
NIC_QSET_CQ_0_7_THRESH	nic_reg.h	169;"	d
NIC_QSET_RBDR_0_1_BASE	nic_reg.h	193;"	d
NIC_QSET_RBDR_0_1_CFG	nic_reg.h	191;"	d
NIC_QSET_RBDR_0_1_DOOR	nic_reg.h	196;"	d
NIC_QSET_RBDR_0_1_HEAD	nic_reg.h	194;"	d
NIC_QSET_RBDR_0_1_PREFETCH_STATUS	nic_reg.h	199;"	d
NIC_QSET_RBDR_0_1_STATUS0	nic_reg.h	197;"	d
NIC_QSET_RBDR_0_1_STATUS1	nic_reg.h	198;"	d
NIC_QSET_RBDR_0_1_TAIL	nic_reg.h	195;"	d
NIC_QSET_RBDR_0_1_THRESH	nic_reg.h	192;"	d
NIC_QSET_RQ_0_7_CFG	nic_reg.h	178;"	d
NIC_QSET_RQ_0_7_STAT_0_1	nic_reg.h	179;"	d
NIC_QSET_RQ_GEN_CFG	nic_reg.h	165;"	d
NIC_QSET_SQ_0_7_BASE	nic_reg.h	183;"	d
NIC_QSET_SQ_0_7_CFG	nic_reg.h	181;"	d
NIC_QSET_SQ_0_7_DEBUG	nic_reg.h	188;"	d
NIC_QSET_SQ_0_7_DOOR	nic_reg.h	186;"	d
NIC_QSET_SQ_0_7_HEAD	nic_reg.h	184;"	d
NIC_QSET_SQ_0_7_STATUS	nic_reg.h	187;"	d
NIC_QSET_SQ_0_7_STAT_0_1	nic_reg.h	189;"	d
NIC_QSET_SQ_0_7_TAIL	nic_reg.h	185;"	d
NIC_QSET_SQ_0_7_THRESH	nic_reg.h	182;"	d
NIC_QS_ID_SHIFT	nic_reg.h	208;"	d
NIC_Q_NUM_SHIFT	nic_reg.h	207;"	d
NIC_REG_H	nic_reg.h	10;"	d
NIC_SEND_LD_TYPE_E_ENUM_LAST	q_struct.h	/^	NIC_SEND_LD_TYPE_E_ENUM_LAST = 0x3,$/;"	e	enum:nic_send_ld_type_e
NIC_SEND_LD_TYPE_E_LDD	q_struct.h	/^	NIC_SEND_LD_TYPE_E_LDD = 0x0,$/;"	e	enum:nic_send_ld_type_e
NIC_SEND_LD_TYPE_E_LDT	q_struct.h	/^	NIC_SEND_LD_TYPE_E_LDT = 0x1,$/;"	e	enum:nic_send_ld_type_e
NIC_SEND_LD_TYPE_E_LDWB	q_struct.h	/^	NIC_SEND_LD_TYPE_E_LDWB = 0x2,$/;"	e	enum:nic_send_ld_type_e
NIC_SET_VF_LMAC_MAP	nic_main.c	54;"	d	file:
NIC_SRIOV_ENABLED	nic.h	46;"	d
NIC_TNS_BYPASS_MODE	nic.h	42;"	d
NIC_TNS_MODE	nic.h	43;"	d
NIC_VF_ENA_W1C	nic_reg.h	158;"	d
NIC_VF_ENA_W1S	nic_reg.h	159;"	d
NIC_VF_INT	nic_reg.h	156;"	d
NIC_VF_INT_W1S	nic_reg.h	157;"	d
NIC_VF_MSIX_PBA	nic_reg.h	203;"	d
NIC_VF_MSIX_VECTORS	nic.h	85;"	d
NIC_VF_MSIX_VECTOR_0_19_ADDR	nic_reg.h	201;"	d
NIC_VF_MSIX_VECTOR_0_19_CTL	nic_reg.h	202;"	d
NIC_VF_NUM_SHIFT	nic_reg.h	209;"	d
NIC_VF_PF_MAILBOX_0_1	nic_reg.h	155;"	d
NIC_VF_REG_COUNT	nic_reg.h	13;"	d
NIC_VNIC_CFG	nic_reg.h	154;"	d
NIC_VNIC_RSS_CFG	nic_reg.h	161;"	d
NIC_VNIC_RSS_KEY_0_4	nic_reg.h	162;"	d
NIC_VNIC_RX_STAT_0_13	nic_reg.h	164;"	d
NIC_VNIC_TX_STAT_0_4	nic_reg.h	163;"	d
PCI_CFG_REG_BAR_NUM	nic.h	35;"	d
PCI_DEVICE_ID_THUNDER_BGX	nic.h	21;"	d
PCI_DEVICE_ID_THUNDER_BGX	thunder_bgx.h	13;"	d
PCI_DEVICE_ID_THUNDER_NIC_PF	nic.h	18;"	d
PCI_DEVICE_ID_THUNDER_NIC_VF	nic.h	20;"	d
PCI_DEVICE_ID_THUNDER_PASS1_NIC_VF	nic.h	19;"	d
PCI_DEVICE_ID_THUNDER_RGX	thunder_bgx.h	14;"	d
PCI_MSIX_REG_BAR_NUM	nic.h	36;"	d
PCI_SUBSYS_DEVID_81XX_BGX	thunder_bgx.h	18;"	d
PCI_SUBSYS_DEVID_81XX_NIC_PF	nic.h	25;"	d
PCI_SUBSYS_DEVID_81XX_NIC_VF	nic.h	30;"	d
PCI_SUBSYS_DEVID_81XX_RGX	thunder_bgx.h	19;"	d
PCI_SUBSYS_DEVID_83XX_BGX	thunder_bgx.h	20;"	d
PCI_SUBSYS_DEVID_83XX_NIC_PF	nic.h	26;"	d
PCI_SUBSYS_DEVID_83XX_NIC_VF	nic.h	31;"	d
PCI_SUBSYS_DEVID_88XX_BGX	thunder_bgx.h	17;"	d
PCI_SUBSYS_DEVID_88XX_NIC_PF	nic.h	24;"	d
PCI_SUBSYS_DEVID_88XX_NIC_VF	nic.h	29;"	d
PCI_SUBSYS_DEVID_88XX_PASS1_NIC_VF	nic.h	28;"	d
PCS_LINKX_TIMER_COUNT	thunder_bgx.h	161;"	d
PCS_MISC_CTL_DISP_EN	thunder_bgx.h	165;"	d
PCS_MISC_CTL_GMX_ENO	thunder_bgx.h	166;"	d
PCS_MISC_CTL_MODE	thunder_bgx.h	164;"	d
PCS_MISC_CTL_SAMP_PT_MASK	thunder_bgx.h	167;"	d
PCS_MRX_CTL_AN_EN	thunder_bgx.h	152;"	d
PCS_MRX_CTL_LOOPBACK1	thunder_bgx.h	153;"	d
PCS_MRX_CTL_PWR_DN	thunder_bgx.h	151;"	d
PCS_MRX_CTL_RESET	thunder_bgx.h	154;"	d
PCS_MRX_CTL_RST_AN	thunder_bgx.h	150;"	d
PCS_MRX_STATUS_AN_CPT	thunder_bgx.h	157;"	d
PCS_MRX_STATUS_LINK	thunder_bgx.h	156;"	d
PORT_EN	thunder_xcv.c	28;"	d	file:
POST_CQE_DESC_COUNT	nicvf_queues.c	1300;"	d	file:
Q_STRUCT_H	q_struct.h	13;"	d
RBDR_SIZE	nicvf_queues.h	87;"	d
RBDR_SIZE0	nicvf_queues.h	36;"	d
RBDR_SIZE1	nicvf_queues.h	37;"	d
RBDR_SIZE2	nicvf_queues.h	38;"	d
RBDR_SIZE3	nicvf_queues.h	39;"	d
RBDR_SIZE4	nicvf_queues.h	40;"	d
RBDR_SIZE5	nicvf_queues.h	41;"	d
RBDR_SIZE6	nicvf_queues.h	42;"	d
RBDR_THRESH	nicvf_queues.h	90;"	d
RCV_BUF_COUNT	nicvf_queues.h	88;"	d
RCV_FRAG_LEN	nicvf_queues.h	92;"	d
RQ_DROP_CQ_LVL	nicvf_queues.h	106;"	d
RQ_DROP_RBDR_LVL	nicvf_queues.h	116;"	d
RQ_PASS_CQ_LVL	nicvf_queues.h	105;"	d
RQ_PASS_RBDR_LVL	nicvf_queues.h	115;"	d
RQ_SQ_STATS	nicvf_queues.h	/^enum RQ_SQ_STATS {$/;"	g
RQ_SQ_STATS_OCTS	nicvf_queues.h	/^	RQ_SQ_STATS_OCTS,$/;"	e	enum:RQ_SQ_STATS
RQ_SQ_STATS_PKTS	nicvf_queues.h	/^	RQ_SQ_STATS_PKTS,$/;"	e	enum:RQ_SQ_STATS
RSS_ALG_GRE_IP	q_struct.h	/^	RSS_ALG_GRE_IP = 0x06,$/;"	e	enum:rss_algorithm_type
RSS_ALG_IP	q_struct.h	/^	RSS_ALG_IP = 0x02,$/;"	e	enum:rss_algorithm_type
RSS_ALG_NONE	q_struct.h	/^	RSS_ALG_NONE = 0x00,$/;"	e	enum:rss_algorithm_type
RSS_ALG_PORT	q_struct.h	/^	RSS_ALG_PORT = 0x01,$/;"	e	enum:rss_algorithm_type
RSS_ALG_ROCE	q_struct.h	/^	RSS_ALG_ROCE = 0x07,$/;"	e	enum:rss_algorithm_type
RSS_ALG_SCTP_IP	q_struct.h	/^	RSS_ALG_SCTP_IP = 0x05,$/;"	e	enum:rss_algorithm_type
RSS_ALG_TCP_IP	q_struct.h	/^	RSS_ALG_TCP_IP = 0x03,$/;"	e	enum:rss_algorithm_type
RSS_ALG_UDP_IP	q_struct.h	/^	RSS_ALG_UDP_IP = 0x04,$/;"	e	enum:rss_algorithm_type
RSS_HASH_IP	q_struct.h	/^	RSS_HASH_IP = 0x01,$/;"	e	enum:rss_hash_cfg
RSS_HASH_KEY_SIZE	nic.h	132;"	d
RSS_HASH_L2ETC	q_struct.h	/^	RSS_HASH_L2ETC = 0x00,$/;"	e	enum:rss_hash_cfg
RSS_HASH_L4ETC	q_struct.h	/^	RSS_HASH_L4ETC = 0x05,$/;"	e	enum:rss_hash_cfg
RSS_HASH_ROCE	q_struct.h	/^	RSS_HASH_ROCE = 0x06,$/;"	e	enum:rss_hash_cfg
RSS_HASH_TCP	q_struct.h	/^	RSS_HASH_TCP = 0x02,$/;"	e	enum:rss_hash_cfg
RSS_HASH_TCP_SYN_DIS	q_struct.h	/^	RSS_HASH_TCP_SYN_DIS = 0x03,$/;"	e	enum:rss_hash_cfg
RSS_HASH_UDP	q_struct.h	/^	RSS_HASH_UDP = 0x04,$/;"	e	enum:rss_hash_cfg
RSS_IND_TBL_LEN_PER_MBX_MSG	nic.h	448;"	d
RSS_IP_HASH_ENA	nic.h	137;"	d
RSS_L2_EXTENDED_HASH_ENA	nic.h	136;"	d
RSS_L3_BIDI	q_struct.h	/^	RSS_L3_BIDI = 0x07,$/;"	e	enum:rss_hash_cfg
RSS_L3_BI_DIRECTION_ENA	nic.h	143;"	d
RSS_L4_BIDI	q_struct.h	/^	RSS_L4_BIDI = 0x08,$/;"	e	enum:rss_hash_cfg
RSS_L4_BI_DIRECTION_ENA	nic.h	144;"	d
RSS_L4_EXTENDED_HASH_ENA	nic.h	141;"	d
RSS_ROCE_ENA	nic.h	142;"	d
RSS_TCP_HASH_ENA	nic.h	138;"	d
RSS_TCP_SYN_DIS	nic.h	139;"	d
RSS_UDP_HASH_ENA	nic.h	140;"	d
RSVD	thunder_bgx.h	/^		RSVD$/;"	e	enum:MCAST_MODE
RX_BCAST	nic.h	/^	RX_BCAST = 0x2,$/;"	e	enum:rx_stats_reg_offset
RX_DATA_RESET	thunder_xcv.c	35;"	d	file:
RX_DMACX_CAM_EN	thunder_bgx.h	59;"	d
RX_DMACX_CAM_LMACID	thunder_bgx.h	60;"	d
RX_DMAC_COUNT	thunder_bgx.h	61;"	d
RX_DRP_BCAST	nic.h	/^	RX_DRP_BCAST = 0xa,$/;"	e	enum:rx_stats_reg_offset
RX_DRP_L3BCAST	nic.h	/^	RX_DRP_L3BCAST = 0xc,$/;"	e	enum:rx_stats_reg_offset
RX_DRP_L3MCAST	nic.h	/^	RX_DRP_L3MCAST = 0xd,$/;"	e	enum:rx_stats_reg_offset
RX_DRP_MCAST	nic.h	/^	RX_DRP_MCAST = 0xb,$/;"	e	enum:rx_stats_reg_offset
RX_EN	thunder_bgx.h	144;"	d
RX_FCS	nic.h	/^	RX_FCS = 0x8,$/;"	e	enum:rx_stats_reg_offset
RX_L2ERR	nic.h	/^	RX_L2ERR = 0x9,$/;"	e	enum:rx_stats_reg_offset
RX_MCAST	nic.h	/^	RX_MCAST = 0x3,$/;"	e	enum:rx_stats_reg_offset
RX_OCTS	nic.h	/^	RX_OCTS = 0x0,$/;"	e	enum:rx_stats_reg_offset
RX_ORUN	nic.h	/^	RX_ORUN = 0x6,$/;"	e	enum:rx_stats_reg_offset
RX_ORUN_OCTS	nic.h	/^	RX_ORUN_OCTS = 0x7,$/;"	e	enum:rx_stats_reg_offset
RX_PKT_RESET	thunder_xcv.c	34;"	d	file:
RX_RED	nic.h	/^	RX_RED = 0x4,$/;"	e	enum:rx_stats_reg_offset
RX_RED_OCTS	nic.h	/^	RX_RED_OCTS = 0x5,$/;"	e	enum:rx_stats_reg_offset
RX_STATS_ENUM_LAST	nic.h	/^	RX_STATS_ENUM_LAST,$/;"	e	enum:rx_stats_reg_offset
RX_TRAFFIC_STEER_RULE_COUNT	thunder_bgx.h	63;"	d
RX_UCAST	nic.h	/^	RX_UCAST = 0x1,$/;"	e	enum:rx_stats_reg_offset
SEND_CRCALG_CRC32	q_struct.h	/^	SEND_CRCALG_CRC32 = 0x00,$/;"	e	enum:send_crc_alg
SEND_CRCALG_CRC32C	q_struct.h	/^	SEND_CRCALG_CRC32C = 0x01,$/;"	e	enum:send_crc_alg
SEND_CRCALG_ICRC	q_struct.h	/^	SEND_CRCALG_ICRC = 0x02,$/;"	e	enum:send_crc_alg
SEND_L4_CSUM_DISABLE	q_struct.h	/^	SEND_L4_CSUM_DISABLE = 0x00,$/;"	e	enum:send_l4_csum_type
SEND_L4_CSUM_SCTP	q_struct.h	/^	SEND_L4_CSUM_SCTP = 0x03,$/;"	e	enum:send_l4_csum_type
SEND_L4_CSUM_TCP	q_struct.h	/^	SEND_L4_CSUM_TCP = 0x02,$/;"	e	enum:send_l4_csum_type
SEND_L4_CSUM_UDP	q_struct.h	/^	SEND_L4_CSUM_UDP = 0x01,$/;"	e	enum:send_l4_csum_type
SEND_LD_TYPE_LDD	q_struct.h	/^	SEND_LD_TYPE_LDD = 0x00,$/;"	e	enum:send_load_type
SEND_LD_TYPE_LDT	q_struct.h	/^	SEND_LD_TYPE_LDT = 0x01,$/;"	e	enum:send_load_type
SEND_LD_TYPE_LDWB	q_struct.h	/^	SEND_LD_TYPE_LDWB = 0x02,$/;"	e	enum:send_load_type
SEND_MEMALG_ADD	q_struct.h	/^	SEND_MEMALG_ADD = 0x08,$/;"	e	enum:send_mem_alg_type
SEND_MEMALG_ADDLEN	q_struct.h	/^	SEND_MEMALG_ADDLEN = 0x0A,$/;"	e	enum:send_mem_alg_type
SEND_MEMALG_SET	q_struct.h	/^	SEND_MEMALG_SET = 0x00,$/;"	e	enum:send_mem_alg_type
SEND_MEMALG_SUB	q_struct.h	/^	SEND_MEMALG_SUB = 0x09,$/;"	e	enum:send_mem_alg_type
SEND_MEMALG_SUBLEN	q_struct.h	/^	SEND_MEMALG_SUBLEN = 0x0B,$/;"	e	enum:send_mem_alg_type
SEND_MEMDSZ_B32	q_struct.h	/^	SEND_MEMDSZ_B32 = 0x01,$/;"	e	enum:send_mem_dsz_type
SEND_MEMDSZ_B64	q_struct.h	/^	SEND_MEMDSZ_B64 = 0x00,$/;"	e	enum:send_mem_dsz_type
SEND_MEMDSZ_B8	q_struct.h	/^	SEND_MEMDSZ_B8 = 0x03,$/;"	e	enum:send_mem_dsz_type
SMUX_RX_INT	thunder_bgx.h	194;"	d
SMUX_TX_INT	thunder_bgx.h	195;"	d
SMU_CTL_RX_IDLE	thunder_bgx.h	141;"	d
SMU_CTL_TX_IDLE	thunder_bgx.h	142;"	d
SMU_RX_CTL_STATUS	thunder_bgx.h	127;"	d
SMU_TX_APPEND_FCS_D	thunder_bgx.h	129;"	d
SMU_TX_CTL_DIC_EN	thunder_bgx.h	136;"	d
SMU_TX_CTL_LNK_STATUS	thunder_bgx.h	138;"	d
SMU_TX_CTL_UNI_EN	thunder_bgx.h	137;"	d
SND_QSIZE	nicvf_queues.h	63;"	d
SND_QUEUE_DESC_SIZE	nicvf_queues.h	119;"	d
SND_QUEUE_LEN	nicvf_queues.h	64;"	d
SND_QUEUE_SIZE0	nicvf_queues.h	44;"	d
SND_QUEUE_SIZE1	nicvf_queues.h	45;"	d
SND_QUEUE_SIZE2	nicvf_queues.h	46;"	d
SND_QUEUE_SIZE3	nicvf_queues.h	47;"	d
SND_QUEUE_SIZE4	nicvf_queues.h	48;"	d
SND_QUEUE_SIZE5	nicvf_queues.h	49;"	d
SND_QUEUE_SIZE6	nicvf_queues.h	50;"	d
SND_QUEUE_THRESH	nicvf_queues.h	67;"	d
SPUX_INT	thunder_bgx.h	193;"	d
SPU_AN_CTL_AN_EN	thunder_bgx.h	110;"	d
SPU_AN_CTL_XNP_EN	thunder_bgx.h	111;"	d
SPU_BR_STATUS_BLK_LOCK	thunder_bgx.h	99;"	d
SPU_BR_STATUS_RCV_LNK	thunder_bgx.h	100;"	d
SPU_BX_STATUS_RX_ALIGN	thunder_bgx.h	97;"	d
SPU_CTL_LOOPBACK	thunder_bgx.h	90;"	d
SPU_CTL_LOW_POWER	thunder_bgx.h	89;"	d
SPU_CTL_RESET	thunder_bgx.h	91;"	d
SPU_DBG_CTL_AN_ARB_LINK_CHK_EN	thunder_bgx.h	121;"	d
SPU_DBG_CTL_AN_NONCE_MCT_DIS	thunder_bgx.h	122;"	d
SPU_FEC_CTL_ERR_EN	thunder_bgx.h	108;"	d
SPU_FEC_CTL_FEC_EN	thunder_bgx.h	107;"	d
SPU_MEM_INT	thunder_bgx.h	200;"	d
SPU_MISC_CTL_INTLV_RDISP	thunder_bgx.h	114;"	d
SPU_MISC_CTL_RX_DIS	thunder_bgx.h	115;"	d
SPU_PMD_CRTL_TRAIN_EN	thunder_bgx.h	102;"	d
SPU_STATUS1_RCV_LNK	thunder_bgx.h	93;"	d
SPU_STATUS2_RCVFLT	thunder_bgx.h	95;"	d
SQ_DESC_TYPE_CRC	q_struct.h	/^	SQ_DESC_TYPE_CRC = 0x02,$/;"	e	enum:sq_subdesc_type
SQ_DESC_TYPE_GATHER	q_struct.h	/^	SQ_DESC_TYPE_GATHER = 0x04,$/;"	e	enum:sq_subdesc_type
SQ_DESC_TYPE_HEADER	q_struct.h	/^	SQ_DESC_TYPE_HEADER = 0x01,$/;"	e	enum:sq_subdesc_type
SQ_DESC_TYPE_IMMEDIATE	q_struct.h	/^	SQ_DESC_TYPE_IMMEDIATE = 0x03,$/;"	e	enum:sq_subdesc_type
SQ_DESC_TYPE_INVALID	q_struct.h	/^	SQ_DESC_TYPE_INVALID = 0x00,$/;"	e	enum:sq_subdesc_type
SQ_DESC_TYPE_MEMORY	q_struct.h	/^	SQ_DESC_TYPE_MEMORY = 0x05,$/;"	e	enum:sq_subdesc_type
THUNDER_BGX_H	thunder_bgx.h	10;"	d
TSO_HEADER_SIZE	nicvf_queues.h	280;"	d
TX_BCAST	nic.h	/^	TX_BCAST = 0x2,$/;"	e	enum:tx_stats_reg_offset
TX_DATA_RESET	thunder_xcv.c	33;"	d	file:
TX_DROP	nic.h	/^	TX_DROP = 0x4,$/;"	e	enum:tx_stats_reg_offset
TX_EN	thunder_bgx.h	145;"	d
TX_MCAST	nic.h	/^	TX_MCAST = 0x3,$/;"	e	enum:tx_stats_reg_offset
TX_OCTS	nic.h	/^	TX_OCTS = 0x0,$/;"	e	enum:tx_stats_reg_offset
TX_PKT_RESET	thunder_xcv.c	32;"	d	file:
TX_STATS_ENUM_LAST	nic.h	/^	TX_STATS_ENUM_LAST,$/;"	e	enum:tx_stats_reg_offset
TX_UCAST	nic.h	/^	TX_UCAST = 0x1,$/;"	e	enum:tx_stats_reg_offset
UDP_GENEVE_PORT_NUM	nic_reg.h	40;"	d
UDP_VXLAN_PORT_NUM	nic_reg.h	47;"	d
XCV_BATCH_CRD_RET	thunder_xcv.c	47;"	d	file:
XCV_COMP_CTL	thunder_xcv.c	39;"	d	file:
XCV_CTL	thunder_xcv.c	41;"	d	file:
XCV_DLL_CTL	thunder_xcv.c	36;"	d	file:
XCV_INBND_STATUS	thunder_xcv.c	46;"	d	file:
XCV_INT	thunder_xcv.c	42;"	d	file:
XCV_INT_ENA_W1C	thunder_xcv.c	44;"	d	file:
XCV_INT_ENA_W1S	thunder_xcv.c	45;"	d	file:
XCV_INT_W1S	thunder_xcv.c	43;"	d	file:
XCV_RESET	thunder_xcv.c	27;"	d	file:
XDP_PAGE_REFCNT_REFILL	nicvf_queues.c	85;"	d	file:
____cacheline_aligned_in_smp	nic.h	/^} ____cacheline_aligned_in_smp;$/;"	v	typeref:struct:nicvf
____cacheline_aligned_in_smp	nic.h	/^} ____cacheline_aligned_in_smp;$/;"	v	typeref:struct:nicvf_rss_info
____cacheline_aligned_in_smp	nicvf_queues.h	/^} ____cacheline_aligned_in_smp;$/;"	v	typeref:struct:cmp_queue
____cacheline_aligned_in_smp	nicvf_queues.h	/^} ____cacheline_aligned_in_smp;$/;"	v	typeref:struct:queue_set
____cacheline_aligned_in_smp	nicvf_queues.h	/^} ____cacheline_aligned_in_smp;$/;"	v	typeref:struct:rbdr
____cacheline_aligned_in_smp	nicvf_queues.h	/^} ____cacheline_aligned_in_smp;$/;"	v	typeref:struct:rcv_queue
____cacheline_aligned_in_smp	nicvf_queues.h	/^} ____cacheline_aligned_in_smp;$/;"	v	typeref:struct:rx_tx_queue_stats
____cacheline_aligned_in_smp	nicvf_queues.h	/^} ____cacheline_aligned_in_smp;$/;"	v	typeref:struct:snd_queue
acpi_get_mac_address	thunder_bgx.c	/^static int acpi_get_mac_address(struct device *dev, struct acpi_device *adev,$/;"	f	file:
acpi_lmac_idx	thunder_bgx.c	/^	u8                      acpi_lmac_idx;$/;"	m	struct:bgx	file:
addr	q_struct.h	/^	u64    addr:49;$/;"	m	struct:sq_gather_subdesc
addr	q_struct.h	/^	u64    addr:49;$/;"	m	struct:sq_mem_subdesc
affinity_mask	nic.h	/^	cpumask_var_t		affinity_mask[NIC_VF_MSIX_VECTORS];$/;"	m	struct:nicvf
affinity_mask	nicvf_queues.h	/^	cpumask_t	affinity_mask;$/;"	m	struct:snd_queue
align_hdr_bytes	q_struct.h	/^	u64   align_hdr_bytes:4;$/;"	m	struct:rbe_tcp_cnxt_t
align_pad	q_struct.h	/^	u64   align_pad:3;$/;"	m	struct:cqe_rx_t
align_ptr_bytes	q_struct.h	/^	u64   align_ptr_bytes:4;$/;"	m	struct:rbe_tcp_cnxt_t
autoneg	nic.h	/^	u8    autoneg;$/;"	m	struct:nicvf_pfc
autoneg	nic.h	/^	u8    autoneg;$/;"	m	struct:pfc
autoneg	thunder_bgx.c	/^	bool                    autoneg;$/;"	m	struct:lmac	file:
avg_con	q_struct.h	/^	u64 avg_con:9;$/;"	m	struct:cq_cfg
avg_con	q_struct.h	/^	u64 avg_con:9;$/;"	m	struct:rbdr_cfg
base	nicvf_queues.h	/^	void		*base;$/;"	m	struct:q_desc_mem
be	q_struct.h	/^	u64 be:1;$/;"	m	struct:qs_cfg
be_en	nicvf_queues.h	/^	bool		be_en;$/;"	m	struct:queue_set
bgx	thunder_bgx.c	/^	struct bgx		*bgx;$/;"	m	struct:lmac	typeref:struct:lmac::bgx	file:
bgx	thunder_bgx.c	/^struct bgx {$/;"	s	file:
bgx_acpi_match_id	thunder_bgx.c	/^static acpi_status bgx_acpi_match_id(acpi_handle handle, u32 lvl,$/;"	f	file:
bgx_acpi_register_phy	thunder_bgx.c	/^static acpi_status bgx_acpi_register_phy(acpi_handle handle,$/;"	f	file:
bgx_cleanup_module	thunder_bgx.c	/^module_exit(bgx_cleanup_module);$/;"	v
bgx_cleanup_module	thunder_bgx.c	/^static void __exit bgx_cleanup_module(void)$/;"	f	file:
bgx_cnt	nic_main.c	/^	u8		bgx_cnt;$/;"	m	struct:hw_info	file:
bgx_driver	thunder_bgx.c	/^static struct pci_driver bgx_driver = {$/;"	v	typeref:struct:pci_driver	file:
bgx_flush_dmac_addrs	thunder_bgx.c	/^static void bgx_flush_dmac_addrs(struct bgx *bgx, int lmac)$/;"	f	file:
bgx_get_lane2sds_cfg	thunder_bgx.c	/^static u8 bgx_get_lane2sds_cfg(struct bgx *bgx, struct lmac *lmac)$/;"	f	file:
bgx_get_lmac_count	thunder_bgx.c	/^EXPORT_SYMBOL(bgx_get_lmac_count);$/;"	v
bgx_get_lmac_count	thunder_bgx.c	/^int bgx_get_lmac_count(int node, int bgx_idx)$/;"	f
bgx_get_lmac_link_state	thunder_bgx.c	/^EXPORT_SYMBOL(bgx_get_lmac_link_state);$/;"	v
bgx_get_lmac_link_state	thunder_bgx.c	/^void bgx_get_lmac_link_state(int node, int bgx_idx, int lmacid, void *status)$/;"	f
bgx_get_lmac_mac	thunder_bgx.c	/^EXPORT_SYMBOL(bgx_get_lmac_mac);$/;"	v
bgx_get_lmac_mac	thunder_bgx.c	/^const u8 *bgx_get_lmac_mac(int node, int bgx_idx, int lmacid)$/;"	f
bgx_get_map	thunder_bgx.c	/^EXPORT_SYMBOL(bgx_get_map);$/;"	v
bgx_get_map	thunder_bgx.c	/^unsigned bgx_get_map(int node)$/;"	f
bgx_get_qlm_mode	thunder_bgx.c	/^static void bgx_get_qlm_mode(struct bgx *bgx)$/;"	f	file:
bgx_get_rx_stats	thunder_bgx.c	/^EXPORT_SYMBOL(bgx_get_rx_stats);$/;"	v
bgx_get_rx_stats	thunder_bgx.c	/^u64 bgx_get_rx_stats(int node, int bgx_idx, int lmac, int idx)$/;"	f
bgx_get_tx_stats	thunder_bgx.c	/^EXPORT_SYMBOL(bgx_get_tx_stats);$/;"	v
bgx_get_tx_stats	thunder_bgx.c	/^u64 bgx_get_tx_stats(int node, int bgx_idx, int lmac, int idx)$/;"	f
bgx_id	thunder_bgx.c	/^	u8			bgx_id;$/;"	m	struct:bgx	file:
bgx_id_table	thunder_bgx.c	/^static const struct pci_device_id bgx_id_table[] = {$/;"	v	typeref:struct:pci_device_id	file:
bgx_init_acpi_phy	thunder_bgx.c	/^static int bgx_init_acpi_phy(struct bgx *bgx)$/;"	f	file:
bgx_init_hw	thunder_bgx.c	/^static void bgx_init_hw(struct bgx *bgx)$/;"	f	file:
bgx_init_module	thunder_bgx.c	/^module_init(bgx_init_module);$/;"	v
bgx_init_module	thunder_bgx.c	/^static int __init bgx_init_module(void)$/;"	f	file:
bgx_init_of_phy	thunder_bgx.c	/^static int bgx_init_of_phy(struct bgx *bgx)$/;"	f	file:
bgx_init_phy	thunder_bgx.c	/^static int bgx_init_phy(struct bgx *bgx)$/;"	f	file:
bgx_link_status	nic.h	/^struct bgx_link_status {$/;"	s
bgx_lmac_disable	thunder_bgx.c	/^static void bgx_lmac_disable(struct bgx *bgx, u8 lmacid)$/;"	f	file:
bgx_lmac_enable	thunder_bgx.c	/^static int bgx_lmac_enable(struct bgx *bgx, u8 lmacid)$/;"	f	file:
bgx_lmac_get_pfc	thunder_bgx.c	/^EXPORT_SYMBOL(bgx_lmac_get_pfc);$/;"	v
bgx_lmac_get_pfc	thunder_bgx.c	/^void bgx_lmac_get_pfc(int node, int bgx_idx, int lmacid, void *pause)$/;"	f
bgx_lmac_handler	thunder_bgx.c	/^static void bgx_lmac_handler(struct net_device *netdev)$/;"	f	file:
bgx_lmac_internal_loopback	thunder_bgx.c	/^EXPORT_SYMBOL(bgx_lmac_internal_loopback);$/;"	v
bgx_lmac_internal_loopback	thunder_bgx.c	/^void bgx_lmac_internal_loopback(int node, int bgx_idx,$/;"	f
bgx_lmac_rx_tx_enable	thunder_bgx.c	/^EXPORT_SYMBOL(bgx_lmac_rx_tx_enable);$/;"	v
bgx_lmac_rx_tx_enable	thunder_bgx.c	/^void bgx_lmac_rx_tx_enable(int node, int bgx_idx, int lmacid, bool enable)$/;"	f
bgx_lmac_set_pfc	thunder_bgx.c	/^EXPORT_SYMBOL(bgx_lmac_set_pfc);$/;"	v
bgx_lmac_set_pfc	thunder_bgx.c	/^void bgx_lmac_set_pfc(int node, int bgx_idx, int lmacid, void *pause)$/;"	f
bgx_lmac_sgmii_init	thunder_bgx.c	/^static int bgx_lmac_sgmii_init(struct bgx *bgx, struct lmac *lmac)$/;"	f	file:
bgx_lmac_xaui_init	thunder_bgx.c	/^static int bgx_lmac_xaui_init(struct bgx *bgx, struct lmac *lmac)$/;"	f	file:
bgx_poll_for_link	thunder_bgx.c	/^static void bgx_poll_for_link(struct work_struct *work)$/;"	f	file:
bgx_poll_for_sgmii_link	thunder_bgx.c	/^static void bgx_poll_for_sgmii_link(struct lmac *lmac)$/;"	f	file:
bgx_poll_reg	thunder_bgx.c	/^static int bgx_poll_reg(struct bgx *bgx, u8 lmac, u64 reg, u64 mask, bool zero)$/;"	f	file:
bgx_print_qlm_mode	thunder_bgx.c	/^static void bgx_print_qlm_mode(struct bgx *bgx, u8 lmacid)$/;"	f	file:
bgx_probe	thunder_bgx.c	/^static int bgx_probe(struct pci_dev *pdev, const struct pci_device_id *ent)$/;"	f	file:
bgx_reg_modify	thunder_bgx.c	/^static void bgx_reg_modify(struct bgx *bgx, u8 lmac, u64 offset, u64 val)$/;"	f	file:
bgx_reg_read	thunder_bgx.c	/^static u64 bgx_reg_read(struct bgx *bgx, u8 lmac, u64 offset)$/;"	f	file:
bgx_reg_write	thunder_bgx.c	/^static void bgx_reg_write(struct bgx *bgx, u8 lmac, u64 offset, u64 val)$/;"	f	file:
bgx_remove	thunder_bgx.c	/^static void bgx_remove(struct pci_dev *pdev)$/;"	f	file:
bgx_set_lmac_config	thunder_bgx.c	/^static void bgx_set_lmac_config(struct bgx *bgx, u8 idx)$/;"	f	file:
bgx_set_lmac_mac	thunder_bgx.c	/^EXPORT_SYMBOL(bgx_set_lmac_mac);$/;"	v
bgx_set_lmac_mac	thunder_bgx.c	/^void bgx_set_lmac_mac(int node, int bgx_idx, int lmacid, const u8 *mac)$/;"	f
bgx_sgmii_change_link_state	thunder_bgx.c	/^static void bgx_sgmii_change_link_state(struct lmac *lmac)$/;"	f	file:
bgx_stats	nic.h	/^	struct bgx_stats	bgx_stats;$/;"	m	struct:nicvf	typeref:struct:nicvf::bgx_stats
bgx_stats	nic.h	/^	struct bgx_stats_msg    bgx_stats;$/;"	m	union:nic_mbx	typeref:struct:nic_mbx::bgx_stats_msg
bgx_stats	thunder_bgx.h	/^struct bgx_stats {$/;"	s
bgx_stats_msg	nic.h	/^struct bgx_stats_msg {$/;"	s
bgx_vnic	thunder_bgx.c	/^static struct bgx *bgx_vnic[MAX_BGX_THUNDER];$/;"	v	typeref:struct:bgx	file:
bgx_xaui_check_link	thunder_bgx.c	/^static int bgx_xaui_check_link(struct lmac *lmac)$/;"	f	file:
buf_addr	q_struct.h	/^	u64   buf_addr;$/;"	m	struct:rbdr_entry_t
bytes	nicvf_queues.h	/^	u64	bytes;$/;"	m	struct:rx_tx_queue_stats
caching	nicvf_queues.h	/^	u8		caching;$/;"	m	struct:rcv_queue
caching	q_struct.h	/^	u64 caching:1;$/;"	m	struct:cq_cfg
cfg	nic.h	/^	u64   cfg;$/;"	m	struct:qs_cfg_msg
cfg	nic.h	/^	u64   cfg;$/;"	m	struct:rq_cfg_msg
cfg	nic.h	/^	u64   cfg;$/;"	m	struct:sq_cfg_msg
cfg	nic.h	/^	u64 cfg;$/;"	m	struct:nicvf_rss_info
chan	q_struct.h	/^	u64   chan:12;$/;"	m	struct:cqe_rx_t
chans_per_bgx	nic_main.c	/^	u8		chans_per_bgx; \/* Rx\/Tx chans *\/$/;"	m	struct:hw_info	file:
chans_per_lbk	nic_main.c	/^	u8		chans_per_lbk;$/;"	m	struct:hw_info	file:
chans_per_lmac	nic_main.c	/^	u8		chans_per_lmac;$/;"	m	struct:hw_info	file:
chans_per_rgx	nic_main.c	/^	u8		chans_per_rgx;$/;"	m	struct:hw_info	file:
check_link	nic_main.c	/^	struct workqueue_struct *check_link;$/;"	m	struct:nicpf	typeref:struct:nicpf::workqueue_struct	file:
check_link	thunder_bgx.c	/^	struct workqueue_struct *check_link;$/;"	m	struct:lmac	typeref:struct:lmac::workqueue_struct	file:
cmp_queue	nicvf_queues.h	/^struct cmp_queue {$/;"	s
cont_qs_rbdr_idx	nicvf_queues.h	/^	u8		cont_qs_rbdr_idx;  \/* RBDR idx in the cont QS *\/$/;"	m	struct:rcv_queue
cont_rbdr_qs	nicvf_queues.h	/^	u8		cont_rbdr_qs;      \/* Continue buffer ptrs - QS num *\/$/;"	m	struct:rcv_queue
cpi_alg	nic.h	/^	u8			cpi_alg;$/;"	m	struct:nicvf
cpi_alg	nic.h	/^	u8    cpi_alg;$/;"	m	struct:cpi_cfg_msg
cpi_alg	nicvf_main.c	/^static int cpi_alg = CPI_ALG_NONE;$/;"	v	file:
cpi_algorithm_type	q_struct.h	/^enum cpi_algorithm_type {$/;"	g
cpi_base	nic_main.c	/^	u16			cpi_base[MAX_NUM_VFS_SUPPORTED];$/;"	m	struct:nicpf	file:
cpi_cfg	nic.h	/^	struct cpi_cfg_msg	cpi_cfg;$/;"	m	union:nic_mbx	typeref:struct:nic_mbx::cpi_cfg_msg
cpi_cfg_msg	nic.h	/^struct cpi_cfg_msg {$/;"	s
cpi_cnt	nic_main.c	/^	u16		cpi_cnt;$/;"	m	struct:hw_info	file:
cq	nicvf_queues.h	/^	struct	cmp_queue	cq[MAX_CMP_QUEUES_PER_QS];$/;"	m	struct:queue_set	typeref:struct:queue_set::cmp_queue
cq_cfg	q_struct.h	/^struct cq_cfg {$/;"	s
cq_cnt	nicvf_queues.h	/^	u8		cq_cnt;$/;"	m	struct:queue_set
cq_coalesce_usecs	nic.h	/^	u32			cq_coalesce_usecs;$/;"	m	struct:nicvf
cq_desc_t	q_struct.h	/^union cq_desc_t {$/;"	u
cq_idx	nic.h	/^	u8	cq_idx;		\/* Completion queue index *\/$/;"	m	struct:nicvf_cq_poll
cq_idx	nicvf_queues.h	/^	u8		cq_idx; \/* CQ index (0 to 7) in the QS *\/$/;"	m	struct:rcv_queue
cq_idx	nicvf_queues.h	/^	u8		cq_idx; \/* CQ index (0 to 7) in the above QS *\/$/;"	m	struct:snd_queue
cq_len	nicvf_queues.h	/^	u64		cq_len;$/;"	m	struct:queue_set
cq_limit	q_struct.h	/^	u64 cq_limit:8;$/;"	m	struct:sq_cfg
cq_pkt_len	q_struct.h	/^	u64   cq_pkt_len:8;$/;"	m	struct:cqe_rx_t
cq_qs	nicvf_queues.h	/^	u8		cq_qs;  \/* CQ's QS to which this RQ is assigned *\/$/;"	m	struct:rcv_queue
cq_qs	nicvf_queues.h	/^	u8		cq_qs;  \/* CQ's QS to which this SQ is pointing *\/$/;"	m	struct:snd_queue
cq_tcp_status	q_struct.h	/^	u64   cq_tcp_status:8;$/;"	m	struct:cqe_rx_tcp_t
cqe_rx_err_level	q_struct.h	/^enum cqe_rx_err_level {$/;"	g
cqe_rx_err_opcode	q_struct.h	/^enum cqe_rx_err_opcode {$/;"	g
cqe_rx_t	q_struct.h	/^struct cqe_rx_t {$/;"	s
cqe_rx_tcp_end_reason	q_struct.h	/^enum cqe_rx_tcp_end_reason {$/;"	g
cqe_rx_tcp_err_t	q_struct.h	/^struct cqe_rx_tcp_err_t {$/;"	s
cqe_rx_tcp_status	q_struct.h	/^enum cqe_rx_tcp_status {$/;"	g
cqe_rx_tcp_t	q_struct.h	/^struct cqe_rx_tcp_t {$/;"	s
cqe_send_status	q_struct.h	/^enum cqe_send_status {$/;"	g
cqe_send_t	q_struct.h	/^struct cqe_send_t {$/;"	s
cqe_type	q_struct.h	/^	u64   cqe_type:4; \/* W0 *\/$/;"	m	struct:cqe_rx_t
cqe_type	q_struct.h	/^	u64   cqe_type:4; \/* W0 *\/$/;"	m	struct:cqe_rx_tcp_err_t
cqe_type	q_struct.h	/^	u64   cqe_type:4; \/* W0 *\/$/;"	m	struct:cqe_rx_tcp_t
cqe_type	q_struct.h	/^	u64   cqe_type:4; \/* W0 *\/$/;"	m	struct:cqe_send_t
cqe_type	q_struct.h	/^	u64   cqe_type:4;$/;"	m	struct:rbe_tcp_cnxt_t
cqe_type	q_struct.h	/^enum cqe_type {$/;"	g
crc_alg	q_struct.h	/^	u64    crc_alg:2;$/;"	m	struct:sq_crc_subdesc
crc_insert_pos	q_struct.h	/^	u64    crc_insert_pos:16;$/;"	m	struct:sq_crc_subdesc
crc_ival	q_struct.h	/^	u64    crc_ival:32;$/;"	m	struct:sq_crc_subdesc
crc_len	q_struct.h	/^	u64    crc_len:16;$/;"	m	struct:sq_crc_subdesc
csum_inner_l3	q_struct.h	/^	u64    csum_inner_l3:1;$/;"	m	struct:sq_hdr_subdesc
csum_inner_l4	q_struct.h	/^	u64    csum_inner_l4:2;$/;"	m	struct:sq_hdr_subdesc
csum_l3	q_struct.h	/^	u64    csum_l3:1;$/;"	m	struct:sq_hdr_subdesc
csum_l4	q_struct.h	/^	u64    csum_l4:2;$/;"	m	struct:sq_hdr_subdesc
data	q_struct.h	/^	u64    data:64; \/* W1 *\/$/;"	m	struct:sq_imm_subdesc
debug	nicvf_main.c	/^static int debug = 0x00;$/;"	v	file:
desc	nicvf_queues.h	/^	void		*desc;$/;"	m	struct:cmp_queue
desc	nicvf_queues.h	/^	void		*desc;$/;"	m	struct:rbdr
desc	nicvf_queues.h	/^	void		*desc;$/;"	m	struct:snd_queue
dest_alg	q_struct.h	/^	u64   dest_alg:2;$/;"	m	struct:rx_hdr_t
dest_rq	q_struct.h	/^	u64   dest_rq:11;$/;"	m	struct:rx_hdr_t
disable_rss	q_struct.h	/^	u64   disable_rss:1;$/;"	m	struct:rx_hdr_t
disable_tcp_reassembly	q_struct.h	/^	u64   disable_tcp_reassembly:1;$/;"	m	struct:rx_hdr_t
dma	nicvf_queues.h	/^	dma_addr_t	dma;$/;"	m	struct:q_desc_mem
dma_addr	nicvf_queues.h	/^	u64		dma_addr;$/;"	m	struct:pgcache
dma_size	nicvf_queues.h	/^	u32		dma_size;$/;"	m	struct:rbdr
dmac	thunder_bgx.c	/^	int			dmac;$/;"	m	struct:lmac	file:
dmem	nicvf_queues.h	/^	struct q_desc_mem   dmem;$/;"	m	struct:cmp_queue	typeref:struct:cmp_queue::q_desc_mem
dmem	nicvf_queues.h	/^	struct q_desc_mem   dmem;$/;"	m	struct:rbdr	typeref:struct:rbdr::q_desc_mem
dmem	nicvf_queues.h	/^	struct q_desc_mem   dmem;$/;"	m	struct:snd_queue	typeref:struct:snd_queue::q_desc_mem
dont_send	q_struct.h	/^	u64    dont_send:1;$/;"	m	struct:sq_hdr_subdesc
drv_stats	nic.h	/^	struct nicvf_drv_stats  __percpu *drv_stats;$/;"	m	struct:nicvf	typeref:struct:nicvf::__percpu
duplex	nic.h	/^	u8			duplex;$/;"	m	struct:nicvf
duplex	nic.h	/^	u8    duplex;$/;"	m	struct:bgx_link_status
duplex	nic_main.c	/^	u8			*duplex;$/;"	m	struct:nicpf	file:
dwork	nic_main.c	/^	struct delayed_work     dwork;$/;"	m	struct:nicpf	typeref:struct:nicpf::delayed_work	file:
dwork	thunder_bgx.c	/^	struct delayed_work	dwork;$/;"	m	struct:lmac	typeref:struct:lmac::delayed_work	file:
en_tcp_reassembly	nicvf_queues.h	/^	bool		en_tcp_reassembly;$/;"	m	struct:rcv_queue
ena	q_struct.h	/^	u64 ena:1;$/;"	m	struct:cq_cfg
ena	q_struct.h	/^	u64 ena:1;$/;"	m	struct:qs_cfg
ena	q_struct.h	/^	u64 ena:1;$/;"	m	struct:rbdr_cfg
ena	q_struct.h	/^	u64 ena:1;$/;"	m	struct:rq_cfg
ena	q_struct.h	/^	u64 ena:1;$/;"	m	struct:sq_cfg
enable	nic.h	/^	bool  enable;$/;"	m	struct:set_loopback
enable	nic.h	/^	bool enable;$/;"	m	struct:nicvf_rss_info
enable	nicvf_queues.h	/^	bool		enable;$/;"	m	struct:cmp_queue
enable	nicvf_queues.h	/^	bool		enable;$/;"	m	struct:queue_set
enable	nicvf_queues.h	/^	bool		enable;$/;"	m	struct:rbdr
enable	nicvf_queues.h	/^	bool		enable;$/;"	m	struct:rcv_queue
enable	nicvf_queues.h	/^	bool		enable;$/;"	m	struct:snd_queue
err_level	q_struct.h	/^	u64   err_level:3;$/;"	m	struct:cqe_rx_t
err_opcode	q_struct.h	/^	u64   err_opcode:8;$/;"	m	struct:cqe_rx_t
ether_type_algorithm	q_struct.h	/^enum ether_type_algorithm {$/;"	g
fc_rx	nic.h	/^	u8    fc_rx;$/;"	m	struct:nicvf_pfc
fc_rx	nic.h	/^	u8    fc_rx;$/;"	m	struct:pfc
fc_tx	nic.h	/^	u8    fc_tx;$/;"	m	struct:nicvf_pfc
fc_tx	nic.h	/^	u8    fc_tx;$/;"	m	struct:pfc
flags	nic_main.c	/^	unsigned int		flags;$/;"	m	struct:nicpf	file:
for_each_cq_irq	nicvf_queues.h	29;"	d
for_each_rbdr_irq	nicvf_queues.h	33;"	d
for_each_sq_irq	nicvf_queues.h	31;"	d
frag_len	nicvf_queues.h	/^	u32		frag_len;$/;"	m	struct:rbdr
frag_num	nicvf_queues.c	/^static inline unsigned frag_num(unsigned i)$/;"	f	file:
free_cnt	nicvf_queues.h	/^	atomic_t	free_cnt;$/;"	m	struct:snd_queue
frs	nic.h	/^	struct set_frs_msg	frs;$/;"	m	union:nic_mbx	typeref:struct:nic_mbx::set_frs_msg
get	nic.h	/^	u8    get; \/* Get or set PFC settings *\/$/;"	m	struct:pfc
get_bgx	thunder_bgx.c	/^static struct bgx *get_bgx(int node, int bgx_idx)$/;"	f	file:
hash_bits	nic.h	/^	u8    hash_bits;$/;"	m	struct:rss_cfg_msg
hash_bits	nic.h	/^	u8  hash_bits;$/;"	m	struct:nicvf_rss_info
hdr_sl	nic_reg.h	/^	u64 hdr_sl:5;	\/* Header skip length *\/$/;"	m	struct:pkind_cfg
hdr_start	q_struct.h	/^	u64    hdr_start:16;$/;"	m	struct:sq_crc_subdesc
head	nicvf_queues.h	/^	u32		head;$/;"	m	struct:rbdr
head	nicvf_queues.h	/^	u32		head;$/;"	m	struct:snd_queue
hw	nic_main.c	/^	struct hw_info          *hw;$/;"	m	struct:nicpf	typeref:struct:nicpf::hw_info	file:
hw_info	nic_main.c	/^struct hw_info {$/;"	s	file:
hw_stats	nic.h	/^	struct nicvf_hw_stats   hw_stats;$/;"	m	struct:nicvf	typeref:struct:nicvf::nicvf_hw_stats
hw_tso	nic.h	/^	bool			hw_tso;$/;"	m	struct:nicvf
idx	nic.h	/^	u8    idx;$/;"	m	struct:bgx_stats_msg
ind_tbl	nic.h	/^	u8    ind_tbl[RSS_IND_TBL_LEN_PER_MBX_MSG];$/;"	m	struct:rss_cfg_msg
ind_tbl	nic.h	/^	u8  ind_tbl[NIC_MAX_RSS_IDR_TBL_SIZE];$/;"	m	struct:nicvf_rss_info
ind_tbl_size	nic.h	/^	u16   ind_tbl_size;$/;"	m	struct:rss_sz_msg
index	nicvf_ethtool.c	/^	unsigned int index;$/;"	m	struct:nicvf_stat	file:
inner_l3_offset	q_struct.h	/^	u64    inner_l3_offset:8;$/;"	m	struct:sq_hdr_subdesc
inner_l4_offset	q_struct.h	/^	u64    inner_l4_offset:8;$/;"	m	struct:sq_hdr_subdesc
iommu_domain	nic.h	/^	void			*iommu_domain;$/;"	m	struct:nicvf
irq	nicvf_queues.h	/^	int		irq;$/;"	m	struct:cmp_queue
irq_allocated	nic.h	/^	bool			irq_allocated[NIC_VF_MSIX_VECTORS];$/;"	m	struct:nicvf
irq_allocated	nic_main.c	/^	bool			irq_allocated[NIC_PF_MSIX_VECTORS];$/;"	m	struct:nicpf	file:
irq_name	nic.h	/^	char			irq_name[NIC_VF_MSIX_VECTORS][IFNAMSIZ + 15];$/;"	m	struct:nicvf
irq_name	nic_main.c	/^	char			irq_name[NIC_PF_MSIX_VECTORS][20];$/;"	m	struct:nicpf	file:
is_dlm	thunder_bgx.c	/^	bool                    is_dlm;$/;"	m	struct:bgx	file:
is_rgx	thunder_bgx.c	/^	bool                    is_rgx;$/;"	m	struct:bgx	file:
is_sgmii	thunder_bgx.c	/^	bool			is_sgmii;$/;"	m	struct:lmac	file:
is_xdp	nicvf_queues.h	/^	bool		is_xdp;$/;"	m	struct:rbdr
is_xdp	nicvf_queues.h	/^	bool		is_xdp;$/;"	m	struct:snd_queue
key	nic.h	/^	u64 key[RSS_HASH_KEY_SIZE];$/;"	m	struct:nicvf_rss_info
l2_present	q_struct.h	/^	u64   l2_present:1;$/;"	m	struct:cqe_rx_t
l2_ptr	q_struct.h	/^	u64   l2_ptr:8;$/;"	m	struct:cqe_rx_t
l3_offset	q_struct.h	/^	u64    l3_offset:8;$/;"	m	struct:sq_hdr_subdesc
l3_ptr	q_struct.h	/^	u64   l3_ptr:8;$/;"	m	struct:cqe_rx_t
l3_type	q_struct.h	/^	u64   l3_type:4;$/;"	m	struct:cqe_rx_t
l4_offset	q_struct.h	/^	u64    l4_offset:8;$/;"	m	struct:sq_hdr_subdesc
l4_ptr	q_struct.h	/^	u64   l4_ptr:8;$/;"	m	struct:cqe_rx_t
l4_type	q_struct.h	/^	u64   l4_type:4;$/;"	m	struct:cqe_rx_t
lane_to_sds	thunder_bgx.c	/^	u8                      lane_to_sds;$/;"	m	struct:lmac	file:
last_duplex	thunder_bgx.c	/^	unsigned int            last_duplex;$/;"	m	struct:lmac	file:
last_link	thunder_bgx.c	/^	unsigned int            last_link;$/;"	m	struct:lmac	file:
last_speed	thunder_bgx.c	/^	unsigned int            last_speed;$/;"	m	struct:lmac	file:
layer3_type	q_struct.h	/^enum layer3_type {$/;"	g
layer4_type	q_struct.h	/^enum layer4_type {$/;"	g
lbk	nic.h	/^	struct set_loopback	lbk;$/;"	m	union:nic_mbx	typeref:struct:nic_mbx::set_loopback
ld_type	q_struct.h	/^	u64    ld_type:2;$/;"	m	struct:sq_gather_subdesc
ldwb	q_struct.h	/^	u64 ldwb:1;$/;"	m	struct:rbdr_cfg
ldwb	q_struct.h	/^	u64 ldwb:1;$/;"	m	struct:sq_cfg
len	q_struct.h	/^	u64    len:14;$/;"	m	struct:sq_imm_subdesc
lenerr_en	nic_reg.h	/^	u64 lenerr_en:1;\/* L2 length error check enable *\/$/;"	m	struct:pkind_cfg
lines	q_struct.h	/^	u64 lines:12;$/;"	m	struct:rbdr_cfg
link	nic_main.c	/^	u8			*link;$/;"	m	struct:nicpf	file:
link_status	nic.h	/^	struct bgx_link_status  link_status;$/;"	m	union:nic_mbx	typeref:struct:nic_mbx::bgx_link_status
link_up	nic.h	/^	bool			link_up;$/;"	m	struct:nicvf
link_up	nic.h	/^	u8    link_up;$/;"	m	struct:bgx_link_status
link_up	thunder_bgx.c	/^	bool			link_up;$/;"	m	struct:lmac	file:
lmac	thunder_bgx.c	/^	struct	lmac		lmac[MAX_LMAC_PER_BGX];$/;"	m	struct:bgx	typeref:struct:bgx::lmac	file:
lmac	thunder_bgx.c	/^struct lmac {$/;"	s	file:
lmac_count	thunder_bgx.c	/^	u8			lmac_count;$/;"	m	struct:bgx	file:
lmac_count	thunder_bgx.c	/^static int lmac_count; \/* Total no of LMACs in system *\/$/;"	v	file:
lmac_set_lane2sds	thunder_bgx.c	/^static void lmac_set_lane2sds(struct bgx *bgx, struct lmac *lmac)$/;"	f	file:
lmac_set_training	thunder_bgx.c	/^static void lmac_set_training(struct bgx *bgx, struct lmac *lmac, int lmacid)$/;"	f	file:
lmac_type	thunder_bgx.c	/^	u8                      lmac_type;$/;"	m	struct:lmac	file:
lmacid	thunder_bgx.c	/^	int			lmacid; \/* ID within BGX *\/$/;"	m	struct:lmac	file:
lmacid_bd	thunder_bgx.c	/^	int			lmacid_bd; \/* ID on board *\/$/;"	m	struct:lmac	file:
lock	nicvf_queues.h	/^	spinlock_t	lock;  \/* lock to serialize processing CQEs *\/$/;"	m	struct:cmp_queue
lock_ena	q_struct.h	/^	u64 lock_ena:1;$/;"	m	struct:qs_cfg
lock_viol_cqe_ena	q_struct.h	/^	u64 lock_viol_cqe_ena:1;$/;"	m	struct:qs_cfg
loopback_supported	nic.h	/^	bool			loopback_supported;$/;"	m	struct:nicvf
loopback_supported	nic.h	/^	u8    loopback_supported:1;$/;"	m	struct:nic_cfg_msg
mac	nic.h	/^	struct set_mac_msg	mac;$/;"	m	union:nic_mbx	typeref:struct:nic_mbx::set_mac_msg
mac	thunder_bgx.c	/^	u8			mac[ETH_ALEN];$/;"	m	struct:lmac	file:
mac_addr	nic.h	/^	u8    mac_addr[ETH_ALEN];$/;"	m	struct:nic_cfg_msg
mac_addr	nic.h	/^	u8    mac_addr[ETH_ALEN];$/;"	m	struct:set_mac_msg
mac_type	nic.h	/^	u8			mac_type;$/;"	m	struct:nicvf
mac_type	nic.h	/^	u8    mac_type;$/;"	m	struct:bgx_link_status
max_bgx_per_node	thunder_bgx.c	/^static int max_bgx_per_node;$/;"	v	file:
max_frs	nic.h	/^	u16   max_frs;$/;"	m	struct:set_frs_msg
max_lmac	thunder_bgx.c	/^	u8			max_lmac;$/;"	m	struct:bgx	file:
max_queues	nic.h	/^	u8			max_queues;$/;"	m	struct:nicvf
maxlen	nic_reg.h	/^	u64 maxlen:16;	\/* Max frame size *\/$/;"	m	struct:pkind_cfg
mbx_lock	nic_main.c	/^	bool			mbx_lock[MAX_NUM_VFS_SUPPORTED];$/;"	m	struct:nicpf	file:
mem_alg	q_struct.h	/^	u64    mem_alg:4;$/;"	m	struct:sq_mem_subdesc
mem_dsz	q_struct.h	/^	u64    mem_dsz:2;$/;"	m	struct:sq_mem_subdesc
minlen	nic_reg.h	/^	u64 minlen:16;	\/* Min frame size *\/$/;"	m	struct:pkind_cfg
msg	nic.h	/^	struct { u8 msg; }	msg;$/;"	m	struct:nic_mbx::__anon1
msg	nic.h	/^	struct { u8 msg; }	msg;$/;"	m	union:nic_mbx	typeref:struct:nic_mbx::__anon1
msg	nic.h	/^	u8    msg;$/;"	m	struct:bgx_link_status
msg	nic.h	/^	u8    msg;$/;"	m	struct:bgx_stats_msg
msg	nic.h	/^	u8    msg;$/;"	m	struct:cpi_cfg_msg
msg	nic.h	/^	u8    msg;$/;"	m	struct:nic_cfg_msg
msg	nic.h	/^	u8    msg;$/;"	m	struct:nicvf_ptr
msg	nic.h	/^	u8    msg;$/;"	m	struct:pfc
msg	nic.h	/^	u8    msg;$/;"	m	struct:qs_cfg_msg
msg	nic.h	/^	u8    msg;$/;"	m	struct:reset_stat_cfg
msg	nic.h	/^	u8    msg;$/;"	m	struct:rq_cfg_msg
msg	nic.h	/^	u8    msg;$/;"	m	struct:rss_cfg_msg
msg	nic.h	/^	u8    msg;$/;"	m	struct:rss_sz_msg
msg	nic.h	/^	u8    msg;$/;"	m	struct:set_frs_msg
msg	nic.h	/^	u8    msg;$/;"	m	struct:set_loopback
msg	nic.h	/^	u8    msg;$/;"	m	struct:set_mac_msg
msg	nic.h	/^	u8    msg;$/;"	m	struct:sq_cfg_msg
msg	nic.h	/^	u8    msg;$/;"	m	struct:sqs_alloc
msg_enable	nic.h	/^	u32			msg_enable;$/;"	m	struct:nicvf
name	nicvf_ethtool.c	/^	char name[ETH_GSTRING_LEN];$/;"	m	struct:nicvf_stat	file:
napi	nic.h	/^	struct	napi_struct napi;$/;"	m	struct:nicvf_cq_poll	typeref:struct:nicvf_cq_poll::napi_struct
napi	nic.h	/^	struct nicvf_cq_poll	*napi[8];$/;"	m	struct:nicvf	typeref:struct:nicvf::nicvf_cq_poll
netdev	nic.h	/^	struct net_device	*netdev;$/;"	m	struct:nicvf	typeref:struct:nicvf::net_device
netdev	thunder_bgx.c	/^	struct net_device       netdev;$/;"	m	struct:lmac	typeref:struct:lmac::net_device	file:
nic_alloc_sqs	nic_main.c	/^static void nic_alloc_sqs(struct nicpf *nic, struct sqs_alloc *sqs)$/;"	f	file:
nic_cfg	nic.h	/^	struct nic_cfg_msg	nic_cfg;$/;"	m	union:nic_mbx	typeref:struct:nic_mbx::nic_cfg_msg
nic_cfg_msg	nic.h	/^struct nic_cfg_msg {$/;"	s
nic_cleanup_module	nic_main.c	/^module_exit(nic_cleanup_module);$/;"	v
nic_cleanup_module	nic_main.c	/^static void __exit nic_cleanup_module(void)$/;"	f	file:
nic_clear_mbx_intr	nic_main.c	/^static void nic_clear_mbx_intr(struct nicpf *nic, int vf, int mbx_reg)$/;"	f	file:
nic_config_cpi	nic_main.c	/^static void nic_config_cpi(struct nicpf *nic, struct cpi_cfg_msg *cfg)$/;"	f	file:
nic_config_loopback	nic_main.c	/^static int nic_config_loopback(struct nicpf *nic, struct set_loopback *lbk)$/;"	f	file:
nic_config_rss	nic_main.c	/^static void nic_config_rss(struct nicpf *nic, struct rss_cfg_msg *cfg)$/;"	f	file:
nic_driver	nic_main.c	/^static struct pci_driver nic_driver = {$/;"	v	typeref:struct:pci_driver	file:
nic_enable_mbx_intr	nic_main.c	/^static void nic_enable_mbx_intr(struct nicpf *nic)$/;"	f	file:
nic_enable_tunnel_parsing	nic_main.c	/^static void nic_enable_tunnel_parsing(struct nicpf *nic, int vf)$/;"	f	file:
nic_enable_vf	nic_main.c	/^static void nic_enable_vf(struct nicpf *nic, int vf, bool enable)$/;"	f	file:
nic_free_all_interrupts	nic_main.c	/^static void nic_free_all_interrupts(struct nicpf *nic)$/;"	f	file:
nic_free_lmacmem	nic_main.c	/^static void nic_free_lmacmem(struct nicpf *nic)$/;"	f	file:
nic_get_bgx_stats	nic_main.c	/^static void nic_get_bgx_stats(struct nicpf *nic, struct bgx_stats_msg *bgx)$/;"	f	file:
nic_get_hw_info	nic_main.c	/^static int nic_get_hw_info(struct nicpf *nic)$/;"	f	file:
nic_get_mbx_addr	nic_main.c	/^static u64 nic_get_mbx_addr(int vf)$/;"	f	file:
nic_get_node_id	nic.h	/^static inline int nic_get_node_id(struct pci_dev *pdev)$/;"	f
nic_handle_mbx_intr	nic_main.c	/^static void nic_handle_mbx_intr(struct nicpf *nic, int vf)$/;"	f	file:
nic_id_table	nic_main.c	/^static const struct pci_device_id nic_id_table[] = {$/;"	v	typeref:struct:pci_device_id	file:
nic_init_hw	nic_main.c	/^static int nic_init_hw(struct nicpf *nic)$/;"	f	file:
nic_init_module	nic_main.c	/^module_init(nic_init_module);$/;"	v
nic_init_module	nic_main.c	/^static int __init nic_init_module(void)$/;"	f	file:
nic_mbx	nic.h	/^union nic_mbx {$/;"	u
nic_mbx_intr_handler	nic_main.c	/^static irqreturn_t nic_mbx_intr_handler(int irq, void *nic_irq)$/;"	f	file:
nic_mbx_send_ack	nic_main.c	/^static void nic_mbx_send_ack(struct nicpf *nic, int vf)$/;"	f	file:
nic_mbx_send_nack	nic_main.c	/^static void nic_mbx_send_nack(struct nicpf *nic, int vf)$/;"	f	file:
nic_mbx_send_ready	nic_main.c	/^static void nic_mbx_send_ready(struct nicpf *nic, int vf)$/;"	f	file:
nic_num_sqs_en	nic_main.c	/^static int nic_num_sqs_en(struct nicpf *nic, int vf_en)$/;"	f	file:
nic_nxt_avail_sqs	nic_main.c	/^static int nic_nxt_avail_sqs(struct nicpf *nic)$/;"	f	file:
nic_pause_frame	nic_main.c	/^static void nic_pause_frame(struct nicpf *nic, int vf, struct pfc *cfg)$/;"	f	file:
nic_poll_for_link	nic_main.c	/^static void nic_poll_for_link(struct work_struct *work)$/;"	f	file:
nic_probe	nic_main.c	/^static int nic_probe(struct pci_dev *pdev, const struct pci_device_id *ent)$/;"	f	file:
nic_rcv_queue_sw_sync	nic_main.c	/^static int nic_rcv_queue_sw_sync(struct nicpf *nic)$/;"	f	file:
nic_reg_read	nic_main.c	/^static u64 nic_reg_read(struct nicpf *nic, u64 offset)$/;"	f	file:
nic_reg_write	nic_main.c	/^static void nic_reg_write(struct nicpf *nic, u64 offset, u64 val)$/;"	f	file:
nic_register_interrupts	nic_main.c	/^static int nic_register_interrupts(struct nicpf *nic)$/;"	f	file:
nic_remove	nic_main.c	/^static void nic_remove(struct pci_dev *pdev)$/;"	f	file:
nic_reset_stat_counters	nic_main.c	/^static int nic_reset_stat_counters(struct nicpf *nic,$/;"	f	file:
nic_send_ld_type_e	q_struct.h	/^enum nic_send_ld_type_e {$/;"	g
nic_send_msg_to_vf	nic_main.c	/^static void nic_send_msg_to_vf(struct nicpf *nic, int vf, union nic_mbx *mbx)$/;"	f	file:
nic_send_pnicvf	nic_main.c	/^static void nic_send_pnicvf(struct nicpf *nic, int sqs)$/;"	f	file:
nic_send_rss_size	nic_main.c	/^static void nic_send_rss_size(struct nicpf *nic, int vf)$/;"	f	file:
nic_send_snicvf	nic_main.c	/^static void nic_send_snicvf(struct nicpf *nic, struct nicvf_ptr *nicvf)$/;"	f	file:
nic_set_lmac_vf_mapping	nic_main.c	/^static void nic_set_lmac_vf_mapping(struct nicpf *nic)$/;"	f	file:
nic_set_tx_pkt_pad	nic_main.c	/^static void nic_set_tx_pkt_pad(struct nicpf *nic, int size)$/;"	f	file:
nic_sriov_init	nic_main.c	/^static int nic_sriov_init(struct pci_dev *pdev, struct nicpf *nic)$/;"	f	file:
nic_tx_channel_cfg	nic_main.c	/^static void nic_tx_channel_cfg(struct nicpf *nic, u8 vnic,$/;"	f	file:
nic_unregister_interrupts	nic_main.c	/^static void nic_unregister_interrupts(struct nicpf *nic)$/;"	f	file:
nic_update_hw_frs	nic_main.c	/^static int nic_update_hw_frs(struct nicpf *nic, int new_frs, int vf)$/;"	f	file:
nicpf	nic_main.c	/^struct nicpf {$/;"	s	file:
nicpf-y	Makefile	/^nicpf-y := nic_main.o$/;"	m
nicvf	nic.h	/^	struct  nicvf *nicvf;$/;"	m	struct:nicvf_cq_poll	typeref:struct:nicvf_cq_poll::nicvf
nicvf	nic.h	/^	struct nicvf_ptr	nicvf;$/;"	m	union:nic_mbx	typeref:struct:nic_mbx::nicvf_ptr
nicvf	nic.h	/^	u64   nicvf;$/;"	m	struct:nicvf_ptr
nicvf	nic.h	/^struct nicvf {$/;"	s
nicvf	nic_main.c	/^	u64			nicvf[MAX_NUM_VFS_SUPPORTED];$/;"	m	struct:nicpf	file:
nicvf-y	Makefile	/^nicvf-y := nicvf_main.o nicvf_queues.o$/;"	m
nicvf_alloc_page	nicvf_queues.c	/^static inline struct pgcache *nicvf_alloc_page(struct nicvf *nic,$/;"	f	file:
nicvf_alloc_q_desc_mem	nicvf_queues.c	/^static int nicvf_alloc_q_desc_mem(struct nicvf *nic, struct q_desc_mem *dmem,$/;"	f	file:
nicvf_alloc_rcv_buffer	nicvf_queues.c	/^static inline int nicvf_alloc_rcv_buffer(struct nicvf *nic, struct rbdr *rbdr,$/;"	f	file:
nicvf_alloc_resources	nicvf_queues.c	/^static int nicvf_alloc_resources(struct nicvf *nic)$/;"	f	file:
nicvf_change_mtu	nicvf_main.c	/^static int nicvf_change_mtu(struct net_device *netdev, int new_mtu)$/;"	f	file:
nicvf_check_cqe_rx_errs	nicvf_queues.c	/^int nicvf_check_cqe_rx_errs(struct nicvf *nic, struct cqe_rx_t *cqe_rx)$/;"	f
nicvf_check_cqe_tx_errs	nicvf_queues.c	/^int nicvf_check_cqe_tx_errs(struct nicvf *nic, struct cqe_send_t *cqe_tx)$/;"	f
nicvf_check_pf_ready	nicvf_main.c	/^static int nicvf_check_pf_ready(struct nicvf *nic)$/;"	f	file:
nicvf_cleanup_module	nicvf_main.c	/^module_exit(nicvf_cleanup_module);$/;"	v
nicvf_cleanup_module	nicvf_main.c	/^static void __exit nicvf_cleanup_module(void)$/;"	f	file:
nicvf_clear_intr	nicvf_queues.c	/^void nicvf_clear_intr(struct nicvf *nic, int int_type, int q_idx)$/;"	f
nicvf_cmp_queue_config	nicvf_queues.c	/^void nicvf_cmp_queue_config(struct nicvf *nic, struct queue_set *qs,$/;"	f
nicvf_config_cpi	nicvf_main.c	/^static void nicvf_config_cpi(struct nicvf *nic)$/;"	f	file:
nicvf_config_data_transfer	nicvf_queues.c	/^int nicvf_config_data_transfer(struct nicvf *nic, bool enable)$/;"	f
nicvf_config_loopback	nicvf_main.c	/^static int nicvf_config_loopback(struct nicvf *nic,$/;"	f	file:
nicvf_config_rss	nicvf_main.c	/^void nicvf_config_rss(struct nicvf *nic)$/;"	f
nicvf_config_vlan_stripping	nicvf_queues.c	/^void nicvf_config_vlan_stripping(struct nicvf *nic, netdev_features_t features)$/;"	f
nicvf_cq_intr_handler	nicvf_main.c	/^static int nicvf_cq_intr_handler(struct net_device *netdev, u8 cq_idx,$/;"	f	file:
nicvf_cq_poll	nic.h	/^struct nicvf_cq_poll {$/;"	s
nicvf_disable_intr	nicvf_queues.c	/^void nicvf_disable_intr(struct nicvf *nic, int int_type, int q_idx)$/;"	f
nicvf_driver	nicvf_main.c	/^static struct pci_driver nicvf_driver = {$/;"	v	typeref:struct:pci_driver	file:
nicvf_drv_stats	nic.h	/^struct nicvf_drv_stats {$/;"	s
nicvf_drv_stats	nicvf_ethtool.c	/^static const struct nicvf_stat nicvf_drv_stats[] = {$/;"	v	typeref:struct:nicvf_stat	file:
nicvf_dump_intr_status	nicvf_main.c	/^static void nicvf_dump_intr_status(struct nicvf *nic)$/;"	f	file:
nicvf_enable_intr	nicvf_queues.c	/^void nicvf_enable_intr(struct nicvf *nic, int int_type, int q_idx)$/;"	f
nicvf_ethtool_ops	nicvf_ethtool.c	/^static const struct ethtool_ops nicvf_ethtool_ops = {$/;"	v	typeref:struct:ethtool_ops	file:
nicvf_fix_features	nicvf_main.c	/^static netdev_features_t nicvf_fix_features(struct net_device *netdev,$/;"	f	file:
nicvf_free_cmp_queue	nicvf_queues.c	/^static void nicvf_free_cmp_queue(struct nicvf *nic, struct cmp_queue *cq)$/;"	f	file:
nicvf_free_cq_poll	nicvf_main.c	/^static inline void nicvf_free_cq_poll(struct nicvf *nic)$/;"	f	file:
nicvf_free_q_desc_mem	nicvf_queues.c	/^static void nicvf_free_q_desc_mem(struct nicvf *nic, struct q_desc_mem *dmem)$/;"	f	file:
nicvf_free_rbdr	nicvf_queues.c	/^static void nicvf_free_rbdr(struct nicvf *nic, struct rbdr *rbdr)$/;"	f	file:
nicvf_free_resources	nicvf_queues.c	/^static void nicvf_free_resources(struct nicvf *nic)$/;"	f	file:
nicvf_free_snd_queue	nicvf_queues.c	/^static void nicvf_free_snd_queue(struct nicvf *nic, struct snd_queue *sq)$/;"	f	file:
nicvf_get_channels	nicvf_ethtool.c	/^static void nicvf_get_channels(struct net_device *dev,$/;"	f	file:
nicvf_get_coalesce	nicvf_ethtool.c	/^static int nicvf_get_coalesce(struct net_device *netdev,$/;"	f	file:
nicvf_get_drvinfo	nicvf_ethtool.c	/^static void nicvf_get_drvinfo(struct net_device *netdev,$/;"	f	file:
nicvf_get_ethtool_stats	nicvf_ethtool.c	/^static void nicvf_get_ethtool_stats(struct net_device *netdev,$/;"	f	file:
nicvf_get_link	nicvf_ethtool.c	/^static u32 nicvf_get_link(struct net_device *netdev)$/;"	f	file:
nicvf_get_link_ksettings	nicvf_ethtool.c	/^static int nicvf_get_link_ksettings(struct net_device *netdev,$/;"	f	file:
nicvf_get_msglevel	nicvf_ethtool.c	/^static u32 nicvf_get_msglevel(struct net_device *netdev)$/;"	f	file:
nicvf_get_nxt_sqentry	nicvf_queues.c	/^static inline int nicvf_get_nxt_sqentry(struct snd_queue *sq, int qentry)$/;"	f	file:
nicvf_get_page	nicvf_queues.c	/^static void nicvf_get_page(struct nicvf *nic)$/;"	f	file:
nicvf_get_pauseparam	nicvf_ethtool.c	/^static void nicvf_get_pauseparam(struct net_device *dev,$/;"	f	file:
nicvf_get_primary_vf_struct	nicvf_main.c	/^static void nicvf_get_primary_vf_struct(struct nicvf *nic)$/;"	f	file:
nicvf_get_qset_stats	nicvf_ethtool.c	/^static void nicvf_get_qset_stats(struct nicvf *nic,$/;"	f	file:
nicvf_get_qset_strings	nicvf_ethtool.c	/^static void nicvf_get_qset_strings(struct nicvf *nic, u8 **data, int qset)$/;"	f	file:
nicvf_get_rcv_skb	nicvf_queues.c	/^struct sk_buff *nicvf_get_rcv_skb(struct nicvf *nic,$/;"	f
nicvf_get_regs	nicvf_ethtool.c	/^static void nicvf_get_regs(struct net_device *dev,$/;"	f	file:
nicvf_get_regs_len	nicvf_ethtool.c	/^static int nicvf_get_regs_len(struct net_device *dev)$/;"	f	file:
nicvf_get_ringparam	nicvf_ethtool.c	/^static void nicvf_get_ringparam(struct net_device *netdev,$/;"	f	file:
nicvf_get_rss_hash_opts	nicvf_ethtool.c	/^static int nicvf_get_rss_hash_opts(struct nicvf *nic,$/;"	f	file:
nicvf_get_rss_size	nicvf_main.c	/^static void nicvf_get_rss_size(struct nicvf *nic)$/;"	f	file:
nicvf_get_rxfh	nicvf_ethtool.c	/^static int nicvf_get_rxfh(struct net_device *dev, u32 *indir, u8 *hkey,$/;"	f	file:
nicvf_get_rxfh_indir_size	nicvf_ethtool.c	/^static u32 nicvf_get_rxfh_indir_size(struct net_device *dev)$/;"	f	file:
nicvf_get_rxfh_key_size	nicvf_ethtool.c	/^static u32 nicvf_get_rxfh_key_size(struct net_device *netdev)$/;"	f	file:
nicvf_get_rxnfc	nicvf_ethtool.c	/^static int nicvf_get_rxnfc(struct net_device *dev,$/;"	f	file:
nicvf_get_sq_desc	nicvf_queues.c	/^static inline int nicvf_get_sq_desc(struct snd_queue *sq, int desc_cnt)$/;"	f	file:
nicvf_get_sset_count	nicvf_ethtool.c	/^static int nicvf_get_sset_count(struct net_device *netdev, int sset)$/;"	f	file:
nicvf_get_stats64	nicvf_main.c	/^static void nicvf_get_stats64(struct net_device *netdev,$/;"	f	file:
nicvf_get_strings	nicvf_ethtool.c	/^static void nicvf_get_strings(struct net_device *netdev, u32 sset, u8 *data)$/;"	f	file:
nicvf_handle_mbx_intr	nicvf_main.c	/^static void  nicvf_handle_mbx_intr(struct nicvf *nic)$/;"	f	file:
nicvf_handle_qs_err	nicvf_main.c	/^static void nicvf_handle_qs_err(unsigned long data)$/;"	f	file:
nicvf_hw_set_mac_addr	nicvf_main.c	/^static int nicvf_hw_set_mac_addr(struct nicvf *nic, struct net_device *netdev)$/;"	f	file:
nicvf_hw_stats	nic.h	/^struct nicvf_hw_stats {$/;"	s
nicvf_hw_stats	nicvf_ethtool.c	/^static const struct nicvf_stat nicvf_hw_stats[] = {$/;"	v	typeref:struct:nicvf_stat	file:
nicvf_id_table	nicvf_main.c	/^static const struct pci_device_id nicvf_id_table[] = {$/;"	v	typeref:struct:pci_device_id	file:
nicvf_init_cmp_queue	nicvf_queues.c	/^static int nicvf_init_cmp_queue(struct nicvf *nic,$/;"	f	file:
nicvf_init_module	nicvf_main.c	/^module_init(nicvf_init_module);$/;"	v
nicvf_init_module	nicvf_main.c	/^static int __init nicvf_init_module(void)$/;"	f	file:
nicvf_init_rbdr	nicvf_queues.c	/^static int  nicvf_init_rbdr(struct nicvf *nic, struct rbdr *rbdr,$/;"	f	file:
nicvf_init_resources	nicvf_main.c	/^static int nicvf_init_resources(struct nicvf *nic)$/;"	f	file:
nicvf_init_snd_queue	nicvf_queues.c	/^static int nicvf_init_snd_queue(struct nicvf *nic,$/;"	f	file:
nicvf_int_type_to_mask	nicvf_queues.c	/^static u64 nicvf_int_type_to_mask(int int_type, int q_idx)$/;"	f	file:
nicvf_intr_handler	nicvf_main.c	/^static irqreturn_t nicvf_intr_handler(int irq, void *cq_irq)$/;"	f	file:
nicvf_iova_to_phys	nicvf_queues.h	/^static inline u64 nicvf_iova_to_phys(struct nicvf *nic, dma_addr_t dma_addr)$/;"	f
nicvf_is_intr_enabled	nicvf_queues.c	/^int nicvf_is_intr_enabled(struct nicvf *nic, int int_type, int q_idx)$/;"	f
nicvf_misc_intr_handler	nicvf_main.c	/^static irqreturn_t nicvf_misc_intr_handler(int irq, void *nicvf_irq)$/;"	f	file:
nicvf_n_drv_stats	nicvf_ethtool.c	/^static const unsigned int nicvf_n_drv_stats = ARRAY_SIZE(nicvf_drv_stats);$/;"	v	file:
nicvf_n_hw_stats	nicvf_ethtool.c	/^static const unsigned int nicvf_n_hw_stats = ARRAY_SIZE(nicvf_hw_stats);$/;"	v	file:
nicvf_n_queue_stats	nicvf_ethtool.c	/^static const unsigned int nicvf_n_queue_stats = ARRAY_SIZE(nicvf_queue_stats);$/;"	v	file:
nicvf_netdev_ops	nicvf_main.c	/^static const struct net_device_ops nicvf_netdev_ops = {$/;"	v	typeref:struct:net_device_ops	file:
nicvf_netdev_qidx	nicvf_main.c	/^static inline u8 nicvf_netdev_qidx(struct nicvf *nic, u8 qidx)$/;"	f	file:
nicvf_open	nicvf_main.c	/^int nicvf_open(struct net_device *netdev)$/;"	f
nicvf_pfc	nic.h	/^struct nicvf_pfc {$/;"	s
nicvf_poll	nicvf_main.c	/^static int nicvf_poll(struct napi_struct *napi, int budget)$/;"	f	file:
nicvf_poll_reg	nicvf_queues.c	/^static int nicvf_poll_reg(struct nicvf *nic, int qidx,$/;"	f	file:
nicvf_probe	nicvf_main.c	/^static int nicvf_probe(struct pci_dev *pdev, const struct pci_device_id *ent)$/;"	f	file:
nicvf_ptr	nic.h	/^struct nicvf_ptr {$/;"	s
nicvf_put_sq_desc	nicvf_queues.c	/^void nicvf_put_sq_desc(struct snd_queue *sq, int desc_cnt)$/;"	f
nicvf_qs_err_intr_handler	nicvf_main.c	/^static irqreturn_t nicvf_qs_err_intr_handler(int irq, void *nicvf_irq)$/;"	f	file:
nicvf_qset_config	nicvf_queues.c	/^void nicvf_qset_config(struct nicvf *nic, bool enable)$/;"	f
nicvf_queue_reg_read	nicvf_main.c	/^u64 nicvf_queue_reg_read(struct nicvf *nic, u64 offset, u64 qidx)$/;"	f
nicvf_queue_reg_write	nicvf_main.c	/^void nicvf_queue_reg_write(struct nicvf *nic, u64 offset,$/;"	f
nicvf_queue_stats	nicvf_ethtool.c	/^static const struct nicvf_stat nicvf_queue_stats[] = {$/;"	v	typeref:struct:nicvf_stat	file:
nicvf_rb_ptr_to_skb	nicvf_queues.c	/^static struct sk_buff *nicvf_rb_ptr_to_skb(struct nicvf *nic,$/;"	f	file:
nicvf_rbdr_config	nicvf_queues.c	/^static void nicvf_rbdr_config(struct nicvf *nic, struct queue_set *qs,$/;"	f	file:
nicvf_rbdr_intr_handler	nicvf_main.c	/^static irqreturn_t nicvf_rbdr_intr_handler(int irq, void *nicvf_irq)$/;"	f	file:
nicvf_rbdr_task	nicvf_queues.c	/^void nicvf_rbdr_task(unsigned long data)$/;"	f
nicvf_rbdr_work	nicvf_queues.c	/^void nicvf_rbdr_work(struct work_struct *work)$/;"	f
nicvf_rcv_pkt_handler	nicvf_main.c	/^static void nicvf_rcv_pkt_handler(struct net_device *netdev,$/;"	f	file:
nicvf_rcv_queue_config	nicvf_queues.c	/^static void nicvf_rcv_queue_config(struct nicvf *nic, struct queue_set *qs,$/;"	f	file:
nicvf_read_bgx_stats	nicvf_main.c	/^static void nicvf_read_bgx_stats(struct nicvf *nic, struct bgx_stats_msg *bgx)$/;"	f	file:
nicvf_reclaim_cmp_queue	nicvf_queues.c	/^static void nicvf_reclaim_cmp_queue(struct nicvf *nic,$/;"	f	file:
nicvf_reclaim_rbdr	nicvf_queues.c	/^static void nicvf_reclaim_rbdr(struct nicvf *nic,$/;"	f	file:
nicvf_reclaim_rcv_queue	nicvf_queues.c	/^static void nicvf_reclaim_rcv_queue(struct nicvf *nic,$/;"	f	file:
nicvf_reclaim_snd_queue	nicvf_queues.c	/^static void nicvf_reclaim_snd_queue(struct nicvf *nic,$/;"	f	file:
nicvf_refill_rbdr	nicvf_queues.c	/^static void nicvf_refill_rbdr(struct nicvf *nic, gfp_t gfp)$/;"	f	file:
nicvf_reg_read	nicvf_main.c	/^u64 nicvf_reg_read(struct nicvf *nic, u64 offset)$/;"	f
nicvf_reg_write	nicvf_main.c	/^void nicvf_reg_write(struct nicvf *nic, u64 offset, u64 val)$/;"	f
nicvf_register_interrupts	nicvf_main.c	/^static int nicvf_register_interrupts(struct nicvf *nic)$/;"	f	file:
nicvf_register_misc_interrupt	nicvf_main.c	/^static int nicvf_register_misc_interrupt(struct nicvf *nic)$/;"	f	file:
nicvf_remove	nicvf_main.c	/^static void nicvf_remove(struct pci_dev *pdev)$/;"	f	file:
nicvf_request_sqs	nicvf_main.c	/^static void nicvf_request_sqs(struct nicvf *nic)$/;"	f	file:
nicvf_reset_rcv_queue_stats	nicvf_queues.c	/^static void nicvf_reset_rcv_queue_stats(struct nicvf *nic)$/;"	f	file:
nicvf_reset_task	nicvf_main.c	/^static void nicvf_reset_task(struct work_struct *work)$/;"	f	file:
nicvf_rollback_sq_desc	nicvf_queues.c	/^static inline void nicvf_rollback_sq_desc(struct snd_queue *sq,$/;"	f	file:
nicvf_rss_info	nic.h	/^struct nicvf_rss_info {$/;"	s
nicvf_rss_init	nicvf_main.c	/^static int nicvf_rss_init(struct nicvf *nic)$/;"	f	file:
nicvf_send_msg_to_pf	nicvf_main.c	/^int nicvf_send_msg_to_pf(struct nicvf *nic, union nic_mbx *mbx)$/;"	f
nicvf_send_vf_struct	nicvf_main.c	/^static void nicvf_send_vf_struct(struct nicvf *nic)$/;"	f	file:
nicvf_set_channels	nicvf_ethtool.c	/^static int nicvf_set_channels(struct net_device *dev,$/;"	f	file:
nicvf_set_ethtool_ops	nicvf_ethtool.c	/^void nicvf_set_ethtool_ops(struct net_device *netdev)$/;"	f
nicvf_set_features	nicvf_main.c	/^static int nicvf_set_features(struct net_device *netdev,$/;"	f	file:
nicvf_set_irq_affinity	nicvf_main.c	/^static void nicvf_set_irq_affinity(struct nicvf *nic)$/;"	f	file:
nicvf_set_mac_address	nicvf_main.c	/^static int nicvf_set_mac_address(struct net_device *netdev, void *p)$/;"	f	file:
nicvf_set_msglevel	nicvf_ethtool.c	/^static void nicvf_set_msglevel(struct net_device *netdev, u32 lvl)$/;"	f	file:
nicvf_set_pauseparam	nicvf_ethtool.c	/^static int nicvf_set_pauseparam(struct net_device *dev,$/;"	f	file:
nicvf_set_qset_resources	nicvf_queues.c	/^int nicvf_set_qset_resources(struct nicvf *nic)$/;"	f
nicvf_set_real_num_queues	nicvf_main.c	/^int nicvf_set_real_num_queues(struct net_device *netdev,$/;"	f
nicvf_set_ringparam	nicvf_ethtool.c	/^static int nicvf_set_ringparam(struct net_device *netdev,$/;"	f	file:
nicvf_set_rss_hash_opts	nicvf_ethtool.c	/^static int nicvf_set_rss_hash_opts(struct nicvf *nic,$/;"	f	file:
nicvf_set_rss_key	nicvf_main.c	/^void nicvf_set_rss_key(struct nicvf *nic)$/;"	f
nicvf_set_rxfh	nicvf_ethtool.c	/^static int nicvf_set_rxfh(struct net_device *dev, const u32 *indir,$/;"	f	file:
nicvf_set_rxhash	nicvf_main.c	/^static inline void nicvf_set_rxhash(struct net_device *netdev,$/;"	f	file:
nicvf_set_rxnfc	nicvf_ethtool.c	/^static int nicvf_set_rxnfc(struct net_device *dev, struct ethtool_rxnfc *info)$/;"	f	file:
nicvf_set_xdp_queues	nicvf_main.c	/^static void nicvf_set_xdp_queues(struct nicvf *nic, bool bpf_attached)$/;"	f	file:
nicvf_shutdown	nicvf_main.c	/^static void nicvf_shutdown(struct pci_dev *pdev)$/;"	f	file:
nicvf_snd_pkt_handler	nicvf_main.c	/^static void nicvf_snd_pkt_handler(struct net_device *netdev,$/;"	f	file:
nicvf_snd_queue_config	nicvf_queues.c	/^static void nicvf_snd_queue_config(struct nicvf *nic, struct queue_set *qs,$/;"	f	file:
nicvf_sq_add_cqe_subdesc	nicvf_queues.c	/^static inline void nicvf_sq_add_cqe_subdesc(struct snd_queue *sq, int qentry,$/;"	f	file:
nicvf_sq_add_gather_subdesc	nicvf_queues.c	/^static inline void nicvf_sq_add_gather_subdesc(struct snd_queue *sq, int qentry,$/;"	f	file:
nicvf_sq_add_hdr_subdesc	nicvf_queues.c	/^nicvf_sq_add_hdr_subdesc(struct nicvf *nic, struct snd_queue *sq, int qentry,$/;"	f	file:
nicvf_sq_append_skb	nicvf_queues.c	/^int nicvf_sq_append_skb(struct nicvf *nic, struct snd_queue *sq,$/;"	f
nicvf_sq_append_tso	nicvf_queues.c	/^static int nicvf_sq_append_tso(struct nicvf *nic, struct snd_queue *sq,$/;"	f	file:
nicvf_sq_disable	nicvf_queues.c	/^void nicvf_sq_disable(struct nicvf *nic, int qidx)$/;"	f
nicvf_sq_doorbell	nicvf_queues.c	/^static inline void nicvf_sq_doorbell(struct nicvf *nic, struct sk_buff *skb,$/;"	f	file:
nicvf_sq_enable	nicvf_queues.c	/^void nicvf_sq_enable(struct nicvf *nic, struct snd_queue *sq, int qidx)$/;"	f
nicvf_sq_free_used_descs	nicvf_queues.c	/^void nicvf_sq_free_used_descs(struct net_device *netdev, struct snd_queue *sq,$/;"	f
nicvf_sq_subdesc_required	nicvf_queues.c	/^static int nicvf_sq_subdesc_required(struct nicvf *nic, struct sk_buff *skb)$/;"	f	file:
nicvf_stat	nicvf_ethtool.c	/^struct nicvf_stat {$/;"	s	file:
nicvf_stop	nicvf_main.c	/^int nicvf_stop(struct net_device *netdev)$/;"	f
nicvf_tso_count_subdescs	nicvf_queues.c	/^static int nicvf_tso_count_subdescs(struct sk_buff *skb)$/;"	f	file:
nicvf_tx_timeout	nicvf_main.c	/^static void nicvf_tx_timeout(struct net_device *dev)$/;"	f	file:
nicvf_unmap_rcv_buffer	nicvf_queues.c	/^static void nicvf_unmap_rcv_buffer(struct nicvf *nic, u64 dma_addr,$/;"	f	file:
nicvf_unmap_sndq_buffers	nicvf_queues.c	/^void nicvf_unmap_sndq_buffers(struct nicvf *nic, struct snd_queue *sq,$/;"	f
nicvf_unregister_interrupts	nicvf_main.c	/^static void nicvf_unregister_interrupts(struct nicvf *nic)$/;"	f	file:
nicvf_update_hw_max_frs	nicvf_main.c	/^static int nicvf_update_hw_max_frs(struct nicvf *nic, int mtu)$/;"	f	file:
nicvf_update_lmac_stats	nicvf_main.c	/^void nicvf_update_lmac_stats(struct nicvf *nic)$/;"	f
nicvf_update_rq_stats	nicvf_queues.c	/^void nicvf_update_rq_stats(struct nicvf *nic, int rq_idx)$/;"	f
nicvf_update_sq_stats	nicvf_queues.c	/^void nicvf_update_sq_stats(struct nicvf *nic, int sq_idx)$/;"	f
nicvf_update_stats	nicvf_main.c	/^void nicvf_update_stats(struct nicvf *nic)$/;"	f
nicvf_write_to_mbx	nicvf_main.c	/^static void nicvf_write_to_mbx(struct nicvf *nic, union nic_mbx *mbx)$/;"	f	file:
nicvf_xdp	nicvf_main.c	/^static int nicvf_xdp(struct net_device *netdev, struct netdev_xdp *xdp)$/;"	f	file:
nicvf_xdp_rx	nicvf_main.c	/^static inline bool nicvf_xdp_rx(struct nicvf *nic, struct bpf_prog *prog,$/;"	f	file:
nicvf_xdp_setup	nicvf_main.c	/^static int nicvf_xdp_setup(struct nicvf *nic, struct bpf_prog *prog)$/;"	f	file:
nicvf_xdp_sq_add_hdr_subdesc	nicvf_queues.c	/^nicvf_xdp_sq_add_hdr_subdesc(struct snd_queue *sq, int qentry,$/;"	f	file:
nicvf_xdp_sq_append_pkt	nicvf_queues.c	/^int nicvf_xdp_sq_append_pkt(struct nicvf *nic, struct snd_queue *sq,$/;"	f
nicvf_xdp_sq_doorbell	nicvf_queues.c	/^void nicvf_xdp_sq_doorbell(struct nicvf *nic,$/;"	f
nicvf_xmit	nicvf_main.c	/^static netdev_tx_t nicvf_xmit(struct sk_buff *skb, struct net_device *netdev)$/;"	f	file:
node	nic.h	/^	u8			node;$/;"	m	struct:nicvf
node	nic_main.c	/^	u8			node;$/;"	m	struct:nicpf	file:
node_id	nic.h	/^	u8    node_id;$/;"	m	struct:nic_cfg_msg
nodrop	q_struct.h	/^	u64   nodrop:1;$/;"	m	struct:rx_hdr_t
num	nic.h	/^	u8    num;$/;"	m	struct:qs_cfg_msg
num_sqs_en	nic_main.c	/^	u8			num_sqs_en;	\/* Secondary qsets enabled *\/$/;"	m	struct:nicpf	file:
num_vec	nic.h	/^	u8			num_vec;$/;"	m	struct:nicvf
num_vec	nic_main.c	/^	u8			num_vec;$/;"	m	struct:nicpf	file:
num_vf_en	nic_main.c	/^	u8			num_vf_en;      \/* No of VF enabled *\/$/;"	m	struct:nicpf	file:
offset	q_struct.h	/^	u64    offset:32;$/;"	m	struct:sq_mem_subdesc
opaque	q_struct.h	/^	u64   opaque:32;$/;"	m	struct:rx_hdr_t
page	nicvf_queues.h	/^	struct page	*page;$/;"	m	struct:pgcache	typeref:struct:pgcache::page
page_alloc	nic.h	/^	u64 page_alloc;$/;"	m	struct:nicvf_drv_stats
partial_first	q_struct.h	/^	u64   partial_first:1;$/;"	m	struct:cqe_rx_tcp_err_t
pass1_silicon	nic.h	/^static inline bool pass1_silicon(struct pci_dev *pdev)$/;"	f
pass2_silicon	nic.h	/^static inline bool pass2_silicon(struct pci_dev *pdev)$/;"	f
pdev	nic.h	/^	struct pci_dev		*pdev;$/;"	m	struct:nicvf	typeref:struct:nicvf::pci_dev
pdev	nic_main.c	/^	struct pci_dev		*pdev;$/;"	m	struct:nicpf	typeref:struct:nicpf::pci_dev	file:
pdev	thunder_bgx.c	/^	struct pci_dev		*pdev;$/;"	m	struct:bgx	typeref:struct:bgx::pci_dev	file:
pdev	thunder_xcv.c	/^	struct pci_dev		*pdev;$/;"	m	struct:xcv	typeref:struct:xcv::pci_dev	file:
pf_acked	nic.h	/^	bool			pf_acked;$/;"	m	struct:nicvf
pf_nacked	nic.h	/^	bool			pf_nacked;$/;"	m	struct:nicvf
pfc	nic.h	/^	struct nicvf_pfc	pfc;$/;"	m	struct:nicvf	typeref:struct:nicvf::nicvf_pfc
pfc	nic.h	/^	struct pfc		pfc;$/;"	m	union:nic_mbx	typeref:struct:nic_mbx::pfc
pfc	nic.h	/^struct pfc {$/;"	s
pgalloc	nicvf_queues.h	/^	int		pgalloc;$/;"	m	struct:rbdr
pgcache	nicvf_queues.h	/^	struct pgcache	*pgcache;$/;"	m	struct:rbdr	typeref:struct:rbdr::pgcache
pgcache	nicvf_queues.h	/^struct pgcache {$/;"	s
pgcnt	nicvf_queues.h	/^	int		pgcnt;$/;"	m	struct:rbdr
pgidx	nicvf_queues.h	/^	int		pgidx;$/;"	m	struct:rbdr
phy_interface_mode	thunder_bgx.c	/^static int phy_interface_mode(u8 lmac_type)$/;"	f	file:
phydev	thunder_bgx.c	/^	struct phy_device       *phydev;$/;"	m	struct:lmac	typeref:struct:lmac::phy_device	file:
phys_base	nicvf_queues.h	/^	dma_addr_t	phys_base;$/;"	m	struct:q_desc_mem
pkind	nic_main.c	/^	struct pkind_cfg	pkind;$/;"	m	struct:nicpf	typeref:struct:nicpf::pkind_cfg	file:
pkind_cfg	nic_reg.h	/^struct pkind_cfg {$/;"	s
pkt_len	q_struct.h	/^	u64   pkt_len:16; \/* W1 *\/$/;"	m	struct:cqe_rx_t
pkts	nicvf_queues.h	/^	u64	pkts;$/;"	m	struct:rx_tx_queue_stats
pnicvf	nic.h	/^	struct nicvf		*pnicvf;$/;"	m	struct:nicvf	typeref:struct:nicvf::nicvf
post_cqe	q_struct.h	/^	u64    post_cqe:1; \/* Post CQE on no error also *\/$/;"	m	struct:sq_hdr_subdesc
pqs_vf	nic_main.c	/^	u8			pqs_vf[MAX_NUM_VFS_SUPPORTED];$/;"	m	struct:nicpf	file:
ptp_timestamp	q_struct.h	/^	u64   ptp_timestamp:64; \/* W1 *\/$/;"	m	struct:cqe_send_t
ptr_bytes	q_struct.h	/^	u64   ptr_bytes:16;$/;"	m	struct:rbe_tcp_cnxt_t
q_desc_mem	nicvf_queues.h	/^struct q_desc_mem {$/;"	s
q_len	nicvf_queues.h	/^	u16		q_len;$/;"	m	struct:q_desc_mem
qs	nic.h	/^	struct qs_cfg_msg	qs;$/;"	m	union:nic_mbx	typeref:struct:nic_mbx::qs_cfg_msg
qs	nic.h	/^	struct queue_set	*qs;$/;"	m	struct:nicvf	typeref:struct:nicvf::queue_set
qs_cfg	q_struct.h	/^struct qs_cfg {$/;"	s
qs_cfg_msg	nic.h	/^struct qs_cfg_msg {$/;"	s
qs_count	nic.h	/^	u8    qs_count;$/;"	m	struct:sqs_alloc
qs_err_task	nic.h	/^	struct tasklet_struct	qs_err_task;$/;"	m	struct:nicvf	typeref:struct:nicvf::tasklet_struct
qs_num	nic.h	/^	u8    qs_num;$/;"	m	struct:rq_cfg_msg
qs_num	nic.h	/^	u8    qs_num;$/;"	m	struct:sq_cfg_msg
qsize	q_struct.h	/^	u64 qsize:3;$/;"	m	struct:cq_cfg
qsize	q_struct.h	/^	u64 qsize:3;$/;"	m	struct:sq_cfg
qsize	q_struct.h	/^	u64 qsize:4;$/;"	m	struct:rbdr_cfg
queue_set	nicvf_queues.h	/^struct queue_set {$/;"	s
rb0_ptr	q_struct.h	/^	u64   rb0_ptr:64;$/;"	m	struct:cqe_rx_t
rb0_sz	q_struct.h	/^	u64   rb0_sz:16;$/;"	m	struct:cqe_rx_t
rb10_ptr	q_struct.h	/^	u64   rb10_ptr:64;$/;"	m	struct:cqe_rx_t
rb10_sz	q_struct.h	/^	u64   rb10_sz:16;$/;"	m	struct:cqe_rx_t
rb11_ptr	q_struct.h	/^	u64   rb11_ptr:64;$/;"	m	struct:cqe_rx_t
rb11_sz	q_struct.h	/^	u64   rb11_sz:16; \/* W5 *\/$/;"	m	struct:cqe_rx_t
rb1_ptr	q_struct.h	/^	u64   rb1_ptr:64;$/;"	m	struct:cqe_rx_t
rb1_sz	q_struct.h	/^	u64   rb1_sz:16;$/;"	m	struct:cqe_rx_t
rb2_ptr	q_struct.h	/^	u64   rb2_ptr:64;$/;"	m	struct:cqe_rx_t
rb2_sz	q_struct.h	/^	u64   rb2_sz:16;$/;"	m	struct:cqe_rx_t
rb3_ptr	q_struct.h	/^	u64   rb3_ptr:64;$/;"	m	struct:cqe_rx_t
rb3_sz	q_struct.h	/^	u64   rb3_sz:16; \/* W3 *\/$/;"	m	struct:cqe_rx_t
rb4_ptr	q_struct.h	/^	u64   rb4_ptr:64;$/;"	m	struct:cqe_rx_t
rb4_sz	q_struct.h	/^	u64   rb4_sz:16;$/;"	m	struct:cqe_rx_t
rb5_ptr	q_struct.h	/^	u64   rb5_ptr:64;$/;"	m	struct:cqe_rx_t
rb5_sz	q_struct.h	/^	u64   rb5_sz:16;$/;"	m	struct:cqe_rx_t
rb6_ptr	q_struct.h	/^	u64   rb6_ptr:64;$/;"	m	struct:cqe_rx_t
rb6_sz	q_struct.h	/^	u64   rb6_sz:16;$/;"	m	struct:cqe_rx_t
rb7_ptr	q_struct.h	/^	u64   rb7_ptr:64;$/;"	m	struct:cqe_rx_t
rb7_sz	q_struct.h	/^	u64   rb7_sz:16; \/* W4 *\/$/;"	m	struct:cqe_rx_t
rb8_ptr	q_struct.h	/^	u64   rb8_ptr:64;$/;"	m	struct:cqe_rx_t
rb8_sz	q_struct.h	/^	u64   rb8_sz:16;$/;"	m	struct:cqe_rx_t
rb9_ptr	q_struct.h	/^	u64   rb9_ptr:64;$/;"	m	struct:cqe_rx_t
rb9_sz	q_struct.h	/^	u64   rb9_sz:16;$/;"	m	struct:cqe_rx_t
rb_alloc_fail	nic.h	/^	bool			rb_alloc_fail;$/;"	m	struct:nicvf
rb_cnt	q_struct.h	/^	u64   rb_cnt:4;$/;"	m	struct:cqe_rx_t
rb_page	nic.h	/^	struct page		*rb_page;$/;"	m	struct:nicvf	typeref:struct:nicvf::page
rb_page_offset	nic.h	/^	u32			rb_page_offset;$/;"	m	struct:nicvf
rb_pageref	nic.h	/^	u16			rb_pageref;$/;"	m	struct:nicvf
rb_work_scheduled	nic.h	/^	bool			rb_work_scheduled;$/;"	m	struct:nicvf
rbdr	nicvf_queues.h	/^	struct	rbdr		rbdr[MAX_RCV_BUF_DESC_RINGS_PER_QS];$/;"	m	struct:queue_set	typeref:struct:queue_set::rbdr
rbdr	nicvf_queues.h	/^struct rbdr {$/;"	s
rbdr_bytes	q_struct.h	/^	u64   rbdr_bytes:8;$/;"	m	struct:cqe_rx_tcp_err_t
rbdr_cfg	q_struct.h	/^struct rbdr_cfg {$/;"	s
rbdr_cnt	nicvf_queues.h	/^	u8		rbdr_cnt;$/;"	m	struct:queue_set
rbdr_cont	nicvf_queues.h	/^	struct	rbdr	*rbdr_cont;$/;"	m	struct:rcv_queue	typeref:struct:rcv_queue::rbdr
rbdr_entry_t	q_struct.h	/^struct rbdr_entry_t {$/;"	s
rbdr_len	nicvf_queues.h	/^	u64		rbdr_len;$/;"	m	struct:queue_set
rbdr_start	nicvf_queues.h	/^	struct	rbdr	*rbdr_start;$/;"	m	struct:rcv_queue	typeref:struct:rcv_queue::rbdr
rbdr_task	nic.h	/^	struct tasklet_struct	rbdr_task;$/;"	m	struct:nicvf	typeref:struct:nicvf::tasklet_struct
rbdr_work	nic.h	/^	struct delayed_work	rbdr_work;$/;"	m	struct:nicvf	typeref:struct:nicvf::delayed_work
rbe_tcp_cnxt_t	q_struct.h	/^struct rbe_tcp_cnxt_t {$/;"	s
rcv_buffer_alloc_failures	nic.h	/^	u64 rcv_buffer_alloc_failures;$/;"	m	struct:nicvf_drv_stats
rcv_queue	nicvf_queues.h	/^struct rcv_queue {$/;"	s
ref_count	nicvf_queues.h	/^	int		ref_count;$/;"	m	struct:pgcache
reg_base	nic.h	/^	void __iomem		*reg_base;$/;"	m	struct:nicvf
reg_base	nic_main.c	/^	void __iomem		*reg_base;       \/* Register start address *\/$/;"	m	struct:nicpf	file:
reg_base	thunder_bgx.c	/^	void __iomem		*reg_base;$/;"	m	struct:bgx	file:
reg_base	thunder_xcv.c	/^	void __iomem		*reg_base;$/;"	m	struct:xcv	file:
reserved_0_15	q_struct.h	/^	u64 reserved_0_15:16;$/;"	m	struct:cq_cfg
reserved_11_15	q_struct.h	/^	u64 reserved_11_15:5;$/;"	m	struct:sq_cfg
reserved_12_15	q_struct.h	/^	u64 reserved_12_15:4;$/;"	m	struct:rbdr_cfg
reserved_18_18	q_struct.h	/^	u64 reserved_18_18:1;$/;"	m	struct:sq_cfg
reserved_20_23	q_struct.h	/^	u64 reserved_20_23:4;$/;"	m	struct:sq_cfg
reserved_25_31	q_struct.h	/^	u64 reserved_25_31:7;$/;"	m	struct:cq_cfg
reserved_25_31	q_struct.h	/^	u64 reserved_25_31:7;$/;"	m	struct:rbdr_cfg
reserved_27_30	q_struct.h	/^	u64 reserved_27_30:4;$/;"	m	struct:qs_cfg
reserved_2_63	q_struct.h	/^	u64 reserved_2_63:62;$/;"	m	struct:rq_cfg
reserved_32_32	nic_reg.h	/^	u64 reserved_32_32:1;$/;"	m	struct:pkind_cfg
reserved_32_63	q_struct.h	/^	u64 reserved_32_63:32;$/;"	m	struct:qs_cfg
reserved_32_63	q_struct.h	/^	u64 reserved_32_63:32;$/;"	m	struct:sq_cfg
reserved_35_39	q_struct.h	/^	u64 reserved_35_39:5;$/;"	m	struct:cq_cfg
reserved_36_41	q_struct.h	/^	u64 reserved_36_41:6;$/;"	m	struct:rbdr_cfg
reserved_3_7	q_struct.h	/^	u64 reserved_3_7:5;$/;"	m	struct:sq_cfg
reserved_42_63	nic_reg.h	/^	u64 reserved_42_63:22;$/;"	m	struct:pkind_cfg
reserved_43_63	q_struct.h	/^	u64 reserved_43_63:21;$/;"	m	struct:cq_cfg
reserved_45_63	q_struct.h	/^	u64 reserved_45_63:19;$/;"	m	struct:rbdr_cfg
reserved_7_15	q_struct.h	/^	u64 reserved_7_15:9;$/;"	m	struct:qs_cfg
reset	q_struct.h	/^	u64 reset:1;$/;"	m	struct:cq_cfg
reset	q_struct.h	/^	u64 reset:1;$/;"	m	struct:rbdr_cfg
reset	q_struct.h	/^	u64 reset:1;$/;"	m	struct:sq_cfg
reset_stat	nic.h	/^	struct reset_stat_cfg	reset_stat;$/;"	m	union:nic_mbx	typeref:struct:nic_mbx::reset_stat_cfg
reset_stat_cfg	nic.h	/^struct reset_stat_cfg {$/;"	s
reset_task	nic.h	/^	struct work_struct	reset_task;$/;"	m	struct:nicvf	typeref:struct:nicvf::work_struct
rq	nic.h	/^	struct rq_cfg_msg	rq;$/;"	m	union:nic_mbx	typeref:struct:nic_mbx::rq_cfg_msg
rq	nicvf_queues.h	/^	struct	rcv_queue	rq[MAX_RCV_QUEUES_PER_QS];$/;"	m	struct:queue_set	typeref:struct:queue_set::rcv_queue
rq_cfg	q_struct.h	/^struct rq_cfg {$/;"	s
rq_cfg_msg	nic.h	/^struct rq_cfg_msg {$/;"	s
rq_cnt	nic.h	/^	u8    rq_cnt;$/;"	m	struct:cpi_cfg_msg
rq_cnt	nicvf_queues.h	/^	u8		rq_cnt;$/;"	m	struct:queue_set
rq_idx	q_struct.h	/^	u64   rq_idx:3;$/;"	m	struct:cqe_rx_t
rq_num	nic.h	/^	u8    rq_num;$/;"	m	struct:rq_cfg_msg
rq_qs	q_struct.h	/^	u64   rq_qs:7;$/;"	m	struct:cqe_rx_t
rq_stat_mask	nic.h	/^	u16   rq_stat_mask;$/;"	m	struct:reset_stat_cfg
rss_alg	q_struct.h	/^	u64   rss_alg:4;$/;"	m	struct:cqe_rx_t
rss_algorithm_type	q_struct.h	/^enum rss_algorithm_type {$/;"	g
rss_cfg	nic.h	/^	struct rss_cfg_msg	rss_cfg;$/;"	m	union:nic_mbx	typeref:struct:nic_mbx::rss_cfg_msg
rss_cfg_msg	nic.h	/^struct rss_cfg_msg {$/;"	s
rss_flow	q_struct.h	/^	u64   rss_flow:8;$/;"	m	struct:rx_hdr_t
rss_hash_cfg	q_struct.h	/^enum rss_hash_cfg {$/;"	g
rss_ind_tbl_size	nic_main.c	/^	u16		rss_ind_tbl_size;$/;"	m	struct:hw_info	file:
rss_info	nic.h	/^	struct nicvf_rss_info	rss_info;$/;"	m	struct:nicvf	typeref:struct:nicvf::nicvf_rss_info
rss_size	nic.h	/^	struct rss_sz_msg	rss_size;$/;"	m	union:nic_mbx	typeref:struct:nic_mbx::rss_sz_msg
rss_size	nic.h	/^	u16 rss_size;$/;"	m	struct:nicvf_rss_info
rss_sz_msg	nic.h	/^struct rss_sz_msg {$/;"	s
rss_tag	q_struct.h	/^	u64   rss_tag:32; \/* W2 *\/$/;"	m	struct:cqe_rx_t
rssi_base	nic_main.c	/^	u16			rssi_base[MAX_NUM_VFS_SUPPORTED];$/;"	m	struct:nicpf	file:
rssi_cnt	nic_main.c	/^	u16		rssi_cnt;$/;"	m	struct:hw_info	file:
rsvd0	q_struct.h	/^	u64    rsvd0:10;$/;"	m	struct:sq_crc_subdesc
rsvd0	q_struct.h	/^	u64    rsvd0:21;$/;"	m	struct:sq_mem_subdesc
rsvd0	q_struct.h	/^	u64    rsvd0:2;$/;"	m	struct:sq_hdr_subdesc
rsvd0	q_struct.h	/^	u64    rsvd0:42;$/;"	m	struct:sq_gather_subdesc
rsvd0	q_struct.h	/^	u64    rsvd0:46;$/;"	m	struct:sq_imm_subdesc
rsvd0	q_struct.h	/^	u64   rsvd0:1;$/;"	m	struct:cqe_rx_t
rsvd0	q_struct.h	/^	u64   rsvd0:2;$/;"	m	struct:rx_hdr_t
rsvd0	q_struct.h	/^	u64   rsvd0:4;$/;"	m	struct:cqe_send_t
rsvd0	q_struct.h	/^	u64   rsvd0:52;$/;"	m	struct:cqe_rx_tcp_t
rsvd0	q_struct.h	/^	u64   rsvd0:54;$/;"	m	struct:rbe_tcp_cnxt_t
rsvd0	q_struct.h	/^	u64   rsvd0:60;$/;"	m	struct:cqe_rx_tcp_err_t
rsvd1	q_struct.h	/^	u64    rsvd1:15; \/* W1 *\/$/;"	m	struct:sq_gather_subdesc
rsvd1	q_struct.h	/^	u64    rsvd1:15; \/* W1 *\/$/;"	m	struct:sq_mem_subdesc
rsvd1	q_struct.h	/^	u64    rsvd1:32;$/;"	m	struct:sq_crc_subdesc
rsvd1	q_struct.h	/^	u64    rsvd1:4;$/;"	m	struct:sq_hdr_subdesc
rsvd1	q_struct.h	/^	u64   rsvd1:12;$/;"	m	struct:cqe_rx_t
rsvd1	q_struct.h	/^	u64   rsvd1:32; \/* W1 *\/$/;"	m	struct:cqe_rx_tcp_t
rsvd1	q_struct.h	/^	u64   rsvd1:4; \/* W1 *\/$/;"	m	struct:cqe_rx_tcp_err_t
rsvd1	q_struct.h	/^	u64   rsvd1:4;$/;"	m	struct:cqe_send_t
rsvd1	q_struct.h	/^	u64   rsvd1:4;$/;"	m	struct:rbe_tcp_cnxt_t
rsvd2	q_struct.h	/^	u64    rsvd2:24;$/;"	m	struct:sq_hdr_subdesc
rsvd2	q_struct.h	/^	u64   rsvd2:10;$/;"	m	struct:cqe_send_t
rsvd2	q_struct.h	/^	u64   rsvd2:24;$/;"	m	struct:rbe_tcp_cnxt_t
rsvd2	q_struct.h	/^	u64   rsvd2:27;$/;"	m	struct:cqe_rx_tcp_err_t
rsvd2	q_struct.h	/^	u64   rsvd2:4;$/;"	m	struct:cqe_rx_t
rsvd2	q_struct.h	/^	u64   rsvd2:8;$/;"	m	struct:cqe_rx_tcp_t
rsvd3	q_struct.h	/^	u64    rsvd3:2;$/;"	m	struct:sq_hdr_subdesc
rsvd3	q_struct.h	/^	u64   rsvd3:1;$/;"	m	struct:cqe_rx_t
rsvd3	q_struct.h	/^	u64   rsvd3:24;$/;"	m	struct:cqe_rx_tcp_err_t
rsvd3	q_struct.h	/^	u64   rsvd3:8;$/;"	m	struct:cqe_send_t
rx	nic.h	/^	u8    rx;$/;"	m	struct:bgx_stats_msg
rx_bcast_frames	nic.h	/^	u64 rx_bcast_frames;$/;"	m	struct:nicvf_hw_stats
rx_bgx_errs	nic.h	/^	u64 rx_bgx_errs;$/;"	m	struct:nicvf_drv_stats
rx_bgx_truncated_pkts	nic.h	/^	u64 rx_bgx_truncated_pkts;$/;"	m	struct:nicvf_drv_stats
rx_bytes	nic.h	/^	u64 rx_bytes;$/;"	m	struct:nicvf_hw_stats
rx_drop_bcast	nic.h	/^	u64 rx_drop_bcast;$/;"	m	struct:nicvf_hw_stats
rx_drop_l3_bcast	nic.h	/^	u64 rx_drop_l3_bcast;$/;"	m	struct:nicvf_hw_stats
rx_drop_l3_mcast	nic.h	/^	u64 rx_drop_l3_mcast;$/;"	m	struct:nicvf_hw_stats
rx_drop_mcast	nic.h	/^	u64 rx_drop_mcast;$/;"	m	struct:nicvf_hw_stats
rx_drop_overrun	nic.h	/^	u64 rx_drop_overrun;$/;"	m	struct:nicvf_hw_stats
rx_drop_overrun_bytes	nic.h	/^	u64 rx_drop_overrun_bytes;$/;"	m	struct:nicvf_hw_stats
rx_drop_red	nic.h	/^	u64 rx_drop_red;$/;"	m	struct:nicvf_hw_stats
rx_drop_red_bytes	nic.h	/^	u64 rx_drop_red_bytes;$/;"	m	struct:nicvf_hw_stats
rx_drops	nic.h	/^	u64 rx_drops;$/;"	m	struct:nicvf_hw_stats
rx_fcs_errors	nic.h	/^	u64 rx_fcs_errors;$/;"	m	struct:nicvf_hw_stats
rx_fcs_errs	nic.h	/^	u64 rx_fcs_errs;$/;"	m	struct:nicvf_drv_stats
rx_frames	nic.h	/^	u64 rx_frames;$/;"	m	struct:nicvf_hw_stats
rx_hdr	nic_reg.h	/^	u64 rx_hdr:3;	\/* TNS Receive header present *\/$/;"	m	struct:pkind_cfg
rx_hdr	q_struct.h	/^	struct cqe_rx_t rx_hdr;$/;"	m	union:cq_desc_t	typeref:struct:cq_desc_t::cqe_rx_t
rx_hdr_t	q_struct.h	/^struct rx_hdr_t {$/;"	s
rx_ip_csum_errs	nic.h	/^	u64 rx_ip_csum_errs;$/;"	m	struct:nicvf_drv_stats
rx_ip_hdr_malformed	nic.h	/^	u64 rx_ip_hdr_malformed;$/;"	m	struct:nicvf_drv_stats
rx_ip_payload_malformed	nic.h	/^	u64 rx_ip_payload_malformed;$/;"	m	struct:nicvf_drv_stats
rx_ip_ttl_errs	nic.h	/^	u64 rx_ip_ttl_errs;$/;"	m	struct:nicvf_drv_stats
rx_ip_ver_errs	nic.h	/^	u64 rx_ip_ver_errs;$/;"	m	struct:nicvf_drv_stats
rx_jabber_errs	nic.h	/^	u64 rx_jabber_errs;$/;"	m	struct:nicvf_drv_stats
rx_l2_errors	nic.h	/^	u64 rx_l2_errors;$/;"	m	struct:nicvf_hw_stats
rx_l2_hdr_malformed	nic.h	/^	u64 rx_l2_hdr_malformed;$/;"	m	struct:nicvf_drv_stats
rx_l2_len_mismatch	nic.h	/^	u64 rx_l2_len_mismatch;$/;"	m	struct:nicvf_drv_stats
rx_l2_pclp	nic.h	/^	u64 rx_l2_pclp;$/;"	m	struct:nicvf_drv_stats
rx_l3_pclp	nic.h	/^	u64 rx_l3_pclp;$/;"	m	struct:nicvf_drv_stats
rx_l4_csum_errs	nic.h	/^	u64 rx_l4_csum_errs;$/;"	m	struct:nicvf_drv_stats
rx_l4_malformed	nic.h	/^	u64 rx_l4_malformed;$/;"	m	struct:nicvf_drv_stats
rx_l4_pclp	nic.h	/^	u64 rx_l4_pclp;$/;"	m	struct:nicvf_drv_stats
rx_l4_port_errs	nic.h	/^	u64 rx_l4_port_errs;$/;"	m	struct:nicvf_drv_stats
rx_mcast_frames	nic.h	/^	u64 rx_mcast_frames;$/;"	m	struct:nicvf_hw_stats
rx_oversize	nic.h	/^	u64 rx_oversize;$/;"	m	struct:nicvf_drv_stats
rx_prel2_errs	nic.h	/^	u64 rx_prel2_errs;$/;"	m	struct:nicvf_drv_stats
rx_queues	nic.h	/^	u8			rx_queues;$/;"	m	struct:nicvf
rx_stat_mask	nic.h	/^	u16   rx_stat_mask;$/;"	m	struct:reset_stat_cfg
rx_stats	thunder_bgx.h	/^	u64 rx_stats[BGX_RX_STATS_COUNT];$/;"	m	struct:bgx_stats
rx_stats_reg_offset	nic.h	/^enum rx_stats_reg_offset {$/;"	g
rx_tcp_err_hdr	q_struct.h	/^	struct cqe_rx_tcp_err_t rx_tcp_err_hdr;$/;"	m	union:cq_desc_t	typeref:struct:cq_desc_t::cqe_rx_tcp_err_t
rx_tcp_flag_errs	nic.h	/^	u64 rx_tcp_flag_errs;$/;"	m	struct:nicvf_drv_stats
rx_tcp_hdr	q_struct.h	/^	struct cqe_rx_tcp_t rx_tcp_hdr;$/;"	m	union:cq_desc_t	typeref:struct:cq_desc_t::cqe_rx_tcp_t
rx_tcp_offset_errs	nic.h	/^	u64 rx_tcp_offset_errs;$/;"	m	struct:nicvf_drv_stats
rx_truncated_pkts	nic.h	/^	u64 rx_truncated_pkts;$/;"	m	struct:nicvf_drv_stats
rx_tx_queue_stats	nicvf_queues.h	/^struct rx_tx_queue_stats {$/;"	s
rx_ucast_frames	nic.h	/^	u64 rx_ucast_frames;$/;"	m	struct:nicvf_hw_stats
rx_udp_len_errs	nic.h	/^	u64 rx_udp_len_errs;$/;"	m	struct:nicvf_drv_stats
rx_undersize	nic.h	/^	u64 rx_undersize;$/;"	m	struct:nicvf_drv_stats
send_crc_alg	q_struct.h	/^enum send_crc_alg {$/;"	g
send_l4_csum_type	q_struct.h	/^enum send_l4_csum_type {$/;"	g
send_load_type	q_struct.h	/^enum send_load_type {$/;"	g
send_mem_alg_type	q_struct.h	/^enum send_mem_alg_type {$/;"	g
send_mem_dsz_type	q_struct.h	/^enum send_mem_dsz_type {$/;"	g
send_status	q_struct.h	/^	u64   send_status:8;$/;"	m	struct:cqe_send_t
send_tstmp_ena	q_struct.h	/^	u64 send_tstmp_ena:1;$/;"	m	struct:qs_cfg
set_frs_msg	nic.h	/^struct set_frs_msg {$/;"	s
set_loopback	nic.h	/^struct set_loopback {$/;"	s
set_mac_msg	nic.h	/^struct set_mac_msg {$/;"	s
set_mac_pending	nic.h	/^	bool			set_mac_pending;$/;"	m	struct:nicvf
set_max_bgx_per_node	thunder_bgx.c	/^static void set_max_bgx_per_node(struct pci_dev *pdev)$/;"	f	file:
size	nicvf_queues.h	/^	u64		size;$/;"	m	struct:q_desc_mem
size	q_struct.h	/^	u64    size:16;$/;"	m	struct:sq_gather_subdesc
skbuff	nicvf_queues.h	/^	u64		*skbuff;$/;"	m	struct:snd_queue
skip_length	q_struct.h	/^	u64   skip_length:6;$/;"	m	struct:rx_hdr_t
snd_hdr	q_struct.h	/^	struct cqe_send_t snd_hdr;$/;"	m	union:cq_desc_t	typeref:struct:cq_desc_t::cqe_send_t
snd_queue	nicvf_queues.h	/^struct snd_queue {$/;"	s
snicvf	nic.h	/^	struct nicvf		*snicvf[MAX_SQS_PER_VF];$/;"	m	struct:nicvf	typeref:struct:nicvf::nicvf
speed	nic.h	/^	u32			speed;$/;"	m	struct:nicvf
speed	nic.h	/^	u32   speed;$/;"	m	struct:bgx_link_status
speed	nic_main.c	/^	u32			*speed;$/;"	m	struct:nicpf	file:
sq	nic.h	/^	struct sq_cfg_msg	sq;$/;"	m	union:nic_mbx	typeref:struct:nic_mbx::sq_cfg_msg
sq	nicvf_queues.h	/^	struct	snd_queue	sq[MAX_SND_QUEUES_PER_QS];$/;"	m	struct:queue_set	typeref:struct:queue_set::snd_queue
sq_cfg	q_struct.h	/^struct sq_cfg {$/;"	s
sq_cfg_msg	nic.h	/^struct sq_cfg_msg {$/;"	s
sq_cnt	nicvf_queues.h	/^	u8		sq_cnt;$/;"	m	struct:queue_set
sq_crc_subdesc	q_struct.h	/^struct sq_crc_subdesc {$/;"	s
sq_gather_subdesc	q_struct.h	/^struct sq_gather_subdesc {$/;"	s
sq_hdr_subdesc	q_struct.h	/^struct sq_hdr_subdesc {$/;"	s
sq_idx	q_struct.h	/^	u64   sq_idx:3;$/;"	m	struct:cqe_send_t
sq_imm_subdesc	q_struct.h	/^struct sq_imm_subdesc {$/;"	s
sq_ins_ena	q_struct.h	/^	u64 sq_ins_ena:1;$/;"	m	struct:qs_cfg
sq_ins_pos	q_struct.h	/^	u64 sq_ins_pos:6;$/;"	m	struct:qs_cfg
sq_len	nicvf_queues.h	/^	u64		sq_len;$/;"	m	struct:queue_set
sq_mem_subdesc	q_struct.h	/^struct sq_mem_subdesc {$/;"	s
sq_num	nic.h	/^	u8    sq_num;$/;"	m	struct:sq_cfg_msg
sq_qs	q_struct.h	/^	u64   sq_qs:7;$/;"	m	struct:cqe_send_t
sq_stat_mask	nic.h	/^	u16   sq_stat_mask;$/;"	m	struct:reset_stat_cfg
sq_subdesc_type	q_struct.h	/^enum sq_subdesc_type {$/;"	g
sqe_ptr	q_struct.h	/^	u64   sqe_ptr:16;$/;"	m	struct:cqe_send_t
sqs_alloc	nic.h	/^	struct sqs_alloc        sqs_alloc;$/;"	m	union:nic_mbx	typeref:struct:nic_mbx::sqs_alloc
sqs_alloc	nic.h	/^struct sqs_alloc {$/;"	s
sqs_count	nic.h	/^	u8			sqs_count;$/;"	m	struct:nicvf
sqs_count	nic.h	/^	u8    sqs_count;$/;"	m	struct:qs_cfg_msg
sqs_id	nic.h	/^	u8			sqs_id;$/;"	m	struct:nicvf
sqs_id	nic.h	/^	u8    sqs_id;$/;"	m	struct:nicvf_ptr
sqs_mode	nic.h	/^	bool                    sqs_mode;$/;"	m	struct:nicvf
sqs_mode	nic.h	/^	bool  sqs_mode;$/;"	m	struct:nicvf_ptr
sqs_mode	nic.h	/^	bool  sqs_mode;$/;"	m	struct:sq_cfg_msg
sqs_mode	nic.h	/^	u8    sqs_mode:1;$/;"	m	struct:nic_cfg_msg
sqs_used	nic_main.c	/^	bool			sqs_used[MAX_NUM_VFS_SUPPORTED];$/;"	m	struct:nicpf	file:
start_qs_rbdr_idx	nicvf_queues.h	/^	u8		start_qs_rbdr_idx; \/* RBDR idx in the above QS *\/$/;"	m	struct:rcv_queue
start_rbdr_qs	nicvf_queues.h	/^	u8		start_rbdr_qs;     \/* First buffer ptrs - QS num *\/$/;"	m	struct:rcv_queue
stats	nic.h	/^	u64   stats;$/;"	m	struct:bgx_stats_msg
stats	nicvf_queues.h	/^	struct		rx_tx_queue_stats stats;$/;"	m	struct:rcv_queue	typeref:struct:rcv_queue::rx_tx_queue_stats
stats	nicvf_queues.h	/^	struct rx_tx_queue_stats stats;$/;"	m	struct:snd_queue	typeref:struct:snd_queue::rx_tx_queue_stats
stdn_fault	q_struct.h	/^	u64   stdn_fault:1;$/;"	m	struct:cqe_rx_t
subdesc_cnt	q_struct.h	/^	u64    subdesc_cnt:8;$/;"	m	struct:sq_hdr_subdesc
subdesc_type	q_struct.h	/^	u64    subdesc_type:4; \/* W0 *\/$/;"	m	struct:sq_gather_subdesc
subdesc_type	q_struct.h	/^	u64    subdesc_type:4; \/* W0 *\/$/;"	m	struct:sq_imm_subdesc
subdesc_type	q_struct.h	/^	u64    subdesc_type:4; \/* W0 *\/$/;"	m	struct:sq_mem_subdesc
subdesc_type	q_struct.h	/^	u64    subdesc_type:4;$/;"	m	struct:sq_crc_subdesc
subdesc_type	q_struct.h	/^	u64    subdesc_type:4;$/;"	m	struct:sq_hdr_subdesc
syncp	nic.h	/^	struct u64_stats_sync   syncp;$/;"	m	struct:nicvf_drv_stats	typeref:struct:nicvf_drv_stats::u64_stats_sync
t88	nic.h	/^	bool			t88;$/;"	m	struct:nicvf
tail	nicvf_queues.h	/^	u32		tail;$/;"	m	struct:rbdr
tail	nicvf_queues.h	/^	u32		tail;$/;"	m	struct:snd_queue
tbl_len	nic.h	/^	u8    tbl_len;$/;"	m	struct:rss_cfg_msg
tbl_offset	nic.h	/^	u8    tbl_offset;$/;"	m	struct:rss_cfg_msg
tcp_cntx_bytes	q_struct.h	/^	u64   tcp_cntx_bytes:8;$/;"	m	struct:cqe_rx_tcp_t
tcp_ena	q_struct.h	/^	u64 tcp_ena:1;$/;"	m	struct:rq_cfg
tcp_end_reason	q_struct.h	/^	u64   tcp_end_reason:2;$/;"	m	struct:rbe_tcp_cnxt_t
tcp_err_bytes	q_struct.h	/^	u64   tcp_err_bytes:16;$/;"	m	struct:cqe_rx_tcp_t
tcp_pkt_cnt	q_struct.h	/^	u64   tcp_pkt_cnt:12;$/;"	m	struct:rbe_tcp_cnxt_t
tcp_status	q_struct.h	/^	u64   tcp_status:4;$/;"	m	struct:rbe_tcp_cnxt_t
thresh	nicvf_queues.h	/^	u16		thresh;$/;"	m	struct:cmp_queue
thresh	nicvf_queues.h	/^	u16		thresh;$/;"	m	struct:snd_queue
thresh	nicvf_queues.h	/^	u32		thresh;		\/* Threshold level for interrupt *\/$/;"	m	struct:rbdr
tl1_cnt	nic_main.c	/^	u8		tl1_cnt;$/;"	m	struct:hw_info	file:
tl1_per_bgx	nic_main.c	/^	bool		tl1_per_bgx; \/* TL1 per BGX or per LMAC *\/$/;"	m	struct:hw_info	file:
tl2_cnt	nic_main.c	/^	u8		tl2_cnt;$/;"	m	struct:hw_info	file:
tl3_cnt	nic_main.c	/^	u16		tl3_cnt;$/;"	m	struct:hw_info	file:
tl4_cnt	nic_main.c	/^	u16		tl4_cnt;$/;"	m	struct:hw_info	file:
tns_mode	nic.h	/^	bool			tns_mode;$/;"	m	struct:nicvf
tns_mode	nic.h	/^	u8    tns_mode:1;$/;"	m	struct:nic_cfg_msg
tot_len	q_struct.h	/^	u64    tot_len:20; \/* W0 *\/$/;"	m	struct:sq_hdr_subdesc
tso	q_struct.h	/^	u64    tso:1;$/;"	m	struct:sq_hdr_subdesc
tso_hdrs	nicvf_queues.h	/^	char		*tso_hdrs;$/;"	m	struct:snd_queue
tso_hdrs_phys	nicvf_queues.h	/^	dma_addr_t	tso_hdrs_phys;$/;"	m	struct:snd_queue
tso_max_paysize	q_struct.h	/^	u64    tso_max_paysize:14; \/* W1 *\/$/;"	m	struct:sq_hdr_subdesc
tso_start	q_struct.h	/^	u64    tso_start:8;$/;"	m	struct:sq_hdr_subdesc
tstmp	q_struct.h	/^	u64    tstmp:1;$/;"	m	struct:sq_hdr_subdesc
tstmp_bgx_intf	q_struct.h	/^	u64 tstmp_bgx_intf:3;$/;"	m	struct:sq_cfg
tx_bcast_frames	nic.h	/^	u64 tx_bcast_frames;$/;"	m	struct:nicvf_hw_stats
tx_bytes	nic.h	/^	u64 tx_bytes;$/;"	m	struct:nicvf_hw_stats
tx_csum_overflow	nic.h	/^	u64 tx_csum_overflow;$/;"	m	struct:nicvf_drv_stats
tx_csum_overlap	nic.h	/^	u64 tx_csum_overlap;$/;"	m	struct:nicvf_drv_stats
tx_data_fault	nic.h	/^	u64 tx_data_fault;$/;"	m	struct:nicvf_drv_stats
tx_data_seq_err	nic.h	/^	u64 tx_data_seq_err;$/;"	m	struct:nicvf_drv_stats
tx_desc_fault	nic.h	/^	u64 tx_desc_fault;$/;"	m	struct:nicvf_drv_stats
tx_drops	nic.h	/^	u64 tx_drops;$/;"	m	struct:nicvf_hw_stats
tx_frames	nic.h	/^	u64 tx_frames;$/;"	m	struct:nicvf_hw_stats
tx_hdr_cons_err	nic.h	/^	u64 tx_hdr_cons_err;$/;"	m	struct:nicvf_drv_stats
tx_imm_size_oflow	nic.h	/^	u64 tx_imm_size_oflow;$/;"	m	struct:nicvf_drv_stats
tx_lock_viol	nic.h	/^	u64 tx_lock_viol;$/;"	m	struct:nicvf_drv_stats
tx_max_size_exceeded	nic.h	/^	u64 tx_max_size_exceeded;$/;"	m	struct:nicvf_drv_stats
tx_mcast_frames	nic.h	/^	u64 tx_mcast_frames;$/;"	m	struct:nicvf_hw_stats
tx_mem_fault	nic.h	/^	u64 tx_mem_fault;$/;"	m	struct:nicvf_drv_stats
tx_mem_seq_err	nic.h	/^	u64 tx_mem_seq_err;$/;"	m	struct:nicvf_drv_stats
tx_queues	nic.h	/^	u8			tx_queues;$/;"	m	struct:nicvf
tx_stat_mask	nic.h	/^	u8    tx_stat_mask;$/;"	m	struct:reset_stat_cfg
tx_stats	thunder_bgx.h	/^	u64 tx_stats[BGX_TX_STATS_COUNT];$/;"	m	struct:bgx_stats
tx_stats_reg_offset	nic.h	/^enum tx_stats_reg_offset {$/;"	g
tx_subdesc_err	nic.h	/^	u64 tx_subdesc_err;$/;"	m	struct:nicvf_drv_stats
tx_timeout	nic.h	/^	u64 tx_timeout;$/;"	m	struct:nicvf_drv_stats
tx_tso	nic.h	/^	u64 tx_tso;$/;"	m	struct:nicvf_drv_stats
tx_tstmp_conflict	nic.h	/^	u64 tx_tstmp_conflict;$/;"	m	struct:nicvf_drv_stats
tx_tstmp_timeout	nic.h	/^	u64 tx_tstmp_timeout;$/;"	m	struct:nicvf_drv_stats
tx_ucast_frames	nic.h	/^	u64 tx_ucast_frames;$/;"	m	struct:nicvf_hw_stats
txq_stop	nic.h	/^	u64 txq_stop;$/;"	m	struct:nicvf_drv_stats
txq_wake	nic.h	/^	u64 txq_wake;$/;"	m	struct:nicvf_drv_stats
u	q_struct.h	/^	u64    u[64];$/;"	m	union:cq_desc_t
unalign_base	nicvf_queues.h	/^	void		*unalign_base;$/;"	m	struct:q_desc_mem
use_training	thunder_bgx.c	/^	bool                    use_training;$/;"	m	struct:lmac	file:
vf_enabled	nic_main.c	/^	bool			vf_enabled[MAX_NUM_VFS_SUPPORTED];$/;"	m	struct:nicpf	file:
vf_id	nic.h	/^	u8			vf_id;$/;"	m	struct:nicvf
vf_id	nic.h	/^	u8    vf_id;$/;"	m	struct:bgx_stats_msg
vf_id	nic.h	/^	u8    vf_id;$/;"	m	struct:cpi_cfg_msg
vf_id	nic.h	/^	u8    vf_id;$/;"	m	struct:nic_cfg_msg
vf_id	nic.h	/^	u8    vf_id;$/;"	m	struct:nicvf_ptr
vf_id	nic.h	/^	u8    vf_id;$/;"	m	struct:rss_cfg_msg
vf_id	nic.h	/^	u8    vf_id;$/;"	m	struct:rss_sz_msg
vf_id	nic.h	/^	u8    vf_id;$/;"	m	struct:set_frs_msg
vf_id	nic.h	/^	u8    vf_id;$/;"	m	struct:set_loopback
vf_id	nic.h	/^	u8    vf_id;$/;"	m	struct:set_mac_msg
vf_id	nic.h	/^	u8    vf_id;$/;"	m	struct:sqs_alloc
vf_lmac_map	nic_main.c	/^	u8			*vf_lmac_map;$/;"	m	struct:nicpf	file:
vf_sqs	nic_main.c	/^	u8			vf_sqs[MAX_NUM_VFS_SUPPORTED][MAX_SQS_PER_VF];$/;"	m	struct:nicpf	file:
vlan2_found	q_struct.h	/^	u64   vlan2_found:1;$/;"	m	struct:cqe_rx_t
vlan2_ptr	q_struct.h	/^	u64   vlan2_ptr:8;$/;"	m	struct:cqe_rx_t
vlan2_stripped	q_struct.h	/^	u64   vlan2_stripped:1;$/;"	m	struct:cqe_rx_t
vlan_found	q_struct.h	/^	u64   vlan_found:1;$/;"	m	struct:cqe_rx_t
vlan_ptr	q_struct.h	/^	u64   vlan_ptr:8;$/;"	m	struct:cqe_rx_t
vlan_stripped	q_struct.h	/^	u64   vlan_stripped:1;$/;"	m	struct:cqe_rx_t
vlan_tci	q_struct.h	/^	u64   vlan_tci:16;$/;"	m	struct:cqe_rx_t
vnic	q_struct.h	/^	u64 vnic:7;$/;"	m	struct:qs_cfg
vnic_id	nicvf_queues.h	/^	u8		vnic_id;$/;"	m	struct:queue_set
wmem	q_struct.h	/^	u64    wmem:1;$/;"	m	struct:sq_mem_subdesc
xcv	thunder_xcv.c	/^static struct xcv *xcv;$/;"	v	typeref:struct:xcv	file:
xcv	thunder_xcv.c	/^struct xcv {$/;"	s	file:
xcv_cleanup_module	thunder_xcv.c	/^module_exit(xcv_cleanup_module);$/;"	v
xcv_cleanup_module	thunder_xcv.c	/^static void __exit xcv_cleanup_module(void)$/;"	f	file:
xcv_driver	thunder_xcv.c	/^static struct pci_driver xcv_driver = {$/;"	v	typeref:struct:pci_driver	file:
xcv_id_table	thunder_xcv.c	/^static const struct pci_device_id xcv_id_table[] = {$/;"	v	typeref:struct:pci_device_id	file:
xcv_init_hw	thunder_xcv.c	/^EXPORT_SYMBOL(xcv_init_hw);$/;"	v
xcv_init_hw	thunder_xcv.c	/^void xcv_init_hw(void)$/;"	f
xcv_init_module	thunder_xcv.c	/^module_init(xcv_init_module);$/;"	v
xcv_init_module	thunder_xcv.c	/^static int __init xcv_init_module(void)$/;"	f	file:
xcv_probe	thunder_xcv.c	/^static int xcv_probe(struct pci_dev *pdev, const struct pci_device_id *ent)$/;"	f	file:
xcv_remove	thunder_xcv.c	/^static void xcv_remove(struct pci_dev *pdev)$/;"	f	file:
xcv_setup_link	thunder_xcv.c	/^EXPORT_SYMBOL(xcv_setup_link);$/;"	v
xcv_setup_link	thunder_xcv.c	/^void xcv_setup_link(bool link_up, int link_speed)$/;"	f
xdp_desc_cnt	nicvf_queues.h	/^	u16		xdp_desc_cnt;$/;"	m	struct:snd_queue
xdp_free_cnt	nicvf_queues.h	/^	u16		xdp_free_cnt;$/;"	m	struct:snd_queue
xdp_page	nicvf_queues.h	/^	u64		*xdp_page;$/;"	m	struct:snd_queue
xdp_prog	nic.h	/^	struct bpf_prog         *xdp_prog;$/;"	m	struct:nicvf	typeref:struct:nicvf::bpf_prog
xdp_tx_queues	nic.h	/^	u8			xdp_tx_queues;$/;"	m	struct:nicvf
